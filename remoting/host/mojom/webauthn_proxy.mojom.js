// remoting/host/mojom/webauthn_proxy.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'remoting/host/mojom/webauthn_proxy.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('remoting.mojom');



  function WebAuthnExceptionDetails(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnExceptionDetails.prototype.initDefaults_ = function() {
    this.name = null;
    this.message = null;
  };
  WebAuthnExceptionDetails.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnExceptionDetails.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnExceptionDetails.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnExceptionDetails.message
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnExceptionDetails.encodedSize = codec.kStructHeaderSize + 16;

  WebAuthnExceptionDetails.decode = function(decoder) {
    var packed;
    var val = new WebAuthnExceptionDetails();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    val.message =
        decoder.decodeStruct(codec.String);
    return val;
  };

  WebAuthnExceptionDetails.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnExceptionDetails.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
    encoder.encodeStruct(codec.String, val.message);
  };
  function WebAuthnRequestCanceller_Cancel_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnRequestCanceller_Cancel_Params.prototype.initDefaults_ = function() {
  };
  WebAuthnRequestCanceller_Cancel_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnRequestCanceller_Cancel_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnRequestCanceller_Cancel_Params.encodedSize = codec.kStructHeaderSize + 0;

  WebAuthnRequestCanceller_Cancel_Params.decode = function(decoder) {
    var packed;
    var val = new WebAuthnRequestCanceller_Cancel_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  WebAuthnRequestCanceller_Cancel_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnRequestCanceller_Cancel_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function WebAuthnRequestCanceller_Cancel_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnRequestCanceller_Cancel_ResponseParams.prototype.initDefaults_ = function() {
    this.wasCanceled = false;
  };
  WebAuthnRequestCanceller_Cancel_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnRequestCanceller_Cancel_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  WebAuthnRequestCanceller_Cancel_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  WebAuthnRequestCanceller_Cancel_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new WebAuthnRequestCanceller_Cancel_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.wasCanceled = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  WebAuthnRequestCanceller_Cancel_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnRequestCanceller_Cancel_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.wasCanceled & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.prototype.initDefaults_ = function() {
  };
  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.encodedSize = codec.kStructHeaderSize + 0;

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.prototype.initDefaults_ = function() {
    this.isAvailable = false;
  };
  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isAvailable = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isAvailable & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function WebAuthnProxy_Create_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_Create_Params.prototype.initDefaults_ = function() {
    this.requestData = null;
    this.requestCanceller = new bindings.InterfaceRequest();
  };
  WebAuthnProxy_Create_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_Create_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Create_Params.requestData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Create_Params.requestCanceller
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnProxy_Create_Params.encodedSize = codec.kStructHeaderSize + 16;

  WebAuthnProxy_Create_Params.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_Create_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.requestData =
        decoder.decodeStruct(codec.String);
    val.requestCanceller =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  WebAuthnProxy_Create_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_Create_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.requestData);
    encoder.encodeStruct(codec.InterfaceRequest, val.requestCanceller);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function WebAuthnProxy_Create_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_Create_ResponseParams.prototype.initDefaults_ = function() {
    this.response = null;
  };
  WebAuthnProxy_Create_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_Create_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Create_ResponseParams.response
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, WebAuthnCreateResponse, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnProxy_Create_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  WebAuthnProxy_Create_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_Create_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.response =
        decoder.decodeStruct(WebAuthnCreateResponse);
    return val;
  };

  WebAuthnProxy_Create_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_Create_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(WebAuthnCreateResponse, val.response);
  };
  function WebAuthnProxy_Get_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_Get_Params.prototype.initDefaults_ = function() {
    this.requestData = null;
    this.requestCanceller = new bindings.InterfaceRequest();
  };
  WebAuthnProxy_Get_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_Get_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Get_Params.requestData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Get_Params.requestCanceller
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnProxy_Get_Params.encodedSize = codec.kStructHeaderSize + 16;

  WebAuthnProxy_Get_Params.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_Get_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.requestData =
        decoder.decodeStruct(codec.String);
    val.requestCanceller =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  WebAuthnProxy_Get_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_Get_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.requestData);
    encoder.encodeStruct(codec.InterfaceRequest, val.requestCanceller);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function WebAuthnProxy_Get_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebAuthnProxy_Get_ResponseParams.prototype.initDefaults_ = function() {
    this.response = null;
  };
  WebAuthnProxy_Get_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebAuthnProxy_Get_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebAuthnProxy_Get_ResponseParams.response
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, WebAuthnGetResponse, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebAuthnProxy_Get_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  WebAuthnProxy_Get_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new WebAuthnProxy_Get_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.response =
        decoder.decodeStruct(WebAuthnGetResponse);
    return val;
  };

  WebAuthnProxy_Get_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebAuthnProxy_Get_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(WebAuthnGetResponse, val.response);
  };

  function WebAuthnCreateResponse(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  WebAuthnCreateResponse.Tags = {
    errorDetails: 0,
    responseData: 1,
  };

  WebAuthnCreateResponse.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  WebAuthnCreateResponse.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "errorDetails",
        "responseData",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a WebAuthnCreateResponse member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(WebAuthnCreateResponse.prototype, "errorDetails", {
    get: function() {
      if (this.$tag != WebAuthnCreateResponse.Tags.errorDetails) {
        throw new ReferenceError(
            "WebAuthnCreateResponse.errorDetails is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = WebAuthnCreateResponse.Tags.errorDetails;
      this.$data = value;
    }
  });
  Object.defineProperty(WebAuthnCreateResponse.prototype, "responseData", {
    get: function() {
      if (this.$tag != WebAuthnCreateResponse.Tags.responseData) {
        throw new ReferenceError(
            "WebAuthnCreateResponse.responseData is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = WebAuthnCreateResponse.Tags.responseData;
      this.$data = value;
    }
  });


    WebAuthnCreateResponse.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case WebAuthnCreateResponse.Tags.errorDetails:
          encoder.encodeStructPointer(WebAuthnExceptionDetails, val.errorDetails);
          break;
        case WebAuthnCreateResponse.Tags.responseData:
          encoder.encodeStruct(codec.String, val.responseData);
          break;
      }
      encoder.align();
    };


    WebAuthnCreateResponse.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new WebAuthnCreateResponse();
      var tag = decoder.readUint32();
      switch (tag) {
        case WebAuthnCreateResponse.Tags.errorDetails:
          result.errorDetails = decoder.decodeStructPointer(WebAuthnExceptionDetails);
          break;
        case WebAuthnCreateResponse.Tags.responseData:
          result.responseData = decoder.decodeStruct(codec.String);
          break;
      }
      decoder.align();

      return result;
    };


    WebAuthnCreateResponse.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case WebAuthnCreateResponse.Tags.errorDetails:
          

    // validate WebAuthnCreateResponse.errorDetails
    err = messageValidator.validateStructPointer(data_offset, WebAuthnExceptionDetails, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
        case WebAuthnCreateResponse.Tags.responseData:
          

    // validate WebAuthnCreateResponse.responseData
    err = messageValidator.validateStringPointer(data_offset, false)
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  WebAuthnCreateResponse.encodedSize = 16;

  function WebAuthnGetResponse(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  WebAuthnGetResponse.Tags = {
    errorDetails: 0,
    responseData: 1,
  };

  WebAuthnGetResponse.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  WebAuthnGetResponse.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "errorDetails",
        "responseData",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a WebAuthnGetResponse member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(WebAuthnGetResponse.prototype, "errorDetails", {
    get: function() {
      if (this.$tag != WebAuthnGetResponse.Tags.errorDetails) {
        throw new ReferenceError(
            "WebAuthnGetResponse.errorDetails is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = WebAuthnGetResponse.Tags.errorDetails;
      this.$data = value;
    }
  });
  Object.defineProperty(WebAuthnGetResponse.prototype, "responseData", {
    get: function() {
      if (this.$tag != WebAuthnGetResponse.Tags.responseData) {
        throw new ReferenceError(
            "WebAuthnGetResponse.responseData is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = WebAuthnGetResponse.Tags.responseData;
      this.$data = value;
    }
  });


    WebAuthnGetResponse.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case WebAuthnGetResponse.Tags.errorDetails:
          encoder.encodeStructPointer(WebAuthnExceptionDetails, val.errorDetails);
          break;
        case WebAuthnGetResponse.Tags.responseData:
          encoder.encodeStruct(codec.String, val.responseData);
          break;
      }
      encoder.align();
    };


    WebAuthnGetResponse.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new WebAuthnGetResponse();
      var tag = decoder.readUint32();
      switch (tag) {
        case WebAuthnGetResponse.Tags.errorDetails:
          result.errorDetails = decoder.decodeStructPointer(WebAuthnExceptionDetails);
          break;
        case WebAuthnGetResponse.Tags.responseData:
          result.responseData = decoder.decodeStruct(codec.String);
          break;
      }
      decoder.align();

      return result;
    };


    WebAuthnGetResponse.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case WebAuthnGetResponse.Tags.errorDetails:
          

    // validate WebAuthnGetResponse.errorDetails
    err = messageValidator.validateStructPointer(data_offset, WebAuthnExceptionDetails, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
        case WebAuthnGetResponse.Tags.responseData:
          

    // validate WebAuthnGetResponse.responseData
    err = messageValidator.validateStringPointer(data_offset, false)
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  WebAuthnGetResponse.encodedSize = 16;
  var kWebAuthnRequestCanceller_Cancel_Name = 1240149904;

  function WebAuthnRequestCancellerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WebAuthnRequestCanceller,
                                                   handleOrPtrInfo);
  }

  function WebAuthnRequestCancellerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WebAuthnRequestCanceller, associatedInterfacePtrInfo);
  }

  WebAuthnRequestCancellerAssociatedPtr.prototype =
      Object.create(WebAuthnRequestCancellerPtr.prototype);
  WebAuthnRequestCancellerAssociatedPtr.prototype.constructor =
      WebAuthnRequestCancellerAssociatedPtr;

  function WebAuthnRequestCancellerProxy(receiver) {
    this.receiver_ = receiver;
  }
  WebAuthnRequestCancellerPtr.prototype.cancel = function() {
    return WebAuthnRequestCancellerProxy.prototype.cancel
        .apply(this.ptr.getProxy(), arguments);
  };

  WebAuthnRequestCancellerProxy.prototype.cancel = function() {
    var params_ = new WebAuthnRequestCanceller_Cancel_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kWebAuthnRequestCanceller_Cancel_Name,
          codec.align(WebAuthnRequestCanceller_Cancel_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(WebAuthnRequestCanceller_Cancel_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(WebAuthnRequestCanceller_Cancel_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function WebAuthnRequestCancellerStub(delegate) {
    this.delegate_ = delegate;
  }
  WebAuthnRequestCancellerStub.prototype.cancel = function() {
    return this.delegate_ && this.delegate_.cancel && this.delegate_.cancel();
  }

  WebAuthnRequestCancellerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  WebAuthnRequestCancellerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWebAuthnRequestCanceller_Cancel_Name:
      var params = reader.decodeStruct(WebAuthnRequestCanceller_Cancel_Params);
      this.cancel().then(function(response) {
        var responseParams =
            new WebAuthnRequestCanceller_Cancel_ResponseParams();
        responseParams.wasCanceled = response.wasCanceled;
        var builder = new codec.MessageV1Builder(
            kWebAuthnRequestCanceller_Cancel_Name,
            codec.align(WebAuthnRequestCanceller_Cancel_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(WebAuthnRequestCanceller_Cancel_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateWebAuthnRequestCancellerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWebAuthnRequestCanceller_Cancel_Name:
        if (message.expectsResponse())
          paramsClass = WebAuthnRequestCanceller_Cancel_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWebAuthnRequestCancellerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kWebAuthnRequestCanceller_Cancel_Name:
        if (message.isResponse())
          paramsClass = WebAuthnRequestCanceller_Cancel_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var WebAuthnRequestCanceller = {
    name: 'remoting.mojom.WebAuthnRequestCanceller',
    kVersion: 0,
    ptrClass: WebAuthnRequestCancellerPtr,
    proxyClass: WebAuthnRequestCancellerProxy,
    stubClass: WebAuthnRequestCancellerStub,
    validateRequest: validateWebAuthnRequestCancellerRequest,
    validateResponse: validateWebAuthnRequestCancellerResponse,
  };
  WebAuthnRequestCancellerStub.prototype.validator = validateWebAuthnRequestCancellerRequest;
  WebAuthnRequestCancellerProxy.prototype.validator = validateWebAuthnRequestCancellerResponse;
  var kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name = 1042980180;
  var kWebAuthnProxy_Create_Name = 428302438;
  var kWebAuthnProxy_Get_Name = 19748313;

  function WebAuthnProxyPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WebAuthnProxy,
                                                   handleOrPtrInfo);
  }

  function WebAuthnProxyAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WebAuthnProxy, associatedInterfacePtrInfo);
  }

  WebAuthnProxyAssociatedPtr.prototype =
      Object.create(WebAuthnProxyPtr.prototype);
  WebAuthnProxyAssociatedPtr.prototype.constructor =
      WebAuthnProxyAssociatedPtr;

  function WebAuthnProxyProxy(receiver) {
    this.receiver_ = receiver;
  }
  WebAuthnProxyPtr.prototype.isUserVerifyingPlatformAuthenticatorAvailable = function() {
    return WebAuthnProxyProxy.prototype.isUserVerifyingPlatformAuthenticatorAvailable
        .apply(this.ptr.getProxy(), arguments);
  };

  WebAuthnProxyProxy.prototype.isUserVerifyingPlatformAuthenticatorAvailable = function() {
    var params_ = new WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name,
          codec.align(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  WebAuthnProxyPtr.prototype.create = function() {
    return WebAuthnProxyProxy.prototype.create
        .apply(this.ptr.getProxy(), arguments);
  };

  WebAuthnProxyProxy.prototype.create = function(requestData, requestCanceller) {
    var params_ = new WebAuthnProxy_Create_Params();
    params_.requestData = requestData;
    params_.requestCanceller = requestCanceller;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kWebAuthnProxy_Create_Name,
          codec.align(WebAuthnProxy_Create_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(WebAuthnProxy_Create_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(WebAuthnProxy_Create_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  WebAuthnProxyPtr.prototype.get = function() {
    return WebAuthnProxyProxy.prototype.get
        .apply(this.ptr.getProxy(), arguments);
  };

  WebAuthnProxyProxy.prototype.get = function(requestData, requestCanceller) {
    var params_ = new WebAuthnProxy_Get_Params();
    params_.requestData = requestData;
    params_.requestCanceller = requestCanceller;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kWebAuthnProxy_Get_Name,
          codec.align(WebAuthnProxy_Get_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(WebAuthnProxy_Get_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(WebAuthnProxy_Get_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function WebAuthnProxyStub(delegate) {
    this.delegate_ = delegate;
  }
  WebAuthnProxyStub.prototype.isUserVerifyingPlatformAuthenticatorAvailable = function() {
    return this.delegate_ && this.delegate_.isUserVerifyingPlatformAuthenticatorAvailable && this.delegate_.isUserVerifyingPlatformAuthenticatorAvailable();
  }
  WebAuthnProxyStub.prototype.create = function(requestData, requestCanceller) {
    return this.delegate_ && this.delegate_.create && this.delegate_.create(requestData, requestCanceller);
  }
  WebAuthnProxyStub.prototype.get = function(requestData, requestCanceller) {
    return this.delegate_ && this.delegate_.get && this.delegate_.get(requestData, requestCanceller);
  }

  WebAuthnProxyStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  WebAuthnProxyStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name:
      var params = reader.decodeStruct(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params);
      this.isUserVerifyingPlatformAuthenticatorAvailable().then(function(response) {
        var responseParams =
            new WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams();
        responseParams.isAvailable = response.isAvailable;
        var builder = new codec.MessageV1Builder(
            kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name,
            codec.align(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kWebAuthnProxy_Create_Name:
      var params = reader.decodeStruct(WebAuthnProxy_Create_Params);
      this.create(params.requestData, params.requestCanceller).then(function(response) {
        var responseParams =
            new WebAuthnProxy_Create_ResponseParams();
        responseParams.response = response.response;
        var builder = new codec.MessageV1Builder(
            kWebAuthnProxy_Create_Name,
            codec.align(WebAuthnProxy_Create_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(WebAuthnProxy_Create_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kWebAuthnProxy_Get_Name:
      var params = reader.decodeStruct(WebAuthnProxy_Get_Params);
      this.get(params.requestData, params.requestCanceller).then(function(response) {
        var responseParams =
            new WebAuthnProxy_Get_ResponseParams();
        responseParams.response = response.response;
        var builder = new codec.MessageV1Builder(
            kWebAuthnProxy_Get_Name,
            codec.align(WebAuthnProxy_Get_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(WebAuthnProxy_Get_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateWebAuthnProxyRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name:
        if (message.expectsResponse())
          paramsClass = WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Params;
      break;
      case kWebAuthnProxy_Create_Name:
        if (message.expectsResponse())
          paramsClass = WebAuthnProxy_Create_Params;
      break;
      case kWebAuthnProxy_Get_Name:
        if (message.expectsResponse())
          paramsClass = WebAuthnProxy_Get_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWebAuthnProxyResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kWebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_Name:
        if (message.isResponse())
          paramsClass = WebAuthnProxy_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams;
        break;
      case kWebAuthnProxy_Create_Name:
        if (message.isResponse())
          paramsClass = WebAuthnProxy_Create_ResponseParams;
        break;
      case kWebAuthnProxy_Get_Name:
        if (message.isResponse())
          paramsClass = WebAuthnProxy_Get_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var WebAuthnProxy = {
    name: 'remoting.mojom.WebAuthnProxy',
    kVersion: 0,
    ptrClass: WebAuthnProxyPtr,
    proxyClass: WebAuthnProxyProxy,
    stubClass: WebAuthnProxyStub,
    validateRequest: validateWebAuthnProxyRequest,
    validateResponse: validateWebAuthnProxyResponse,
  };
  WebAuthnProxyStub.prototype.validator = validateWebAuthnProxyRequest;
  WebAuthnProxyProxy.prototype.validator = validateWebAuthnProxyResponse;
  exports.WebAuthnExceptionDetails = WebAuthnExceptionDetails;
  exports.WebAuthnCreateResponse = WebAuthnCreateResponse;
  exports.WebAuthnGetResponse = WebAuthnGetResponse;
  exports.WebAuthnRequestCanceller = WebAuthnRequestCanceller;
  exports.WebAuthnRequestCancellerPtr = WebAuthnRequestCancellerPtr;
  exports.WebAuthnRequestCancellerAssociatedPtr = WebAuthnRequestCancellerAssociatedPtr;
  exports.WebAuthnProxy = WebAuthnProxy;
  exports.WebAuthnProxyPtr = WebAuthnProxyPtr;
  exports.WebAuthnProxyAssociatedPtr = WebAuthnProxyAssociatedPtr;
})();