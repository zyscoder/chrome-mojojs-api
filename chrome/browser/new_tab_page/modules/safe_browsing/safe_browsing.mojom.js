// chrome/browser/new_tab_page/modules/safe_browsing/safe_browsing.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/browser/new_tab_page/modules/safe_browsing/safe_browsing.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('ntp.safeBrowsing.mojom');



  function SafeBrowsingHandler_CanShowModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SafeBrowsingHandler_CanShowModule_Params.prototype.initDefaults_ = function() {
  };
  SafeBrowsingHandler_CanShowModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SafeBrowsingHandler_CanShowModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SafeBrowsingHandler_CanShowModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  SafeBrowsingHandler_CanShowModule_Params.decode = function(decoder) {
    var packed;
    var val = new SafeBrowsingHandler_CanShowModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SafeBrowsingHandler_CanShowModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SafeBrowsingHandler_CanShowModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SafeBrowsingHandler_CanShowModule_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SafeBrowsingHandler_CanShowModule_ResponseParams.prototype.initDefaults_ = function() {
    this.show = false;
  };
  SafeBrowsingHandler_CanShowModule_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SafeBrowsingHandler_CanShowModule_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  SafeBrowsingHandler_CanShowModule_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  SafeBrowsingHandler_CanShowModule_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new SafeBrowsingHandler_CanShowModule_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.show = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SafeBrowsingHandler_CanShowModule_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SafeBrowsingHandler_CanShowModule_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.show & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function SafeBrowsingHandler_ProcessModuleClick_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SafeBrowsingHandler_ProcessModuleClick_Params.prototype.initDefaults_ = function() {
  };
  SafeBrowsingHandler_ProcessModuleClick_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SafeBrowsingHandler_ProcessModuleClick_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SafeBrowsingHandler_ProcessModuleClick_Params.encodedSize = codec.kStructHeaderSize + 0;

  SafeBrowsingHandler_ProcessModuleClick_Params.decode = function(decoder) {
    var packed;
    var val = new SafeBrowsingHandler_ProcessModuleClick_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SafeBrowsingHandler_ProcessModuleClick_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SafeBrowsingHandler_ProcessModuleClick_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SafeBrowsingHandler_DismissModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SafeBrowsingHandler_DismissModule_Params.prototype.initDefaults_ = function() {
  };
  SafeBrowsingHandler_DismissModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SafeBrowsingHandler_DismissModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SafeBrowsingHandler_DismissModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  SafeBrowsingHandler_DismissModule_Params.decode = function(decoder) {
    var packed;
    var val = new SafeBrowsingHandler_DismissModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SafeBrowsingHandler_DismissModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SafeBrowsingHandler_DismissModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SafeBrowsingHandler_RestoreModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SafeBrowsingHandler_RestoreModule_Params.prototype.initDefaults_ = function() {
  };
  SafeBrowsingHandler_RestoreModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SafeBrowsingHandler_RestoreModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SafeBrowsingHandler_RestoreModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  SafeBrowsingHandler_RestoreModule_Params.decode = function(decoder) {
    var packed;
    var val = new SafeBrowsingHandler_RestoreModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SafeBrowsingHandler_RestoreModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SafeBrowsingHandler_RestoreModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kSafeBrowsingHandler_CanShowModule_Name = 8996277;
  var kSafeBrowsingHandler_ProcessModuleClick_Name = 1872113588;
  var kSafeBrowsingHandler_DismissModule_Name = 1660320922;
  var kSafeBrowsingHandler_RestoreModule_Name = 919391863;

  function SafeBrowsingHandlerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SafeBrowsingHandler,
                                                   handleOrPtrInfo);
  }

  function SafeBrowsingHandlerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SafeBrowsingHandler, associatedInterfacePtrInfo);
  }

  SafeBrowsingHandlerAssociatedPtr.prototype =
      Object.create(SafeBrowsingHandlerPtr.prototype);
  SafeBrowsingHandlerAssociatedPtr.prototype.constructor =
      SafeBrowsingHandlerAssociatedPtr;

  function SafeBrowsingHandlerProxy(receiver) {
    this.receiver_ = receiver;
  }
  SafeBrowsingHandlerPtr.prototype.canShowModule = function() {
    return SafeBrowsingHandlerProxy.prototype.canShowModule
        .apply(this.ptr.getProxy(), arguments);
  };

  SafeBrowsingHandlerProxy.prototype.canShowModule = function() {
    var params_ = new SafeBrowsingHandler_CanShowModule_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kSafeBrowsingHandler_CanShowModule_Name,
          codec.align(SafeBrowsingHandler_CanShowModule_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(SafeBrowsingHandler_CanShowModule_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(SafeBrowsingHandler_CanShowModule_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  SafeBrowsingHandlerPtr.prototype.processModuleClick = function() {
    return SafeBrowsingHandlerProxy.prototype.processModuleClick
        .apply(this.ptr.getProxy(), arguments);
  };

  SafeBrowsingHandlerProxy.prototype.processModuleClick = function() {
    var params_ = new SafeBrowsingHandler_ProcessModuleClick_Params();
    var builder = new codec.MessageV0Builder(
        kSafeBrowsingHandler_ProcessModuleClick_Name,
        codec.align(SafeBrowsingHandler_ProcessModuleClick_Params.encodedSize));
    builder.encodeStruct(SafeBrowsingHandler_ProcessModuleClick_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SafeBrowsingHandlerPtr.prototype.dismissModule = function() {
    return SafeBrowsingHandlerProxy.prototype.dismissModule
        .apply(this.ptr.getProxy(), arguments);
  };

  SafeBrowsingHandlerProxy.prototype.dismissModule = function() {
    var params_ = new SafeBrowsingHandler_DismissModule_Params();
    var builder = new codec.MessageV0Builder(
        kSafeBrowsingHandler_DismissModule_Name,
        codec.align(SafeBrowsingHandler_DismissModule_Params.encodedSize));
    builder.encodeStruct(SafeBrowsingHandler_DismissModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SafeBrowsingHandlerPtr.prototype.restoreModule = function() {
    return SafeBrowsingHandlerProxy.prototype.restoreModule
        .apply(this.ptr.getProxy(), arguments);
  };

  SafeBrowsingHandlerProxy.prototype.restoreModule = function() {
    var params_ = new SafeBrowsingHandler_RestoreModule_Params();
    var builder = new codec.MessageV0Builder(
        kSafeBrowsingHandler_RestoreModule_Name,
        codec.align(SafeBrowsingHandler_RestoreModule_Params.encodedSize));
    builder.encodeStruct(SafeBrowsingHandler_RestoreModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SafeBrowsingHandlerStub(delegate) {
    this.delegate_ = delegate;
  }
  SafeBrowsingHandlerStub.prototype.canShowModule = function() {
    return this.delegate_ && this.delegate_.canShowModule && this.delegate_.canShowModule();
  }
  SafeBrowsingHandlerStub.prototype.processModuleClick = function() {
    return this.delegate_ && this.delegate_.processModuleClick && this.delegate_.processModuleClick();
  }
  SafeBrowsingHandlerStub.prototype.dismissModule = function() {
    return this.delegate_ && this.delegate_.dismissModule && this.delegate_.dismissModule();
  }
  SafeBrowsingHandlerStub.prototype.restoreModule = function() {
    return this.delegate_ && this.delegate_.restoreModule && this.delegate_.restoreModule();
  }

  SafeBrowsingHandlerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSafeBrowsingHandler_ProcessModuleClick_Name:
      var params = reader.decodeStruct(SafeBrowsingHandler_ProcessModuleClick_Params);
      this.processModuleClick();
      return true;
    case kSafeBrowsingHandler_DismissModule_Name:
      var params = reader.decodeStruct(SafeBrowsingHandler_DismissModule_Params);
      this.dismissModule();
      return true;
    case kSafeBrowsingHandler_RestoreModule_Name:
      var params = reader.decodeStruct(SafeBrowsingHandler_RestoreModule_Params);
      this.restoreModule();
      return true;
    default:
      return false;
    }
  };

  SafeBrowsingHandlerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSafeBrowsingHandler_CanShowModule_Name:
      var params = reader.decodeStruct(SafeBrowsingHandler_CanShowModule_Params);
      this.canShowModule().then(function(response) {
        var responseParams =
            new SafeBrowsingHandler_CanShowModule_ResponseParams();
        responseParams.show = response.show;
        var builder = new codec.MessageV1Builder(
            kSafeBrowsingHandler_CanShowModule_Name,
            codec.align(SafeBrowsingHandler_CanShowModule_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(SafeBrowsingHandler_CanShowModule_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateSafeBrowsingHandlerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSafeBrowsingHandler_CanShowModule_Name:
        if (message.expectsResponse())
          paramsClass = SafeBrowsingHandler_CanShowModule_Params;
      break;
      case kSafeBrowsingHandler_ProcessModuleClick_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SafeBrowsingHandler_ProcessModuleClick_Params;
      break;
      case kSafeBrowsingHandler_DismissModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SafeBrowsingHandler_DismissModule_Params;
      break;
      case kSafeBrowsingHandler_RestoreModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SafeBrowsingHandler_RestoreModule_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSafeBrowsingHandlerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kSafeBrowsingHandler_CanShowModule_Name:
        if (message.isResponse())
          paramsClass = SafeBrowsingHandler_CanShowModule_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var SafeBrowsingHandler = {
    name: 'ntp.safe_browsing.mojom.SafeBrowsingHandler',
    kVersion: 0,
    ptrClass: SafeBrowsingHandlerPtr,
    proxyClass: SafeBrowsingHandlerProxy,
    stubClass: SafeBrowsingHandlerStub,
    validateRequest: validateSafeBrowsingHandlerRequest,
    validateResponse: validateSafeBrowsingHandlerResponse,
  };
  SafeBrowsingHandlerStub.prototype.validator = validateSafeBrowsingHandlerRequest;
  SafeBrowsingHandlerProxy.prototype.validator = validateSafeBrowsingHandlerResponse;
  exports.SafeBrowsingHandler = SafeBrowsingHandler;
  exports.SafeBrowsingHandlerPtr = SafeBrowsingHandlerPtr;
  exports.SafeBrowsingHandlerAssociatedPtr = SafeBrowsingHandlerAssociatedPtr;
})();