// chrome/common/net/net_error_page_support.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/net/net_error_page_support.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('chrome.mojom');




  function NetErrorPageSupportPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(NetErrorPageSupport,
                                                   handleOrPtrInfo);
  }

  function NetErrorPageSupportAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        NetErrorPageSupport, associatedInterfacePtrInfo);
  }

  NetErrorPageSupportAssociatedPtr.prototype =
      Object.create(NetErrorPageSupportPtr.prototype);
  NetErrorPageSupportAssociatedPtr.prototype.constructor =
      NetErrorPageSupportAssociatedPtr;

  function NetErrorPageSupportProxy(receiver) {
    this.receiver_ = receiver;
  }

  function NetErrorPageSupportStub(delegate) {
    this.delegate_ = delegate;
  }

  NetErrorPageSupportStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  NetErrorPageSupportStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateNetErrorPageSupportRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateNetErrorPageSupportResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var NetErrorPageSupport = {
    name: 'chrome.mojom.NetErrorPageSupport',
    kVersion: 0,
    ptrClass: NetErrorPageSupportPtr,
    proxyClass: NetErrorPageSupportProxy,
    stubClass: NetErrorPageSupportStub,
    validateRequest: validateNetErrorPageSupportRequest,
    validateResponse: null,
  };
  NetErrorPageSupportStub.prototype.validator = validateNetErrorPageSupportRequest;
  NetErrorPageSupportProxy.prototype.validator = null;
  exports.NetErrorPageSupport = NetErrorPageSupport;
  exports.NetErrorPageSupportPtr = NetErrorPageSupportPtr;
  exports.NetErrorPageSupportAssociatedPtr = NetErrorPageSupportAssociatedPtr;
})();