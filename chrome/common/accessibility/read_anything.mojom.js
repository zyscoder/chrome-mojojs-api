// chrome/common/accessibility/read_anything.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/accessibility/read_anything.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('readAnything.mojom');
  var skcolor$ =
      mojo.internal.exposeNamespace('skia.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'skia/public/mojom/skcolor.mojom', '../../../skia/public/mojom/skcolor.mojom.js');
  }
  var ax_event$ =
      mojo.internal.exposeNamespace('ax.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/accessibility/mojom/ax_event.mojom', '../../../ui/accessibility/mojom/ax_event.mojom.js');
  }
  var ax_tree_id$ =
      mojo.internal.exposeNamespace('ax.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/accessibility/mojom/ax_tree_id.mojom', '../../../ui/accessibility/mojom/ax_tree_id.mojom.js');
  }
  var ax_tree_update$ =
      mojo.internal.exposeNamespace('ax.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/accessibility/mojom/ax_tree_update.mojom', '../../../ui/accessibility/mojom/ax_tree_update.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../url/mojom/url.mojom.js');
  }


  var Colors = {};
  Colors.kDefault = 0;
  Colors.kLight = 1;
  Colors.kDark = 2;
  Colors.kYellow = 3;
  Colors.kBlue = 4;
  Colors.MIN_VALUE = 0;
  Colors.MAX_VALUE = 4;
  Colors.DEFAULT_VALUE = 0;

  Colors.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    }
    return false;
  };

  Colors.toKnownEnumValue = function(value) {
    if (this.isKnownEnumValue(value))
      return value;
    return this.DEFAULT_VALUE;
  };

  Colors.validate = function(enumValue) {
    const isExtensible = true;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var LetterSpacing = {};
  LetterSpacing.kTightDeprecated = 0;
  LetterSpacing.kStandard = 1;
  LetterSpacing.kWide = 2;
  LetterSpacing.kVeryWide = 3;
  LetterSpacing.MIN_VALUE = 0;
  LetterSpacing.MAX_VALUE = 3;
  LetterSpacing.DEFAULT_VALUE = 1;

  LetterSpacing.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    }
    return false;
  };

  LetterSpacing.toKnownEnumValue = function(value) {
    if (this.isKnownEnumValue(value))
      return value;
    return this.DEFAULT_VALUE;
  };

  LetterSpacing.validate = function(enumValue) {
    const isExtensible = true;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var LineSpacing = {};
  LineSpacing.kTightDeprecated = 0;
  LineSpacing.kStandard = 1;
  LineSpacing.kLoose = 2;
  LineSpacing.kVeryLoose = 3;
  LineSpacing.MIN_VALUE = 0;
  LineSpacing.MAX_VALUE = 3;
  LineSpacing.DEFAULT_VALUE = 2;

  LineSpacing.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    }
    return false;
  };

  LineSpacing.toKnownEnumValue = function(value) {
    if (this.isKnownEnumValue(value))
      return value;
    return this.DEFAULT_VALUE;
  };

  LineSpacing.validate = function(enumValue) {
    const isExtensible = true;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var HighlightGranularity = {};
  HighlightGranularity.kOn = 0;
  HighlightGranularity.kOff = 1;
  HighlightGranularity.MIN_VALUE = 0;
  HighlightGranularity.MAX_VALUE = 1;
  HighlightGranularity.DEFAULT_VALUE = 0;

  HighlightGranularity.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  HighlightGranularity.toKnownEnumValue = function(value) {
    if (this.isKnownEnumValue(value))
      return value;
    return this.DEFAULT_VALUE;
  };

  HighlightGranularity.validate = function(enumValue) {
    const isExtensible = true;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function ReadAnythingTheme(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  ReadAnythingTheme.prototype.initDefaults_ = function() {
    this.fontName = null;
    this.fontSize = 0;
    this.lineSpacing = 0;
    this.foregroundColor = null;
    this.backgroundColor = null;
    this.letterSpacing = 0;
  };
  ReadAnythingTheme.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  ReadAnythingTheme.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ReadAnythingTheme.fontName
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;



    // validate ReadAnythingTheme.foregroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ReadAnythingTheme.backgroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ReadAnythingTheme.lineSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 12, LineSpacing);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ReadAnythingTheme.letterSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 32, LetterSpacing);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  ReadAnythingTheme.encodedSize = codec.kStructHeaderSize + 40;

  ReadAnythingTheme.decode = function(decoder) {
    var packed;
    var val = new ReadAnythingTheme();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.fontName =
        decoder.decodeStruct(codec.String);
    val.fontSize =
        decoder.decodeStruct(codec.Float);
    val.lineSpacing =
        decoder.decodeStruct(new codec.Enum(LineSpacing));
    val.foregroundColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.backgroundColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.letterSpacing =
        decoder.decodeStruct(new codec.Enum(LetterSpacing));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  ReadAnythingTheme.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(ReadAnythingTheme.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.fontName);
    encoder.encodeStruct(codec.Float, val.fontSize);
    encoder.encodeStruct(codec.Int32, val.lineSpacing);
    encoder.encodeStructPointer(skcolor$.SkColor, val.foregroundColor);
    encoder.encodeStructPointer(skcolor$.SkColor, val.backgroundColor);
    encoder.encodeStruct(codec.Int32, val.letterSpacing);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.prototype.initDefaults_ = function() {
    this.page = new UntrustedPagePtr();
    this.handler = new bindings.InterfaceRequest();
  };
  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.page
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.handler
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.encodedSize = codec.kStructHeaderSize + 16;

  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.page =
        decoder.decodeStruct(new codec.Interface(UntrustedPagePtr));
    val.handler =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(UntrustedPagePtr), val.page);
    encoder.encodeStruct(codec.InterfaceRequest, val.handler);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnCopy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnCopy_Params.prototype.initDefaults_ = function() {
  };
  UntrustedPageHandler_OnCopy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnCopy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnCopy_Params.encodedSize = codec.kStructHeaderSize + 0;

  UntrustedPageHandler_OnCopy_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnCopy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  UntrustedPageHandler_OnCopy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnCopy_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function UntrustedPageHandler_OnLineSpaceChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnLineSpaceChange_Params.prototype.initDefaults_ = function() {
    this.lineSpacing = 0;
  };
  UntrustedPageHandler_OnLineSpaceChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnLineSpaceChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnLineSpaceChange_Params.lineSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, LineSpacing);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnLineSpaceChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnLineSpaceChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnLineSpaceChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.lineSpacing =
        decoder.decodeStruct(new codec.Enum(LineSpacing));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandler_OnLineSpaceChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnLineSpaceChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.lineSpacing);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnLetterSpaceChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnLetterSpaceChange_Params.prototype.initDefaults_ = function() {
    this.letterSpacing = 0;
  };
  UntrustedPageHandler_OnLetterSpaceChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnLetterSpaceChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnLetterSpaceChange_Params.letterSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, LetterSpacing);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnLetterSpaceChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnLetterSpaceChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnLetterSpaceChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.letterSpacing =
        decoder.decodeStruct(new codec.Enum(LetterSpacing));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandler_OnLetterSpaceChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnLetterSpaceChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.letterSpacing);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnFontChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnFontChange_Params.prototype.initDefaults_ = function() {
    this.font = null;
  };
  UntrustedPageHandler_OnFontChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnFontChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnFontChange_Params.font
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnFontChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnFontChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnFontChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.font =
        decoder.decodeStruct(codec.String);
    return val;
  };

  UntrustedPageHandler_OnFontChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnFontChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.font);
  };
  function UntrustedPageHandler_OnFontSizeChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnFontSizeChange_Params.prototype.initDefaults_ = function() {
    this.fontSize = 0;
  };
  UntrustedPageHandler_OnFontSizeChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnFontSizeChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnFontSizeChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnFontSizeChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnFontSizeChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.fontSize =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  UntrustedPageHandler_OnFontSizeChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnFontSizeChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.fontSize);
  };
  function UntrustedPageHandler_OnColorChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnColorChange_Params.prototype.initDefaults_ = function() {
    this.color = 0;
  };
  UntrustedPageHandler_OnColorChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnColorChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnColorChange_Params.color
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, Colors);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnColorChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnColorChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnColorChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.color =
        decoder.decodeStruct(new codec.Enum(Colors));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandler_OnColorChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnColorChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.color);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnSpeechRateChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnSpeechRateChange_Params.prototype.initDefaults_ = function() {
    this.rate = 0;
  };
  UntrustedPageHandler_OnSpeechRateChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnSpeechRateChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnSpeechRateChange_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnSpeechRateChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnSpeechRateChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.rate =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  UntrustedPageHandler_OnSpeechRateChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnSpeechRateChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.rate);
  };
  function UntrustedPageHandler_OnHighlightGranularityChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnHighlightGranularityChanged_Params.prototype.initDefaults_ = function() {
    this.granularity = 0;
  };
  UntrustedPageHandler_OnHighlightGranularityChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnHighlightGranularityChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnHighlightGranularityChanged_Params.granularity
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, HighlightGranularity);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnHighlightGranularityChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPageHandler_OnHighlightGranularityChanged_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnHighlightGranularityChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.granularity =
        decoder.decodeStruct(new codec.Enum(HighlightGranularity));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandler_OnHighlightGranularityChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnHighlightGranularityChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.granularity);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnLinkClicked_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnLinkClicked_Params.prototype.initDefaults_ = function() {
    this.targetTreeId = null;
    this.targetNodeId = 0;
  };
  UntrustedPageHandler_OnLinkClicked_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnLinkClicked_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnLinkClicked_Params.targetTreeId
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnLinkClicked_Params.encodedSize = codec.kStructHeaderSize + 24;

  UntrustedPageHandler_OnLinkClicked_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnLinkClicked_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.targetTreeId =
        decoder.decodeStruct(ax_tree_id$.AXTreeID);
    val.targetNodeId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  UntrustedPageHandler_OnLinkClicked_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnLinkClicked_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.targetTreeId);
    encoder.encodeStruct(codec.Int32, val.targetNodeId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function UntrustedPageHandler_OnSelectionChange_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnSelectionChange_Params.prototype.initDefaults_ = function() {
    this.targetTreeId = null;
    this.anchorNodeId = 0;
    this.anchorOffset = 0;
    this.focusNodeId = 0;
    this.focusOffset = 0;
  };
  UntrustedPageHandler_OnSelectionChange_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnSelectionChange_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPageHandler_OnSelectionChange_Params.targetTreeId
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;





    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnSelectionChange_Params.encodedSize = codec.kStructHeaderSize + 32;

  UntrustedPageHandler_OnSelectionChange_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnSelectionChange_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.targetTreeId =
        decoder.decodeStruct(ax_tree_id$.AXTreeID);
    val.anchorNodeId =
        decoder.decodeStruct(codec.Int32);
    val.anchorOffset =
        decoder.decodeStruct(codec.Int32);
    val.focusNodeId =
        decoder.decodeStruct(codec.Int32);
    val.focusOffset =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  UntrustedPageHandler_OnSelectionChange_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnSelectionChange_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.targetTreeId);
    encoder.encodeStruct(codec.Int32, val.anchorNodeId);
    encoder.encodeStruct(codec.Int32, val.anchorOffset);
    encoder.encodeStruct(codec.Int32, val.focusNodeId);
    encoder.encodeStruct(codec.Int32, val.focusOffset);
  };
  function UntrustedPageHandler_OnCollapseSelection_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPageHandler_OnCollapseSelection_Params.prototype.initDefaults_ = function() {
  };
  UntrustedPageHandler_OnCollapseSelection_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPageHandler_OnCollapseSelection_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPageHandler_OnCollapseSelection_Params.encodedSize = codec.kStructHeaderSize + 0;

  UntrustedPageHandler_OnCollapseSelection_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPageHandler_OnCollapseSelection_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  UntrustedPageHandler_OnCollapseSelection_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPageHandler_OnCollapseSelection_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function UntrustedPage_AccessibilityEventReceived_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_AccessibilityEventReceived_Params.prototype.initDefaults_ = function() {
    this.treeId = null;
    this.updates = null;
    this.events = null;
  };
  UntrustedPage_AccessibilityEventReceived_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_AccessibilityEventReceived_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_AccessibilityEventReceived_Params.treeId
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_AccessibilityEventReceived_Params.updates
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 8, new codec.PointerTo(ax_tree_update$.AXTreeUpdate), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_AccessibilityEventReceived_Params.events
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 24, 8, new codec.PointerTo(ax_event$.AXEvent), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_AccessibilityEventReceived_Params.encodedSize = codec.kStructHeaderSize + 32;

  UntrustedPage_AccessibilityEventReceived_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_AccessibilityEventReceived_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.treeId =
        decoder.decodeStruct(ax_tree_id$.AXTreeID);
    val.updates =
        decoder.decodeArrayPointer(new codec.PointerTo(ax_tree_update$.AXTreeUpdate));
    val.events =
        decoder.decodeArrayPointer(new codec.PointerTo(ax_event$.AXEvent));
    return val;
  };

  UntrustedPage_AccessibilityEventReceived_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_AccessibilityEventReceived_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.treeId);
    encoder.encodeArrayPointer(new codec.PointerTo(ax_tree_update$.AXTreeUpdate), val.updates);
    encoder.encodeArrayPointer(new codec.PointerTo(ax_event$.AXEvent), val.events);
  };
  function UntrustedPage_OnActiveAXTreeIDChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_OnActiveAXTreeIDChanged_Params.prototype.initDefaults_ = function() {
    this.treeId = null;
    this.ukmSourceId = 0;
    this.url = null;
  };
  UntrustedPage_OnActiveAXTreeIDChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_OnActiveAXTreeIDChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnActiveAXTreeIDChanged_Params.treeId
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate UntrustedPage_OnActiveAXTreeIDChanged_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_OnActiveAXTreeIDChanged_Params.encodedSize = codec.kStructHeaderSize + 32;

  UntrustedPage_OnActiveAXTreeIDChanged_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_OnActiveAXTreeIDChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.treeId =
        decoder.decodeStruct(ax_tree_id$.AXTreeID);
    val.ukmSourceId =
        decoder.decodeStruct(codec.Int64);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  UntrustedPage_OnActiveAXTreeIDChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_OnActiveAXTreeIDChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.treeId);
    encoder.encodeStruct(codec.Int64, val.ukmSourceId);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function UntrustedPage_OnAXTreeDestroyed_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_OnAXTreeDestroyed_Params.prototype.initDefaults_ = function() {
    this.treeId = null;
  };
  UntrustedPage_OnAXTreeDestroyed_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_OnAXTreeDestroyed_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnAXTreeDestroyed_Params.treeId
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_OnAXTreeDestroyed_Params.encodedSize = codec.kStructHeaderSize + 16;

  UntrustedPage_OnAXTreeDestroyed_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_OnAXTreeDestroyed_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.treeId =
        decoder.decodeStruct(ax_tree_id$.AXTreeID);
    return val;
  };

  UntrustedPage_OnAXTreeDestroyed_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_OnAXTreeDestroyed_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.treeId);
  };
  function UntrustedPage_OnThemeChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_OnThemeChanged_Params.prototype.initDefaults_ = function() {
    this.newTheme = null;
  };
  UntrustedPage_OnThemeChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_OnThemeChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnThemeChanged_Params.newTheme
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, ReadAnythingTheme, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_OnThemeChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPage_OnThemeChanged_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_OnThemeChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.newTheme =
        decoder.decodeStructPointer(ReadAnythingTheme);
    return val;
  };

  UntrustedPage_OnThemeChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_OnThemeChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(ReadAnythingTheme, val.newTheme);
  };
  function UntrustedPage_SetDefaultLanguageCode_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_SetDefaultLanguageCode_Params.prototype.initDefaults_ = function() {
    this.code = null;
  };
  UntrustedPage_SetDefaultLanguageCode_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_SetDefaultLanguageCode_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_SetDefaultLanguageCode_Params.code
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_SetDefaultLanguageCode_Params.encodedSize = codec.kStructHeaderSize + 8;

  UntrustedPage_SetDefaultLanguageCode_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_SetDefaultLanguageCode_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(codec.String);
    return val;
  };

  UntrustedPage_SetDefaultLanguageCode_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_SetDefaultLanguageCode_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.code);
  };
  function UntrustedPage_OnSettingsRestoredFromPrefs_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_OnSettingsRestoredFromPrefs_Params.prototype.initDefaults_ = function() {
    this.lineSpacing = 0;
    this.letterSpacing = 0;
    this.font = null;
    this.fontSize = 0;
    this.color = 0;
    this.granularity = 0;
    this.speechRate = 0;
  };
  UntrustedPage_OnSettingsRestoredFromPrefs_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_OnSettingsRestoredFromPrefs_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnSettingsRestoredFromPrefs_Params.lineSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, LineSpacing);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnSettingsRestoredFromPrefs_Params.letterSpacing
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, LetterSpacing);
    if (err !== validator.validationError.NONE)
        return err;


    // validate UntrustedPage_OnSettingsRestoredFromPrefs_Params.font
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;



    // validate UntrustedPage_OnSettingsRestoredFromPrefs_Params.color
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 24, Colors);
    if (err !== validator.validationError.NONE)
        return err;



    // validate UntrustedPage_OnSettingsRestoredFromPrefs_Params.granularity
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 28, HighlightGranularity);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_OnSettingsRestoredFromPrefs_Params.encodedSize = codec.kStructHeaderSize + 40;

  UntrustedPage_OnSettingsRestoredFromPrefs_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_OnSettingsRestoredFromPrefs_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.lineSpacing =
        decoder.decodeStruct(new codec.Enum(LineSpacing));
    val.letterSpacing =
        decoder.decodeStruct(new codec.Enum(LetterSpacing));
    val.font =
        decoder.decodeStruct(codec.String);
    val.fontSize =
        decoder.decodeStruct(codec.Double);
    val.color =
        decoder.decodeStruct(new codec.Enum(Colors));
    val.granularity =
        decoder.decodeStruct(new codec.Enum(HighlightGranularity));
    val.speechRate =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  UntrustedPage_OnSettingsRestoredFromPrefs_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_OnSettingsRestoredFromPrefs_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.lineSpacing);
    encoder.encodeStruct(codec.Int32, val.letterSpacing);
    encoder.encodeStruct(codec.String, val.font);
    encoder.encodeStruct(codec.Double, val.fontSize);
    encoder.encodeStruct(codec.Int32, val.color);
    encoder.encodeStruct(codec.Int32, val.granularity);
    encoder.encodeStruct(codec.Double, val.speechRate);
  };
  function UntrustedPage_ScreenAIServiceReady_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  UntrustedPage_ScreenAIServiceReady_Params.prototype.initDefaults_ = function() {
  };
  UntrustedPage_ScreenAIServiceReady_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  UntrustedPage_ScreenAIServiceReady_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  UntrustedPage_ScreenAIServiceReady_Params.encodedSize = codec.kStructHeaderSize + 0;

  UntrustedPage_ScreenAIServiceReady_Params.decode = function(decoder) {
    var packed;
    var val = new UntrustedPage_ScreenAIServiceReady_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  UntrustedPage_ScreenAIServiceReady_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(UntrustedPage_ScreenAIServiceReady_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kUntrustedPageHandlerFactory_CreateUntrustedPageHandler_Name = 557383843;

  function UntrustedPageHandlerFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(UntrustedPageHandlerFactory,
                                                   handleOrPtrInfo);
  }

  function UntrustedPageHandlerFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        UntrustedPageHandlerFactory, associatedInterfacePtrInfo);
  }

  UntrustedPageHandlerFactoryAssociatedPtr.prototype =
      Object.create(UntrustedPageHandlerFactoryPtr.prototype);
  UntrustedPageHandlerFactoryAssociatedPtr.prototype.constructor =
      UntrustedPageHandlerFactoryAssociatedPtr;

  function UntrustedPageHandlerFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  UntrustedPageHandlerFactoryPtr.prototype.createUntrustedPageHandler = function() {
    return UntrustedPageHandlerFactoryProxy.prototype.createUntrustedPageHandler
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerFactoryProxy.prototype.createUntrustedPageHandler = function(page, handler) {
    var params_ = new UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params();
    params_.page = page;
    params_.handler = handler;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandlerFactory_CreateUntrustedPageHandler_Name,
        codec.align(UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function UntrustedPageHandlerFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  UntrustedPageHandlerFactoryStub.prototype.createUntrustedPageHandler = function(page, handler) {
    return this.delegate_ && this.delegate_.createUntrustedPageHandler && this.delegate_.createUntrustedPageHandler(page, handler);
  }

  UntrustedPageHandlerFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kUntrustedPageHandlerFactory_CreateUntrustedPageHandler_Name:
      var params = reader.decodeStruct(UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params);
      this.createUntrustedPageHandler(params.page, params.handler);
      return true;
    default:
      return false;
    }
  };

  UntrustedPageHandlerFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateUntrustedPageHandlerFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kUntrustedPageHandlerFactory_CreateUntrustedPageHandler_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandlerFactory_CreateUntrustedPageHandler_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateUntrustedPageHandlerFactoryResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var UntrustedPageHandlerFactory = {
    name: 'read_anything.mojom.UntrustedPageHandlerFactory',
    kVersion: 0,
    ptrClass: UntrustedPageHandlerFactoryPtr,
    proxyClass: UntrustedPageHandlerFactoryProxy,
    stubClass: UntrustedPageHandlerFactoryStub,
    validateRequest: validateUntrustedPageHandlerFactoryRequest,
    validateResponse: null,
  };
  UntrustedPageHandlerFactoryStub.prototype.validator = validateUntrustedPageHandlerFactoryRequest;
  UntrustedPageHandlerFactoryProxy.prototype.validator = null;
  var kUntrustedPageHandler_OnCopy_Name = 450220109;
  var kUntrustedPageHandler_OnLineSpaceChange_Name = 211896164;
  var kUntrustedPageHandler_OnLetterSpaceChange_Name = 1053368305;
  var kUntrustedPageHandler_OnFontChange_Name = 520086149;
  var kUntrustedPageHandler_OnFontSizeChange_Name = 1956630347;
  var kUntrustedPageHandler_OnColorChange_Name = 630234599;
  var kUntrustedPageHandler_OnSpeechRateChange_Name = 1353955907;
  var kUntrustedPageHandler_OnHighlightGranularityChanged_Name = 372328049;
  var kUntrustedPageHandler_OnLinkClicked_Name = 1774801164;
  var kUntrustedPageHandler_OnSelectionChange_Name = 656461983;
  var kUntrustedPageHandler_OnCollapseSelection_Name = 671756778;

  function UntrustedPageHandlerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(UntrustedPageHandler,
                                                   handleOrPtrInfo);
  }

  function UntrustedPageHandlerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        UntrustedPageHandler, associatedInterfacePtrInfo);
  }

  UntrustedPageHandlerAssociatedPtr.prototype =
      Object.create(UntrustedPageHandlerPtr.prototype);
  UntrustedPageHandlerAssociatedPtr.prototype.constructor =
      UntrustedPageHandlerAssociatedPtr;

  function UntrustedPageHandlerProxy(receiver) {
    this.receiver_ = receiver;
  }
  UntrustedPageHandlerPtr.prototype.onCopy = function() {
    return UntrustedPageHandlerProxy.prototype.onCopy
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onCopy = function() {
    var params_ = new UntrustedPageHandler_OnCopy_Params();
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnCopy_Name,
        codec.align(UntrustedPageHandler_OnCopy_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnCopy_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onLineSpaceChange = function() {
    return UntrustedPageHandlerProxy.prototype.onLineSpaceChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onLineSpaceChange = function(lineSpacing) {
    var params_ = new UntrustedPageHandler_OnLineSpaceChange_Params();
    params_.lineSpacing = lineSpacing;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnLineSpaceChange_Name,
        codec.align(UntrustedPageHandler_OnLineSpaceChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnLineSpaceChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onLetterSpaceChange = function() {
    return UntrustedPageHandlerProxy.prototype.onLetterSpaceChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onLetterSpaceChange = function(letterSpacing) {
    var params_ = new UntrustedPageHandler_OnLetterSpaceChange_Params();
    params_.letterSpacing = letterSpacing;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnLetterSpaceChange_Name,
        codec.align(UntrustedPageHandler_OnLetterSpaceChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnLetterSpaceChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onFontChange = function() {
    return UntrustedPageHandlerProxy.prototype.onFontChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onFontChange = function(font) {
    var params_ = new UntrustedPageHandler_OnFontChange_Params();
    params_.font = font;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnFontChange_Name,
        codec.align(UntrustedPageHandler_OnFontChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnFontChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onFontSizeChange = function() {
    return UntrustedPageHandlerProxy.prototype.onFontSizeChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onFontSizeChange = function(fontSize) {
    var params_ = new UntrustedPageHandler_OnFontSizeChange_Params();
    params_.fontSize = fontSize;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnFontSizeChange_Name,
        codec.align(UntrustedPageHandler_OnFontSizeChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnFontSizeChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onColorChange = function() {
    return UntrustedPageHandlerProxy.prototype.onColorChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onColorChange = function(color) {
    var params_ = new UntrustedPageHandler_OnColorChange_Params();
    params_.color = color;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnColorChange_Name,
        codec.align(UntrustedPageHandler_OnColorChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnColorChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onSpeechRateChange = function() {
    return UntrustedPageHandlerProxy.prototype.onSpeechRateChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onSpeechRateChange = function(rate) {
    var params_ = new UntrustedPageHandler_OnSpeechRateChange_Params();
    params_.rate = rate;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnSpeechRateChange_Name,
        codec.align(UntrustedPageHandler_OnSpeechRateChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnSpeechRateChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onHighlightGranularityChanged = function() {
    return UntrustedPageHandlerProxy.prototype.onHighlightGranularityChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onHighlightGranularityChanged = function(granularity) {
    var params_ = new UntrustedPageHandler_OnHighlightGranularityChanged_Params();
    params_.granularity = granularity;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnHighlightGranularityChanged_Name,
        codec.align(UntrustedPageHandler_OnHighlightGranularityChanged_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnHighlightGranularityChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onLinkClicked = function() {
    return UntrustedPageHandlerProxy.prototype.onLinkClicked
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onLinkClicked = function(targetTreeId, targetNodeId) {
    var params_ = new UntrustedPageHandler_OnLinkClicked_Params();
    params_.targetTreeId = targetTreeId;
    params_.targetNodeId = targetNodeId;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnLinkClicked_Name,
        codec.align(UntrustedPageHandler_OnLinkClicked_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnLinkClicked_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onSelectionChange = function() {
    return UntrustedPageHandlerProxy.prototype.onSelectionChange
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onSelectionChange = function(targetTreeId, anchorNodeId, anchorOffset, focusNodeId, focusOffset) {
    var params_ = new UntrustedPageHandler_OnSelectionChange_Params();
    params_.targetTreeId = targetTreeId;
    params_.anchorNodeId = anchorNodeId;
    params_.anchorOffset = anchorOffset;
    params_.focusNodeId = focusNodeId;
    params_.focusOffset = focusOffset;
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnSelectionChange_Name,
        codec.align(UntrustedPageHandler_OnSelectionChange_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnSelectionChange_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPageHandlerPtr.prototype.onCollapseSelection = function() {
    return UntrustedPageHandlerProxy.prototype.onCollapseSelection
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageHandlerProxy.prototype.onCollapseSelection = function() {
    var params_ = new UntrustedPageHandler_OnCollapseSelection_Params();
    var builder = new codec.MessageV0Builder(
        kUntrustedPageHandler_OnCollapseSelection_Name,
        codec.align(UntrustedPageHandler_OnCollapseSelection_Params.encodedSize));
    builder.encodeStruct(UntrustedPageHandler_OnCollapseSelection_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function UntrustedPageHandlerStub(delegate) {
    this.delegate_ = delegate;
  }
  UntrustedPageHandlerStub.prototype.onCopy = function() {
    return this.delegate_ && this.delegate_.onCopy && this.delegate_.onCopy();
  }
  UntrustedPageHandlerStub.prototype.onLineSpaceChange = function(lineSpacing) {
    return this.delegate_ && this.delegate_.onLineSpaceChange && this.delegate_.onLineSpaceChange(lineSpacing);
  }
  UntrustedPageHandlerStub.prototype.onLetterSpaceChange = function(letterSpacing) {
    return this.delegate_ && this.delegate_.onLetterSpaceChange && this.delegate_.onLetterSpaceChange(letterSpacing);
  }
  UntrustedPageHandlerStub.prototype.onFontChange = function(font) {
    return this.delegate_ && this.delegate_.onFontChange && this.delegate_.onFontChange(font);
  }
  UntrustedPageHandlerStub.prototype.onFontSizeChange = function(fontSize) {
    return this.delegate_ && this.delegate_.onFontSizeChange && this.delegate_.onFontSizeChange(fontSize);
  }
  UntrustedPageHandlerStub.prototype.onColorChange = function(color) {
    return this.delegate_ && this.delegate_.onColorChange && this.delegate_.onColorChange(color);
  }
  UntrustedPageHandlerStub.prototype.onSpeechRateChange = function(rate) {
    return this.delegate_ && this.delegate_.onSpeechRateChange && this.delegate_.onSpeechRateChange(rate);
  }
  UntrustedPageHandlerStub.prototype.onHighlightGranularityChanged = function(granularity) {
    return this.delegate_ && this.delegate_.onHighlightGranularityChanged && this.delegate_.onHighlightGranularityChanged(granularity);
  }
  UntrustedPageHandlerStub.prototype.onLinkClicked = function(targetTreeId, targetNodeId) {
    return this.delegate_ && this.delegate_.onLinkClicked && this.delegate_.onLinkClicked(targetTreeId, targetNodeId);
  }
  UntrustedPageHandlerStub.prototype.onSelectionChange = function(targetTreeId, anchorNodeId, anchorOffset, focusNodeId, focusOffset) {
    return this.delegate_ && this.delegate_.onSelectionChange && this.delegate_.onSelectionChange(targetTreeId, anchorNodeId, anchorOffset, focusNodeId, focusOffset);
  }
  UntrustedPageHandlerStub.prototype.onCollapseSelection = function() {
    return this.delegate_ && this.delegate_.onCollapseSelection && this.delegate_.onCollapseSelection();
  }

  UntrustedPageHandlerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kUntrustedPageHandler_OnCopy_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnCopy_Params);
      this.onCopy();
      return true;
    case kUntrustedPageHandler_OnLineSpaceChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnLineSpaceChange_Params);
      this.onLineSpaceChange(params.lineSpacing);
      return true;
    case kUntrustedPageHandler_OnLetterSpaceChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnLetterSpaceChange_Params);
      this.onLetterSpaceChange(params.letterSpacing);
      return true;
    case kUntrustedPageHandler_OnFontChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnFontChange_Params);
      this.onFontChange(params.font);
      return true;
    case kUntrustedPageHandler_OnFontSizeChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnFontSizeChange_Params);
      this.onFontSizeChange(params.fontSize);
      return true;
    case kUntrustedPageHandler_OnColorChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnColorChange_Params);
      this.onColorChange(params.color);
      return true;
    case kUntrustedPageHandler_OnSpeechRateChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnSpeechRateChange_Params);
      this.onSpeechRateChange(params.rate);
      return true;
    case kUntrustedPageHandler_OnHighlightGranularityChanged_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnHighlightGranularityChanged_Params);
      this.onHighlightGranularityChanged(params.granularity);
      return true;
    case kUntrustedPageHandler_OnLinkClicked_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnLinkClicked_Params);
      this.onLinkClicked(params.targetTreeId, params.targetNodeId);
      return true;
    case kUntrustedPageHandler_OnSelectionChange_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnSelectionChange_Params);
      this.onSelectionChange(params.targetTreeId, params.anchorNodeId, params.anchorOffset, params.focusNodeId, params.focusOffset);
      return true;
    case kUntrustedPageHandler_OnCollapseSelection_Name:
      var params = reader.decodeStruct(UntrustedPageHandler_OnCollapseSelection_Params);
      this.onCollapseSelection();
      return true;
    default:
      return false;
    }
  };

  UntrustedPageHandlerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateUntrustedPageHandlerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kUntrustedPageHandler_OnCopy_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnCopy_Params;
      break;
      case kUntrustedPageHandler_OnLineSpaceChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnLineSpaceChange_Params;
      break;
      case kUntrustedPageHandler_OnLetterSpaceChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnLetterSpaceChange_Params;
      break;
      case kUntrustedPageHandler_OnFontChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnFontChange_Params;
      break;
      case kUntrustedPageHandler_OnFontSizeChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnFontSizeChange_Params;
      break;
      case kUntrustedPageHandler_OnColorChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnColorChange_Params;
      break;
      case kUntrustedPageHandler_OnSpeechRateChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnSpeechRateChange_Params;
      break;
      case kUntrustedPageHandler_OnHighlightGranularityChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnHighlightGranularityChanged_Params;
      break;
      case kUntrustedPageHandler_OnLinkClicked_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnLinkClicked_Params;
      break;
      case kUntrustedPageHandler_OnSelectionChange_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnSelectionChange_Params;
      break;
      case kUntrustedPageHandler_OnCollapseSelection_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPageHandler_OnCollapseSelection_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateUntrustedPageHandlerResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var UntrustedPageHandler = {
    name: 'read_anything.mojom.UntrustedPageHandler',
    kVersion: 0,
    ptrClass: UntrustedPageHandlerPtr,
    proxyClass: UntrustedPageHandlerProxy,
    stubClass: UntrustedPageHandlerStub,
    validateRequest: validateUntrustedPageHandlerRequest,
    validateResponse: null,
  };
  UntrustedPageHandlerStub.prototype.validator = validateUntrustedPageHandlerRequest;
  UntrustedPageHandlerProxy.prototype.validator = null;
  var kUntrustedPage_AccessibilityEventReceived_Name = 1963558728;
  var kUntrustedPage_OnActiveAXTreeIDChanged_Name = 1518155787;
  var kUntrustedPage_OnAXTreeDestroyed_Name = 1653379684;
  var kUntrustedPage_OnThemeChanged_Name = 886892351;
  var kUntrustedPage_SetDefaultLanguageCode_Name = 229860389;
  var kUntrustedPage_OnSettingsRestoredFromPrefs_Name = 752226797;
  var kUntrustedPage_ScreenAIServiceReady_Name = 928726443;

  function UntrustedPagePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(UntrustedPage,
                                                   handleOrPtrInfo);
  }

  function UntrustedPageAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        UntrustedPage, associatedInterfacePtrInfo);
  }

  UntrustedPageAssociatedPtr.prototype =
      Object.create(UntrustedPagePtr.prototype);
  UntrustedPageAssociatedPtr.prototype.constructor =
      UntrustedPageAssociatedPtr;

  function UntrustedPageProxy(receiver) {
    this.receiver_ = receiver;
  }
  UntrustedPagePtr.prototype.accessibilityEventReceived = function() {
    return UntrustedPageProxy.prototype.accessibilityEventReceived
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.accessibilityEventReceived = function(treeId, updates, events) {
    var params_ = new UntrustedPage_AccessibilityEventReceived_Params();
    params_.treeId = treeId;
    params_.updates = updates;
    params_.events = events;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_AccessibilityEventReceived_Name,
        codec.align(UntrustedPage_AccessibilityEventReceived_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_AccessibilityEventReceived_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.onActiveAXTreeIDChanged = function() {
    return UntrustedPageProxy.prototype.onActiveAXTreeIDChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.onActiveAXTreeIDChanged = function(treeId, ukmSourceId, url) {
    var params_ = new UntrustedPage_OnActiveAXTreeIDChanged_Params();
    params_.treeId = treeId;
    params_.ukmSourceId = ukmSourceId;
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_OnActiveAXTreeIDChanged_Name,
        codec.align(UntrustedPage_OnActiveAXTreeIDChanged_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_OnActiveAXTreeIDChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.onAXTreeDestroyed = function() {
    return UntrustedPageProxy.prototype.onAXTreeDestroyed
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.onAXTreeDestroyed = function(treeId) {
    var params_ = new UntrustedPage_OnAXTreeDestroyed_Params();
    params_.treeId = treeId;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_OnAXTreeDestroyed_Name,
        codec.align(UntrustedPage_OnAXTreeDestroyed_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_OnAXTreeDestroyed_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.onThemeChanged = function() {
    return UntrustedPageProxy.prototype.onThemeChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.onThemeChanged = function(newTheme) {
    var params_ = new UntrustedPage_OnThemeChanged_Params();
    params_.newTheme = newTheme;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_OnThemeChanged_Name,
        codec.align(UntrustedPage_OnThemeChanged_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_OnThemeChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.setDefaultLanguageCode = function() {
    return UntrustedPageProxy.prototype.setDefaultLanguageCode
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.setDefaultLanguageCode = function(code) {
    var params_ = new UntrustedPage_SetDefaultLanguageCode_Params();
    params_.code = code;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_SetDefaultLanguageCode_Name,
        codec.align(UntrustedPage_SetDefaultLanguageCode_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_SetDefaultLanguageCode_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.onSettingsRestoredFromPrefs = function() {
    return UntrustedPageProxy.prototype.onSettingsRestoredFromPrefs
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.onSettingsRestoredFromPrefs = function(lineSpacing, letterSpacing, font, fontSize, color, speechRate, granularity) {
    var params_ = new UntrustedPage_OnSettingsRestoredFromPrefs_Params();
    params_.lineSpacing = lineSpacing;
    params_.letterSpacing = letterSpacing;
    params_.font = font;
    params_.fontSize = fontSize;
    params_.color = color;
    params_.speechRate = speechRate;
    params_.granularity = granularity;
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_OnSettingsRestoredFromPrefs_Name,
        codec.align(UntrustedPage_OnSettingsRestoredFromPrefs_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_OnSettingsRestoredFromPrefs_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  UntrustedPagePtr.prototype.screenAIServiceReady = function() {
    return UntrustedPageProxy.prototype.screenAIServiceReady
        .apply(this.ptr.getProxy(), arguments);
  };

  UntrustedPageProxy.prototype.screenAIServiceReady = function() {
    var params_ = new UntrustedPage_ScreenAIServiceReady_Params();
    var builder = new codec.MessageV0Builder(
        kUntrustedPage_ScreenAIServiceReady_Name,
        codec.align(UntrustedPage_ScreenAIServiceReady_Params.encodedSize));
    builder.encodeStruct(UntrustedPage_ScreenAIServiceReady_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function UntrustedPageStub(delegate) {
    this.delegate_ = delegate;
  }
  UntrustedPageStub.prototype.accessibilityEventReceived = function(treeId, updates, events) {
    return this.delegate_ && this.delegate_.accessibilityEventReceived && this.delegate_.accessibilityEventReceived(treeId, updates, events);
  }
  UntrustedPageStub.prototype.onActiveAXTreeIDChanged = function(treeId, ukmSourceId, url) {
    return this.delegate_ && this.delegate_.onActiveAXTreeIDChanged && this.delegate_.onActiveAXTreeIDChanged(treeId, ukmSourceId, url);
  }
  UntrustedPageStub.prototype.onAXTreeDestroyed = function(treeId) {
    return this.delegate_ && this.delegate_.onAXTreeDestroyed && this.delegate_.onAXTreeDestroyed(treeId);
  }
  UntrustedPageStub.prototype.onThemeChanged = function(newTheme) {
    return this.delegate_ && this.delegate_.onThemeChanged && this.delegate_.onThemeChanged(newTheme);
  }
  UntrustedPageStub.prototype.setDefaultLanguageCode = function(code) {
    return this.delegate_ && this.delegate_.setDefaultLanguageCode && this.delegate_.setDefaultLanguageCode(code);
  }
  UntrustedPageStub.prototype.onSettingsRestoredFromPrefs = function(lineSpacing, letterSpacing, font, fontSize, color, speechRate, granularity) {
    return this.delegate_ && this.delegate_.onSettingsRestoredFromPrefs && this.delegate_.onSettingsRestoredFromPrefs(lineSpacing, letterSpacing, font, fontSize, color, speechRate, granularity);
  }
  UntrustedPageStub.prototype.screenAIServiceReady = function() {
    return this.delegate_ && this.delegate_.screenAIServiceReady && this.delegate_.screenAIServiceReady();
  }

  UntrustedPageStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kUntrustedPage_AccessibilityEventReceived_Name:
      var params = reader.decodeStruct(UntrustedPage_AccessibilityEventReceived_Params);
      this.accessibilityEventReceived(params.treeId, params.updates, params.events);
      return true;
    case kUntrustedPage_OnActiveAXTreeIDChanged_Name:
      var params = reader.decodeStruct(UntrustedPage_OnActiveAXTreeIDChanged_Params);
      this.onActiveAXTreeIDChanged(params.treeId, params.ukmSourceId, params.url);
      return true;
    case kUntrustedPage_OnAXTreeDestroyed_Name:
      var params = reader.decodeStruct(UntrustedPage_OnAXTreeDestroyed_Params);
      this.onAXTreeDestroyed(params.treeId);
      return true;
    case kUntrustedPage_OnThemeChanged_Name:
      var params = reader.decodeStruct(UntrustedPage_OnThemeChanged_Params);
      this.onThemeChanged(params.newTheme);
      return true;
    case kUntrustedPage_SetDefaultLanguageCode_Name:
      var params = reader.decodeStruct(UntrustedPage_SetDefaultLanguageCode_Params);
      this.setDefaultLanguageCode(params.code);
      return true;
    case kUntrustedPage_OnSettingsRestoredFromPrefs_Name:
      var params = reader.decodeStruct(UntrustedPage_OnSettingsRestoredFromPrefs_Params);
      this.onSettingsRestoredFromPrefs(params.lineSpacing, params.letterSpacing, params.font, params.fontSize, params.color, params.speechRate, params.granularity);
      return true;
    case kUntrustedPage_ScreenAIServiceReady_Name:
      var params = reader.decodeStruct(UntrustedPage_ScreenAIServiceReady_Params);
      this.screenAIServiceReady();
      return true;
    default:
      return false;
    }
  };

  UntrustedPageStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateUntrustedPageRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kUntrustedPage_AccessibilityEventReceived_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_AccessibilityEventReceived_Params;
      break;
      case kUntrustedPage_OnActiveAXTreeIDChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_OnActiveAXTreeIDChanged_Params;
      break;
      case kUntrustedPage_OnAXTreeDestroyed_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_OnAXTreeDestroyed_Params;
      break;
      case kUntrustedPage_OnThemeChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_OnThemeChanged_Params;
      break;
      case kUntrustedPage_SetDefaultLanguageCode_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_SetDefaultLanguageCode_Params;
      break;
      case kUntrustedPage_OnSettingsRestoredFromPrefs_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_OnSettingsRestoredFromPrefs_Params;
      break;
      case kUntrustedPage_ScreenAIServiceReady_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = UntrustedPage_ScreenAIServiceReady_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateUntrustedPageResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var UntrustedPage = {
    name: 'read_anything.mojom.UntrustedPage',
    kVersion: 0,
    ptrClass: UntrustedPagePtr,
    proxyClass: UntrustedPageProxy,
    stubClass: UntrustedPageStub,
    validateRequest: validateUntrustedPageRequest,
    validateResponse: null,
  };
  UntrustedPageStub.prototype.validator = validateUntrustedPageRequest;
  UntrustedPageProxy.prototype.validator = null;
  exports.Colors = Colors;
  exports.LetterSpacing = LetterSpacing;
  exports.LineSpacing = LineSpacing;
  exports.HighlightGranularity = HighlightGranularity;
  exports.ReadAnythingTheme = ReadAnythingTheme;
  exports.UntrustedPageHandlerFactory = UntrustedPageHandlerFactory;
  exports.UntrustedPageHandlerFactoryPtr = UntrustedPageHandlerFactoryPtr;
  exports.UntrustedPageHandlerFactoryAssociatedPtr = UntrustedPageHandlerFactoryAssociatedPtr;
  exports.UntrustedPageHandler = UntrustedPageHandler;
  exports.UntrustedPageHandlerPtr = UntrustedPageHandlerPtr;
  exports.UntrustedPageHandlerAssociatedPtr = UntrustedPageHandlerAssociatedPtr;
  exports.UntrustedPage = UntrustedPage;
  exports.UntrustedPagePtr = UntrustedPagePtr;
  exports.UntrustedPageAssociatedPtr = UntrustedPageAssociatedPtr;
})();