// chrome/common/cart/commerce_hints.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/cart/commerce_hints.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('cart.mojom');
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../url/mojom/url.mojom.js');
  }



  function Product(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Product.prototype.initDefaults_ = function() {
    this.imageUrl = null;
    this.name = null;
    this.productId = null;
  };
  Product.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Product.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Product.imageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Product.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Product.productId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Product.encodedSize = codec.kStructHeaderSize + 24;

  Product.decode = function(decoder) {
    var packed;
    var val = new Product();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.imageUrl =
        decoder.decodeStructPointer(url$.Url);
    val.name =
        decoder.decodeStruct(codec.String);
    val.productId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  Product.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Product.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.imageUrl);
    encoder.encodeStruct(codec.String, val.name);
    encoder.encodeStruct(codec.String, val.productId);
  };
  function Heuristics(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Heuristics.prototype.initDefaults_ = function() {
    this.versionNumber = null;
    this.hintJsonData = null;
    this.globalJsonData = null;
  };
  Heuristics.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Heuristics.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Heuristics.versionNumber
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Heuristics.hintJsonData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Heuristics.globalJsonData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Heuristics.encodedSize = codec.kStructHeaderSize + 24;

  Heuristics.decode = function(decoder) {
    var packed;
    var val = new Heuristics();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.versionNumber =
        decoder.decodeStruct(codec.String);
    val.hintJsonData =
        decoder.decodeStruct(codec.String);
    val.globalJsonData =
        decoder.decodeStruct(codec.String);
    return val;
  };

  Heuristics.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Heuristics.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.versionNumber);
    encoder.encodeStruct(codec.String, val.hintJsonData);
    encoder.encodeStruct(codec.String, val.globalJsonData);
  };
  function CommerceHintObserver_OnAddToCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnAddToCart_Params.prototype.initDefaults_ = function() {
    this.cartUrl = null;
    this.productId = null;
  };
  CommerceHintObserver_OnAddToCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnAddToCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnAddToCart_Params.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnAddToCart_Params.productId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnAddToCart_Params.encodedSize = codec.kStructHeaderSize + 16;

  CommerceHintObserver_OnAddToCart_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnAddToCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    val.productId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  CommerceHintObserver_OnAddToCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnAddToCart_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
    encoder.encodeStruct(codec.String, val.productId);
  };
  function CommerceHintObserver_OnVisitCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnVisitCart_Params.prototype.initDefaults_ = function() {
  };
  CommerceHintObserver_OnVisitCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnVisitCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnVisitCart_Params.encodedSize = codec.kStructHeaderSize + 0;

  CommerceHintObserver_OnVisitCart_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnVisitCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CommerceHintObserver_OnVisitCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnVisitCart_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CommerceHintObserver_OnCartProductUpdated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnCartProductUpdated_Params.prototype.initDefaults_ = function() {
    this.products = null;
  };
  CommerceHintObserver_OnCartProductUpdated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnCartProductUpdated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnCartProductUpdated_Params.products
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(Product), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnCartProductUpdated_Params.encodedSize = codec.kStructHeaderSize + 8;

  CommerceHintObserver_OnCartProductUpdated_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnCartProductUpdated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.products =
        decoder.decodeArrayPointer(new codec.PointerTo(Product));
    return val;
  };

  CommerceHintObserver_OnCartProductUpdated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnCartProductUpdated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(Product), val.products);
  };
  function CommerceHintObserver_OnVisitCheckout_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnVisitCheckout_Params.prototype.initDefaults_ = function() {
  };
  CommerceHintObserver_OnVisitCheckout_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnVisitCheckout_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnVisitCheckout_Params.encodedSize = codec.kStructHeaderSize + 0;

  CommerceHintObserver_OnVisitCheckout_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnVisitCheckout_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CommerceHintObserver_OnVisitCheckout_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnVisitCheckout_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CommerceHintObserver_OnPurchase_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnPurchase_Params.prototype.initDefaults_ = function() {
  };
  CommerceHintObserver_OnPurchase_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnPurchase_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnPurchase_Params.encodedSize = codec.kStructHeaderSize + 0;

  CommerceHintObserver_OnPurchase_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnPurchase_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CommerceHintObserver_OnPurchase_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnPurchase_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CommerceHintObserver_OnFormSubmit_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnFormSubmit_Params.prototype.initDefaults_ = function() {
    this.isPurchase = false;
  };
  CommerceHintObserver_OnFormSubmit_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnFormSubmit_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnFormSubmit_Params.encodedSize = codec.kStructHeaderSize + 8;

  CommerceHintObserver_OnFormSubmit_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnFormSubmit_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isPurchase = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CommerceHintObserver_OnFormSubmit_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnFormSubmit_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isPurchase & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CommerceHintObserver_OnWillSendRequest_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnWillSendRequest_Params.prototype.initDefaults_ = function() {
    this.isAddtocart = false;
  };
  CommerceHintObserver_OnWillSendRequest_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnWillSendRequest_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnWillSendRequest_Params.encodedSize = codec.kStructHeaderSize + 8;

  CommerceHintObserver_OnWillSendRequest_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnWillSendRequest_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isAddtocart = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CommerceHintObserver_OnWillSendRequest_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnWillSendRequest_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isAddtocart & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CommerceHintObserver_OnNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnNavigation_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.versionNumber = null;
  };
  CommerceHintObserver_OnNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnNavigation_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnNavigation_Params.versionNumber
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnNavigation_Params.encodedSize = codec.kStructHeaderSize + 16;

  CommerceHintObserver_OnNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.versionNumber =
        decoder.decodeStruct(codec.String);
    return val;
  };

  CommerceHintObserver_OnNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.String, val.versionNumber);
  };
  function CommerceHintObserver_OnNavigation_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnNavigation_ResponseParams.prototype.initDefaults_ = function() {
    this.shouldSkip = false;
    this.heuristics = null;
  };
  CommerceHintObserver_OnNavigation_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnNavigation_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate CommerceHintObserver_OnNavigation_ResponseParams.heuristics
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, Heuristics, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnNavigation_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  CommerceHintObserver_OnNavigation_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnNavigation_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.shouldSkip = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.heuristics =
        decoder.decodeStructPointer(Heuristics);
    return val;
  };

  CommerceHintObserver_OnNavigation_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnNavigation_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.shouldSkip & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(Heuristics, val.heuristics);
  };
  function CommerceHintObserver_OnCartExtraction_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnCartExtraction_Params.prototype.initDefaults_ = function() {
  };
  CommerceHintObserver_OnCartExtraction_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnCartExtraction_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnCartExtraction_Params.encodedSize = codec.kStructHeaderSize + 0;

  CommerceHintObserver_OnCartExtraction_Params.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnCartExtraction_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CommerceHintObserver_OnCartExtraction_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnCartExtraction_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CommerceHintObserver_OnCartExtraction_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CommerceHintObserver_OnCartExtraction_ResponseParams.prototype.initDefaults_ = function() {
    this.productIdJson = null;
    this.cartExtractionScript = null;
  };
  CommerceHintObserver_OnCartExtraction_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CommerceHintObserver_OnCartExtraction_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnCartExtraction_ResponseParams.productIdJson
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate CommerceHintObserver_OnCartExtraction_ResponseParams.cartExtractionScript
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CommerceHintObserver_OnCartExtraction_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  CommerceHintObserver_OnCartExtraction_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CommerceHintObserver_OnCartExtraction_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.productIdJson =
        decoder.decodeStruct(codec.String);
    val.cartExtractionScript =
        decoder.decodeStruct(codec.String);
    return val;
  };

  CommerceHintObserver_OnCartExtraction_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CommerceHintObserver_OnCartExtraction_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.productIdJson);
    encoder.encodeStruct(codec.String, val.cartExtractionScript);
  };
  var kCommerceHintObserver_OnAddToCart_Name = 2061061800;
  var kCommerceHintObserver_OnVisitCart_Name = 1106497659;
  var kCommerceHintObserver_OnCartProductUpdated_Name = 113654848;
  var kCommerceHintObserver_OnVisitCheckout_Name = 596699460;
  var kCommerceHintObserver_OnPurchase_Name = 1084329542;
  var kCommerceHintObserver_OnFormSubmit_Name = 552949258;
  var kCommerceHintObserver_OnWillSendRequest_Name = 1876030640;
  var kCommerceHintObserver_OnNavigation_Name = 731295455;
  var kCommerceHintObserver_OnCartExtraction_Name = 1679865463;

  function CommerceHintObserverPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(CommerceHintObserver,
                                                   handleOrPtrInfo);
  }

  function CommerceHintObserverAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        CommerceHintObserver, associatedInterfacePtrInfo);
  }

  CommerceHintObserverAssociatedPtr.prototype =
      Object.create(CommerceHintObserverPtr.prototype);
  CommerceHintObserverAssociatedPtr.prototype.constructor =
      CommerceHintObserverAssociatedPtr;

  function CommerceHintObserverProxy(receiver) {
    this.receiver_ = receiver;
  }
  CommerceHintObserverPtr.prototype.onAddToCart = function() {
    return CommerceHintObserverProxy.prototype.onAddToCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onAddToCart = function(cartUrl, productId) {
    var params_ = new CommerceHintObserver_OnAddToCart_Params();
    params_.cartUrl = cartUrl;
    params_.productId = productId;
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnAddToCart_Name,
        codec.align(CommerceHintObserver_OnAddToCart_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnAddToCart_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onVisitCart = function() {
    return CommerceHintObserverProxy.prototype.onVisitCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onVisitCart = function() {
    var params_ = new CommerceHintObserver_OnVisitCart_Params();
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnVisitCart_Name,
        codec.align(CommerceHintObserver_OnVisitCart_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnVisitCart_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onCartProductUpdated = function() {
    return CommerceHintObserverProxy.prototype.onCartProductUpdated
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onCartProductUpdated = function(products) {
    var params_ = new CommerceHintObserver_OnCartProductUpdated_Params();
    params_.products = products;
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnCartProductUpdated_Name,
        codec.align(CommerceHintObserver_OnCartProductUpdated_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnCartProductUpdated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onVisitCheckout = function() {
    return CommerceHintObserverProxy.prototype.onVisitCheckout
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onVisitCheckout = function() {
    var params_ = new CommerceHintObserver_OnVisitCheckout_Params();
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnVisitCheckout_Name,
        codec.align(CommerceHintObserver_OnVisitCheckout_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnVisitCheckout_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onPurchase = function() {
    return CommerceHintObserverProxy.prototype.onPurchase
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onPurchase = function() {
    var params_ = new CommerceHintObserver_OnPurchase_Params();
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnPurchase_Name,
        codec.align(CommerceHintObserver_OnPurchase_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnPurchase_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onFormSubmit = function() {
    return CommerceHintObserverProxy.prototype.onFormSubmit
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onFormSubmit = function(isPurchase) {
    var params_ = new CommerceHintObserver_OnFormSubmit_Params();
    params_.isPurchase = isPurchase;
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnFormSubmit_Name,
        codec.align(CommerceHintObserver_OnFormSubmit_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnFormSubmit_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onWillSendRequest = function() {
    return CommerceHintObserverProxy.prototype.onWillSendRequest
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onWillSendRequest = function(isAddtocart) {
    var params_ = new CommerceHintObserver_OnWillSendRequest_Params();
    params_.isAddtocart = isAddtocart;
    var builder = new codec.MessageV0Builder(
        kCommerceHintObserver_OnWillSendRequest_Name,
        codec.align(CommerceHintObserver_OnWillSendRequest_Params.encodedSize));
    builder.encodeStruct(CommerceHintObserver_OnWillSendRequest_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CommerceHintObserverPtr.prototype.onNavigation = function() {
    return CommerceHintObserverProxy.prototype.onNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onNavigation = function(url, versionNumber) {
    var params_ = new CommerceHintObserver_OnNavigation_Params();
    params_.url = url;
    params_.versionNumber = versionNumber;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCommerceHintObserver_OnNavigation_Name,
          codec.align(CommerceHintObserver_OnNavigation_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CommerceHintObserver_OnNavigation_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CommerceHintObserver_OnNavigation_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CommerceHintObserverPtr.prototype.onCartExtraction = function() {
    return CommerceHintObserverProxy.prototype.onCartExtraction
        .apply(this.ptr.getProxy(), arguments);
  };

  CommerceHintObserverProxy.prototype.onCartExtraction = function() {
    var params_ = new CommerceHintObserver_OnCartExtraction_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCommerceHintObserver_OnCartExtraction_Name,
          codec.align(CommerceHintObserver_OnCartExtraction_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CommerceHintObserver_OnCartExtraction_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CommerceHintObserver_OnCartExtraction_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function CommerceHintObserverStub(delegate) {
    this.delegate_ = delegate;
  }
  CommerceHintObserverStub.prototype.onAddToCart = function(cartUrl, productId) {
    return this.delegate_ && this.delegate_.onAddToCart && this.delegate_.onAddToCart(cartUrl, productId);
  }
  CommerceHintObserverStub.prototype.onVisitCart = function() {
    return this.delegate_ && this.delegate_.onVisitCart && this.delegate_.onVisitCart();
  }
  CommerceHintObserverStub.prototype.onCartProductUpdated = function(products) {
    return this.delegate_ && this.delegate_.onCartProductUpdated && this.delegate_.onCartProductUpdated(products);
  }
  CommerceHintObserverStub.prototype.onVisitCheckout = function() {
    return this.delegate_ && this.delegate_.onVisitCheckout && this.delegate_.onVisitCheckout();
  }
  CommerceHintObserverStub.prototype.onPurchase = function() {
    return this.delegate_ && this.delegate_.onPurchase && this.delegate_.onPurchase();
  }
  CommerceHintObserverStub.prototype.onFormSubmit = function(isPurchase) {
    return this.delegate_ && this.delegate_.onFormSubmit && this.delegate_.onFormSubmit(isPurchase);
  }
  CommerceHintObserverStub.prototype.onWillSendRequest = function(isAddtocart) {
    return this.delegate_ && this.delegate_.onWillSendRequest && this.delegate_.onWillSendRequest(isAddtocart);
  }
  CommerceHintObserverStub.prototype.onNavigation = function(url, versionNumber) {
    return this.delegate_ && this.delegate_.onNavigation && this.delegate_.onNavigation(url, versionNumber);
  }
  CommerceHintObserverStub.prototype.onCartExtraction = function() {
    return this.delegate_ && this.delegate_.onCartExtraction && this.delegate_.onCartExtraction();
  }

  CommerceHintObserverStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kCommerceHintObserver_OnAddToCart_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnAddToCart_Params);
      this.onAddToCart(params.cartUrl, params.productId);
      return true;
    case kCommerceHintObserver_OnVisitCart_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnVisitCart_Params);
      this.onVisitCart();
      return true;
    case kCommerceHintObserver_OnCartProductUpdated_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnCartProductUpdated_Params);
      this.onCartProductUpdated(params.products);
      return true;
    case kCommerceHintObserver_OnVisitCheckout_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnVisitCheckout_Params);
      this.onVisitCheckout();
      return true;
    case kCommerceHintObserver_OnPurchase_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnPurchase_Params);
      this.onPurchase();
      return true;
    case kCommerceHintObserver_OnFormSubmit_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnFormSubmit_Params);
      this.onFormSubmit(params.isPurchase);
      return true;
    case kCommerceHintObserver_OnWillSendRequest_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnWillSendRequest_Params);
      this.onWillSendRequest(params.isAddtocart);
      return true;
    default:
      return false;
    }
  };

  CommerceHintObserverStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kCommerceHintObserver_OnNavigation_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnNavigation_Params);
      this.onNavigation(params.url, params.versionNumber).then(function(response) {
        var responseParams =
            new CommerceHintObserver_OnNavigation_ResponseParams();
        responseParams.shouldSkip = response.shouldSkip;
        responseParams.heuristics = response.heuristics;
        var builder = new codec.MessageV1Builder(
            kCommerceHintObserver_OnNavigation_Name,
            codec.align(CommerceHintObserver_OnNavigation_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CommerceHintObserver_OnNavigation_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCommerceHintObserver_OnCartExtraction_Name:
      var params = reader.decodeStruct(CommerceHintObserver_OnCartExtraction_Params);
      this.onCartExtraction().then(function(response) {
        var responseParams =
            new CommerceHintObserver_OnCartExtraction_ResponseParams();
        responseParams.productIdJson = response.productIdJson;
        responseParams.cartExtractionScript = response.cartExtractionScript;
        var builder = new codec.MessageV1Builder(
            kCommerceHintObserver_OnCartExtraction_Name,
            codec.align(CommerceHintObserver_OnCartExtraction_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CommerceHintObserver_OnCartExtraction_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateCommerceHintObserverRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kCommerceHintObserver_OnAddToCart_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnAddToCart_Params;
      break;
      case kCommerceHintObserver_OnVisitCart_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnVisitCart_Params;
      break;
      case kCommerceHintObserver_OnCartProductUpdated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnCartProductUpdated_Params;
      break;
      case kCommerceHintObserver_OnVisitCheckout_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnVisitCheckout_Params;
      break;
      case kCommerceHintObserver_OnPurchase_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnPurchase_Params;
      break;
      case kCommerceHintObserver_OnFormSubmit_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnFormSubmit_Params;
      break;
      case kCommerceHintObserver_OnWillSendRequest_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CommerceHintObserver_OnWillSendRequest_Params;
      break;
      case kCommerceHintObserver_OnNavigation_Name:
        if (message.expectsResponse())
          paramsClass = CommerceHintObserver_OnNavigation_Params;
      break;
      case kCommerceHintObserver_OnCartExtraction_Name:
        if (message.expectsResponse())
          paramsClass = CommerceHintObserver_OnCartExtraction_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateCommerceHintObserverResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kCommerceHintObserver_OnNavigation_Name:
        if (message.isResponse())
          paramsClass = CommerceHintObserver_OnNavigation_ResponseParams;
        break;
      case kCommerceHintObserver_OnCartExtraction_Name:
        if (message.isResponse())
          paramsClass = CommerceHintObserver_OnCartExtraction_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var CommerceHintObserver = {
    name: 'cart.mojom.CommerceHintObserver',
    kVersion: 0,
    ptrClass: CommerceHintObserverPtr,
    proxyClass: CommerceHintObserverProxy,
    stubClass: CommerceHintObserverStub,
    validateRequest: validateCommerceHintObserverRequest,
    validateResponse: validateCommerceHintObserverResponse,
  };
  CommerceHintObserverStub.prototype.validator = validateCommerceHintObserverRequest;
  CommerceHintObserverProxy.prototype.validator = validateCommerceHintObserverResponse;
  exports.Product = Product;
  exports.Heuristics = Heuristics;
  exports.CommerceHintObserver = CommerceHintObserver;
  exports.CommerceHintObserverPtr = CommerceHintObserverPtr;
  exports.CommerceHintObserverAssociatedPtr = CommerceHintObserverAssociatedPtr;
})();