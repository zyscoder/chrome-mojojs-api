// chrome/common/search/search.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/search/search.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('search.mojom');
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../url/mojom/url.mojom.js');
  }


  var NTPLoggingEventType = {};

  NTPLoggingEventType.isKnownEnumValue = function(value) {
    return false;
  };

  NTPLoggingEventType.toKnownEnumValue = function(value) {
    return value;
  };

  NTPLoggingEventType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var OmniboxFocusState = {};

  OmniboxFocusState.isKnownEnumValue = function(value) {
    return false;
  };

  OmniboxFocusState.toKnownEnumValue = function(value) {
    return value;
  };

  OmniboxFocusState.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var OmniboxFocusChangeReason = {};

  OmniboxFocusChangeReason.isKnownEnumValue = function(value) {
    return false;
  };

  OmniboxFocusChangeReason.toKnownEnumValue = function(value) {
    return value;
  };

  OmniboxFocusChangeReason.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function NTPTileImpression(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NTPTileImpression.prototype.initDefaults_ = function() {
  };
  NTPTileImpression.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NTPTileImpression.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NTPTileImpression.encodedSize = codec.kStructHeaderSize + 0;

  NTPTileImpression.decode = function(decoder) {
    var packed;
    var val = new NTPTileImpression();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NTPTileImpression.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NTPTileImpression.encodedSize);
    encoder.writeUint32(0);
  };
  function InstantMostVisitedInfo(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  InstantMostVisitedInfo.prototype.initDefaults_ = function() {
  };
  InstantMostVisitedInfo.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  InstantMostVisitedInfo.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  InstantMostVisitedInfo.encodedSize = codec.kStructHeaderSize + 0;

  InstantMostVisitedInfo.decode = function(decoder) {
    var packed;
    var val = new InstantMostVisitedInfo();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  InstantMostVisitedInfo.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(InstantMostVisitedInfo.encodedSize);
    encoder.writeUint32(0);
  };
  function NtpTheme(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NtpTheme.prototype.initDefaults_ = function() {
  };
  NtpTheme.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NtpTheme.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NtpTheme.encodedSize = codec.kStructHeaderSize + 0;

  NtpTheme.decode = function(decoder) {
    var packed;
    var val = new NtpTheme();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NtpTheme.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NtpTheme.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearchConnector_Connect_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchConnector_Connect_Params.prototype.initDefaults_ = function() {
    this.embeddedSearch = new associatedBindings.AssociatedInterfaceRequest();
    this.client = new associatedBindings.AssociatedInterfacePtrInfo();
  };
  EmbeddedSearchConnector_Connect_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchConnector_Connect_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchConnector_Connect_Params.embeddedSearch
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchConnector_Connect_Params.client
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 4, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchConnector_Connect_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearchConnector_Connect_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchConnector_Connect_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.embeddedSearch =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.client =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchConnector_Connect_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchConnector_Connect_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.embeddedSearch);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.client);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_FocusOmnibox_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_FocusOmnibox_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.focus = false;
  };
  EmbeddedSearch_FocusOmnibox_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_FocusOmnibox_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  EmbeddedSearch_FocusOmnibox_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_FocusOmnibox_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_FocusOmnibox_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.focus = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_FocusOmnibox_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_FocusOmnibox_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    packed = 0;
    packed |= (val.focus & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_DeleteMostVisitedItem_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_DeleteMostVisitedItem_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
  };
  EmbeddedSearch_DeleteMostVisitedItem_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_DeleteMostVisitedItem_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_DeleteMostVisitedItem_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_DeleteMostVisitedItem_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearch_UndoAllMostVisitedDeletions_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UndoAllMostVisitedDeletions_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_UndoMostVisitedDeletion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UndoMostVisitedDeletion_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
  };
  EmbeddedSearch_UndoMostVisitedDeletion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_UndoMostVisitedDeletion_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_UndoMostVisitedDeletion_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UndoMostVisitedDeletion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearchClient_SetPageSequenceNumber_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_SetPageSequenceNumber_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearchClient_SetPageSequenceNumber_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_SetPageSequenceNumber_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_SetPageSequenceNumber_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearchClient_FocusChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_FocusChanged_Params.prototype.initDefaults_ = function() {
    this.newFocusState = 0;
    this.reason = 0;
  };
  EmbeddedSearchClient_FocusChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_FocusChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_FocusChanged_Params.newFocusState
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, OmniboxFocusState);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_FocusChanged_Params.reason
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, OmniboxFocusChangeReason);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_FocusChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_FocusChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_FocusChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.newFocusState =
        decoder.decodeStruct(new codec.Enum(OmniboxFocusState));
    val.reason =
        decoder.decodeStruct(new codec.Enum(OmniboxFocusChangeReason));
    return val;
  };

  EmbeddedSearchClient_FocusChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_FocusChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.newFocusState);
    encoder.encodeStruct(codec.Int32, val.reason);
  };
  function EmbeddedSearchClient_MostVisitedInfoChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_MostVisitedInfoChanged_Params.prototype.initDefaults_ = function() {
    this.mostVisitedInfo = null;
  };
  EmbeddedSearchClient_MostVisitedInfoChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_MostVisitedInfoChanged_Params.mostVisitedInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, InstantMostVisitedInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_MostVisitedInfoChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.mostVisitedInfo =
        decoder.decodeStructPointer(InstantMostVisitedInfo);
    return val;
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(InstantMostVisitedInfo, val.mostVisitedInfo);
  };
  function EmbeddedSearchClient_SetInputInProgress_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_SetInputInProgress_Params.prototype.initDefaults_ = function() {
    this.inputInProgress = false;
  };
  EmbeddedSearchClient_SetInputInProgress_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_SetInputInProgress_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_SetInputInProgress_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_SetInputInProgress_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_SetInputInProgress_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.inputInProgress = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchClient_SetInputInProgress_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_SetInputInProgress_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.inputInProgress & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearchClient_ThemeChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_ThemeChanged_Params.prototype.initDefaults_ = function() {
    this.theme = null;
  };
  EmbeddedSearchClient_ThemeChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_ThemeChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_ThemeChanged_Params.theme
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, NtpTheme, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_ThemeChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_ThemeChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_ThemeChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.theme =
        decoder.decodeStructPointer(NtpTheme);
    return val;
  };

  EmbeddedSearchClient_ThemeChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_ThemeChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(NtpTheme, val.theme);
  };
  var kEmbeddedSearchConnector_Connect_Name = 1769890021;

  function EmbeddedSearchConnectorPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearchConnector,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchConnectorAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearchConnector, associatedInterfacePtrInfo);
  }

  EmbeddedSearchConnectorAssociatedPtr.prototype =
      Object.create(EmbeddedSearchConnectorPtr.prototype);
  EmbeddedSearchConnectorAssociatedPtr.prototype.constructor =
      EmbeddedSearchConnectorAssociatedPtr;

  function EmbeddedSearchConnectorProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchConnectorPtr.prototype.connect = function() {
    return EmbeddedSearchConnectorProxy.prototype.connect
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchConnectorProxy.prototype.connect = function(embeddedSearch, client) {
    var params_ = new EmbeddedSearchConnector_Connect_Params();
    params_.embeddedSearch = embeddedSearch;
    params_.client = client;
    var builder = new codec.MessageV2Builder(
        kEmbeddedSearchConnector_Connect_Name,
        codec.align(EmbeddedSearchConnector_Connect_Params.encodedSize));
    builder.setPayload(EmbeddedSearchConnector_Connect_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchConnectorStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchConnectorStub.prototype.connect = function(embeddedSearch, client) {
    return this.delegate_ && this.delegate_.connect && this.delegate_.connect(embeddedSearch, client);
  }

  EmbeddedSearchConnectorStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearchConnector_Connect_Name:
      var params = reader.decodeStruct(EmbeddedSearchConnector_Connect_Params);
      this.connect(params.embeddedSearch, params.client);
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchConnectorStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateEmbeddedSearchConnectorRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearchConnector_Connect_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchConnector_Connect_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchConnectorResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var EmbeddedSearchConnector = {
    name: 'search.mojom.EmbeddedSearchConnector',
    kVersion: 0,
    ptrClass: EmbeddedSearchConnectorPtr,
    proxyClass: EmbeddedSearchConnectorProxy,
    stubClass: EmbeddedSearchConnectorStub,
    validateRequest: validateEmbeddedSearchConnectorRequest,
    validateResponse: null,
  };
  EmbeddedSearchConnectorStub.prototype.validator = validateEmbeddedSearchConnectorRequest;
  EmbeddedSearchConnectorProxy.prototype.validator = null;
  var kEmbeddedSearch_FocusOmnibox_Name = 1298085959;
  var kEmbeddedSearch_DeleteMostVisitedItem_Name = 221253772;
  var kEmbeddedSearch_UndoAllMostVisitedDeletions_Name = 730346031;
  var kEmbeddedSearch_UndoMostVisitedDeletion_Name = 605974927;

  function EmbeddedSearchPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearch,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearch, associatedInterfacePtrInfo);
  }

  EmbeddedSearchAssociatedPtr.prototype =
      Object.create(EmbeddedSearchPtr.prototype);
  EmbeddedSearchAssociatedPtr.prototype.constructor =
      EmbeddedSearchAssociatedPtr;

  function EmbeddedSearchProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchPtr.prototype.focusOmnibox = function() {
    return EmbeddedSearchProxy.prototype.focusOmnibox
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.focusOmnibox = function(pageSeqNo, focus) {
    var params_ = new EmbeddedSearch_FocusOmnibox_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.focus = focus;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_FocusOmnibox_Name,
        codec.align(EmbeddedSearch_FocusOmnibox_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_FocusOmnibox_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.deleteMostVisitedItem = function() {
    return EmbeddedSearchProxy.prototype.deleteMostVisitedItem
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.deleteMostVisitedItem = function(pageSeqNo, url) {
    var params_ = new EmbeddedSearch_DeleteMostVisitedItem_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_DeleteMostVisitedItem_Name,
        codec.align(EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_DeleteMostVisitedItem_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.undoAllMostVisitedDeletions = function() {
    return EmbeddedSearchProxy.prototype.undoAllMostVisitedDeletions
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.undoAllMostVisitedDeletions = function(pageSeqNo) {
    var params_ = new EmbeddedSearch_UndoAllMostVisitedDeletions_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_UndoAllMostVisitedDeletions_Name,
        codec.align(EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_UndoAllMostVisitedDeletions_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.undoMostVisitedDeletion = function() {
    return EmbeddedSearchProxy.prototype.undoMostVisitedDeletion
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.undoMostVisitedDeletion = function(pageSeqNo, url) {
    var params_ = new EmbeddedSearch_UndoMostVisitedDeletion_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_UndoMostVisitedDeletion_Name,
        codec.align(EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_UndoMostVisitedDeletion_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchStub.prototype.focusOmnibox = function(pageSeqNo, focus) {
    return this.delegate_ && this.delegate_.focusOmnibox && this.delegate_.focusOmnibox(pageSeqNo, focus);
  }
  EmbeddedSearchStub.prototype.deleteMostVisitedItem = function(pageSeqNo, url) {
    return this.delegate_ && this.delegate_.deleteMostVisitedItem && this.delegate_.deleteMostVisitedItem(pageSeqNo, url);
  }
  EmbeddedSearchStub.prototype.undoAllMostVisitedDeletions = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.undoAllMostVisitedDeletions && this.delegate_.undoAllMostVisitedDeletions(pageSeqNo);
  }
  EmbeddedSearchStub.prototype.undoMostVisitedDeletion = function(pageSeqNo, url) {
    return this.delegate_ && this.delegate_.undoMostVisitedDeletion && this.delegate_.undoMostVisitedDeletion(pageSeqNo, url);
  }

  EmbeddedSearchStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearch_FocusOmnibox_Name:
      var params = reader.decodeStruct(EmbeddedSearch_FocusOmnibox_Params);
      this.focusOmnibox(params.pageSeqNo, params.focus);
      return true;
    case kEmbeddedSearch_DeleteMostVisitedItem_Name:
      var params = reader.decodeStruct(EmbeddedSearch_DeleteMostVisitedItem_Params);
      this.deleteMostVisitedItem(params.pageSeqNo, params.url);
      return true;
    case kEmbeddedSearch_UndoAllMostVisitedDeletions_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UndoAllMostVisitedDeletions_Params);
      this.undoAllMostVisitedDeletions(params.pageSeqNo);
      return true;
    case kEmbeddedSearch_UndoMostVisitedDeletion_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UndoMostVisitedDeletion_Params);
      this.undoMostVisitedDeletion(params.pageSeqNo, params.url);
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateEmbeddedSearchRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearch_FocusOmnibox_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_FocusOmnibox_Params;
      break;
      case kEmbeddedSearch_DeleteMostVisitedItem_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_DeleteMostVisitedItem_Params;
      break;
      case kEmbeddedSearch_UndoAllMostVisitedDeletions_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_UndoAllMostVisitedDeletions_Params;
      break;
      case kEmbeddedSearch_UndoMostVisitedDeletion_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_UndoMostVisitedDeletion_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var EmbeddedSearch = {
    name: 'search.mojom.EmbeddedSearch',
    kVersion: 0,
    ptrClass: EmbeddedSearchPtr,
    proxyClass: EmbeddedSearchProxy,
    stubClass: EmbeddedSearchStub,
    validateRequest: validateEmbeddedSearchRequest,
    validateResponse: null,
  };
  EmbeddedSearchStub.prototype.validator = validateEmbeddedSearchRequest;
  EmbeddedSearchProxy.prototype.validator = null;
  var kEmbeddedSearchClient_SetPageSequenceNumber_Name = 418373004;
  var kEmbeddedSearchClient_FocusChanged_Name = 1541036718;
  var kEmbeddedSearchClient_MostVisitedInfoChanged_Name = 625375046;
  var kEmbeddedSearchClient_SetInputInProgress_Name = 1025092356;
  var kEmbeddedSearchClient_ThemeChanged_Name = 250237299;

  function EmbeddedSearchClientPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearchClient,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchClientAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearchClient, associatedInterfacePtrInfo);
  }

  EmbeddedSearchClientAssociatedPtr.prototype =
      Object.create(EmbeddedSearchClientPtr.prototype);
  EmbeddedSearchClientAssociatedPtr.prototype.constructor =
      EmbeddedSearchClientAssociatedPtr;

  function EmbeddedSearchClientProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchClientPtr.prototype.setPageSequenceNumber = function() {
    return EmbeddedSearchClientProxy.prototype.setPageSequenceNumber
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.setPageSequenceNumber = function(pageSeqNo) {
    var params_ = new EmbeddedSearchClient_SetPageSequenceNumber_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_SetPageSequenceNumber_Name,
        codec.align(EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_SetPageSequenceNumber_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.focusChanged = function() {
    return EmbeddedSearchClientProxy.prototype.focusChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.focusChanged = function(newFocusState, reason) {
    var params_ = new EmbeddedSearchClient_FocusChanged_Params();
    params_.newFocusState = newFocusState;
    params_.reason = reason;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_FocusChanged_Name,
        codec.align(EmbeddedSearchClient_FocusChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_FocusChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.mostVisitedInfoChanged = function() {
    return EmbeddedSearchClientProxy.prototype.mostVisitedInfoChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.mostVisitedInfoChanged = function(mostVisitedInfo) {
    var params_ = new EmbeddedSearchClient_MostVisitedInfoChanged_Params();
    params_.mostVisitedInfo = mostVisitedInfo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_MostVisitedInfoChanged_Name,
        codec.align(EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_MostVisitedInfoChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.setInputInProgress = function() {
    return EmbeddedSearchClientProxy.prototype.setInputInProgress
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.setInputInProgress = function(inputInProgress) {
    var params_ = new EmbeddedSearchClient_SetInputInProgress_Params();
    params_.inputInProgress = inputInProgress;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_SetInputInProgress_Name,
        codec.align(EmbeddedSearchClient_SetInputInProgress_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_SetInputInProgress_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.themeChanged = function() {
    return EmbeddedSearchClientProxy.prototype.themeChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.themeChanged = function(theme) {
    var params_ = new EmbeddedSearchClient_ThemeChanged_Params();
    params_.theme = theme;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_ThemeChanged_Name,
        codec.align(EmbeddedSearchClient_ThemeChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_ThemeChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchClientStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchClientStub.prototype.setPageSequenceNumber = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.setPageSequenceNumber && this.delegate_.setPageSequenceNumber(pageSeqNo);
  }
  EmbeddedSearchClientStub.prototype.focusChanged = function(newFocusState, reason) {
    return this.delegate_ && this.delegate_.focusChanged && this.delegate_.focusChanged(newFocusState, reason);
  }
  EmbeddedSearchClientStub.prototype.mostVisitedInfoChanged = function(mostVisitedInfo) {
    return this.delegate_ && this.delegate_.mostVisitedInfoChanged && this.delegate_.mostVisitedInfoChanged(mostVisitedInfo);
  }
  EmbeddedSearchClientStub.prototype.setInputInProgress = function(inputInProgress) {
    return this.delegate_ && this.delegate_.setInputInProgress && this.delegate_.setInputInProgress(inputInProgress);
  }
  EmbeddedSearchClientStub.prototype.themeChanged = function(theme) {
    return this.delegate_ && this.delegate_.themeChanged && this.delegate_.themeChanged(theme);
  }

  EmbeddedSearchClientStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearchClient_SetPageSequenceNumber_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_SetPageSequenceNumber_Params);
      this.setPageSequenceNumber(params.pageSeqNo);
      return true;
    case kEmbeddedSearchClient_FocusChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_FocusChanged_Params);
      this.focusChanged(params.newFocusState, params.reason);
      return true;
    case kEmbeddedSearchClient_MostVisitedInfoChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_MostVisitedInfoChanged_Params);
      this.mostVisitedInfoChanged(params.mostVisitedInfo);
      return true;
    case kEmbeddedSearchClient_SetInputInProgress_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_SetInputInProgress_Params);
      this.setInputInProgress(params.inputInProgress);
      return true;
    case kEmbeddedSearchClient_ThemeChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_ThemeChanged_Params);
      this.themeChanged(params.theme);
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchClientStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateEmbeddedSearchClientRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearchClient_SetPageSequenceNumber_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_SetPageSequenceNumber_Params;
      break;
      case kEmbeddedSearchClient_FocusChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_FocusChanged_Params;
      break;
      case kEmbeddedSearchClient_MostVisitedInfoChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_MostVisitedInfoChanged_Params;
      break;
      case kEmbeddedSearchClient_SetInputInProgress_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_SetInputInProgress_Params;
      break;
      case kEmbeddedSearchClient_ThemeChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_ThemeChanged_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchClientResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var EmbeddedSearchClient = {
    name: 'search.mojom.EmbeddedSearchClient',
    kVersion: 0,
    ptrClass: EmbeddedSearchClientPtr,
    proxyClass: EmbeddedSearchClientProxy,
    stubClass: EmbeddedSearchClientStub,
    validateRequest: validateEmbeddedSearchClientRequest,
    validateResponse: null,
  };
  EmbeddedSearchClientStub.prototype.validator = validateEmbeddedSearchClientRequest;
  EmbeddedSearchClientProxy.prototype.validator = null;
  exports.NTPLoggingEventType = NTPLoggingEventType;
  exports.OmniboxFocusState = OmniboxFocusState;
  exports.OmniboxFocusChangeReason = OmniboxFocusChangeReason;
  exports.NTPTileImpression = NTPTileImpression;
  exports.InstantMostVisitedInfo = InstantMostVisitedInfo;
  exports.NtpTheme = NtpTheme;
  exports.EmbeddedSearchConnector = EmbeddedSearchConnector;
  exports.EmbeddedSearchConnectorPtr = EmbeddedSearchConnectorPtr;
  exports.EmbeddedSearchConnectorAssociatedPtr = EmbeddedSearchConnectorAssociatedPtr;
  exports.EmbeddedSearch = EmbeddedSearch;
  exports.EmbeddedSearchPtr = EmbeddedSearchPtr;
  exports.EmbeddedSearchAssociatedPtr = EmbeddedSearchAssociatedPtr;
  exports.EmbeddedSearchClient = EmbeddedSearchClient;
  exports.EmbeddedSearchClientPtr = EmbeddedSearchClientPtr;
  exports.EmbeddedSearchClientAssociatedPtr = EmbeddedSearchClientAssociatedPtr;
})();