// third_party/blink/public/mojom/worker/dedicated_worker_host_factory.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/worker/dedicated_worker_host_factory.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var cross_origin_embedder_policy$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/cross_origin_embedder_policy.mojom', '../../../../../services/network/public/mojom/cross_origin_embedder_policy.mojom.js');
  }
  var fetch_api$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/fetch_api.mojom', '../../../../../services/network/public/mojom/fetch_api.mojom.js');
  }
  var blob_url_store$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/blob/blob_url_store.mojom', '../blob/blob_url_store.mojom.js');
  }
  var browser_interface_broker$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/browser_interface_broker.mojom', '../browser_interface_broker.mojom.js');
  }
  var fetch_client_settings_object$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/loader/fetch_client_settings_object.mojom', '../loader/fetch_client_settings_object.mojom.js');
  }
  var subresource_loader_updater$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/worker/subresource_loader_updater.mojom', 'subresource_loader_updater.mojom.js');
  }
  var url_loader_factory_bundle$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/loader/url_loader_factory_bundle.mojom', '../loader/url_loader_factory_bundle.mojom.js');
  }
  var dedicated_worker_host$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/worker/dedicated_worker_host.mojom', 'dedicated_worker_host.mojom.js');
  }
  var worker_main_script_load_params$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/worker/worker_main_script_load_params.mojom', 'worker_main_script_load_params.mojom.js');
  }
  var controller_service_worker$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/service_worker/controller_service_worker.mojom', '../service_worker/controller_service_worker.mojom.js');
  }
  var service_worker_container$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/service_worker/service_worker_container.mojom', '../service_worker/service_worker_container.mojom.js');
  }
  var tokens$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/tokens/tokens.mojom', '../tokens/tokens.mojom.js');
  }
  var back_forward_cache_controller$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/back_forward_cache_controller.mojom', '../frame/back_forward_cache_controller.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }


  var NAVIGATION_DEDICATED_WORKER_SPEC = "navigation:dedicated_worker";

  function DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.prototype.initDefaults_ = function() {
    this.browserInterfaceBroker = new browser_interface_broker$.BrowserInterfaceBrokerPtr();
    this.host = new dedicated_worker_host$.DedicatedWorkerHostPtr();
  };
  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.browserInterfaceBroker
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.host
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 8, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.encodedSize = codec.kStructHeaderSize + 16;

  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.browserInterfaceBroker =
        decoder.decodeStruct(new codec.Interface(browser_interface_broker$.BrowserInterfaceBrokerPtr));
    val.host =
        decoder.decodeStruct(new codec.Interface(dedicated_worker_host$.DedicatedWorkerHostPtr));
    return val;
  };

  DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(browser_interface_broker$.BrowserInterfaceBrokerPtr), val.browserInterfaceBroker);
    encoder.encodeStruct(new codec.Interface(dedicated_worker_host$.DedicatedWorkerHostPtr), val.host);
  };
  function DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.prototype.initDefaults_ = function() {
    this.serviceWorkerContainerInfo = null;
    this.mainScriptLoadParams = null;
    this.subresourceLoaderFactories = null;
    this.subresourceLoaderUpdater = new bindings.InterfaceRequest();
    this.controllerInfo = null;
    this.backForwardCacheControllerHost = new back_forward_cache_controller$.BackForwardCacheControllerHostPtr();
  };
  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 56}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.serviceWorkerContainerInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, service_worker_container$.ServiceWorkerContainerInfoForClient, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.mainScriptLoadParams
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, worker_main_script_load_params$.WorkerMainScriptLoadParams, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.subresourceLoaderFactories
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url_loader_factory_bundle$.URLLoaderFactoryBundle, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.subresourceLoaderUpdater
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 24, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.controllerInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, controller_service_worker$.ControllerServiceWorkerInfo, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.backForwardCacheControllerHost
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 40, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.encodedSize = codec.kStructHeaderSize + 48;

  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.serviceWorkerContainerInfo =
        decoder.decodeStructPointer(service_worker_container$.ServiceWorkerContainerInfoForClient);
    val.mainScriptLoadParams =
        decoder.decodeStructPointer(worker_main_script_load_params$.WorkerMainScriptLoadParams);
    val.subresourceLoaderFactories =
        decoder.decodeStructPointer(url_loader_factory_bundle$.URLLoaderFactoryBundle);
    val.subresourceLoaderUpdater =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.controllerInfo =
        decoder.decodeStructPointer(controller_service_worker$.ControllerServiceWorkerInfo);
    val.backForwardCacheControllerHost =
        decoder.decodeStruct(new codec.Interface(back_forward_cache_controller$.BackForwardCacheControllerHostPtr));
    return val;
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(service_worker_container$.ServiceWorkerContainerInfoForClient, val.serviceWorkerContainerInfo);
    encoder.encodeStructPointer(worker_main_script_load_params$.WorkerMainScriptLoadParams, val.mainScriptLoadParams);
    encoder.encodeStructPointer(url_loader_factory_bundle$.URLLoaderFactoryBundle, val.subresourceLoaderFactories);
    encoder.encodeStruct(codec.InterfaceRequest, val.subresourceLoaderUpdater);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(controller_service_worker$.ControllerServiceWorkerInfo, val.controllerInfo);
    encoder.encodeStruct(new codec.Interface(back_forward_cache_controller$.BackForwardCacheControllerHostPtr), val.backForwardCacheControllerHost);
  };
  function DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.prototype.initDefaults_ = function() {
  };
  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.encodedSize = codec.kStructHeaderSize + 0;

  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function DedicatedWorkerHostFactory_CreateWorkerHost_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactory_CreateWorkerHost_Params.prototype.initDefaults_ = function() {
    this.token = null;
    this.scriptUrl = null;
    this.browserInterfaceBroker = new bindings.InterfaceRequest();
    this.host = new bindings.InterfaceRequest();
  };
  DedicatedWorkerHostFactory_CreateWorkerHost_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_Params.token
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.DedicatedWorkerToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_Params.scriptUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_Params.browserInterfaceBroker
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_Params.host
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 20, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_Params.encodedSize = codec.kStructHeaderSize + 24;

  DedicatedWorkerHostFactory_CreateWorkerHost_Params.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactory_CreateWorkerHost_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.token =
        decoder.decodeStructPointer(tokens$.DedicatedWorkerToken);
    val.scriptUrl =
        decoder.decodeStructPointer(url$.Url);
    val.browserInterfaceBroker =
        decoder.decodeStruct(codec.InterfaceRequest);
    val.host =
        decoder.decodeStruct(codec.InterfaceRequest);
    return val;
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactory_CreateWorkerHost_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.DedicatedWorkerToken, val.token);
    encoder.encodeStructPointer(url$.Url, val.scriptUrl);
    encoder.encodeStruct(codec.InterfaceRequest, val.browserInterfaceBroker);
    encoder.encodeStruct(codec.InterfaceRequest, val.host);
  };
  function DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.prototype.initDefaults_ = function() {
    this.parentCoep = null;
    this.backForwardCacheControllerHost = new back_forward_cache_controller$.BackForwardCacheControllerHostPtr();
  };
  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.parentCoep
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, cross_origin_embedder_policy$.CrossOriginEmbedderPolicy, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.backForwardCacheControllerHost
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 8, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.parentCoep =
        decoder.decodeStructPointer(cross_origin_embedder_policy$.CrossOriginEmbedderPolicy);
    val.backForwardCacheControllerHost =
        decoder.decodeStruct(new codec.NullableInterface(back_forward_cache_controller$.BackForwardCacheControllerHostPtr));
    return val;
  };

  DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(cross_origin_embedder_policy$.CrossOriginEmbedderPolicy, val.parentCoep);
    encoder.encodeStruct(new codec.NullableInterface(back_forward_cache_controller$.BackForwardCacheControllerHostPtr), val.backForwardCacheControllerHost);
  };
  function DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.prototype.initDefaults_ = function() {
    this.token = null;
    this.scriptUrl = null;
    this.credentialsMode = 0;
    this.outsideFetchClientSettingsObject = null;
    this.blobUrlToken = new blob_url_store$.BlobURLTokenPtr();
    this.client = new DedicatedWorkerHostFactoryClientPtr();
  };
  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 56}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.token
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.DedicatedWorkerToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.scriptUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.credentialsMode
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 16, fetch_api$.CredentialsMode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.outsideFetchClientSettingsObject
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, fetch_client_settings_object$.FetchClientSettingsObject, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.blobUrlToken
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 32, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.client
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 40, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.encodedSize = codec.kStructHeaderSize + 48;

  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.decode = function(decoder) {
    var packed;
    var val = new DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.token =
        decoder.decodeStructPointer(tokens$.DedicatedWorkerToken);
    val.scriptUrl =
        decoder.decodeStructPointer(url$.Url);
    val.credentialsMode =
        decoder.decodeStruct(new codec.Enum(fetch_api$.CredentialsMode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.outsideFetchClientSettingsObject =
        decoder.decodeStructPointer(fetch_client_settings_object$.FetchClientSettingsObject);
    val.blobUrlToken =
        decoder.decodeStruct(new codec.NullableInterface(blob_url_store$.BlobURLTokenPtr));
    val.client =
        decoder.decodeStruct(new codec.Interface(DedicatedWorkerHostFactoryClientPtr));
    return val;
  };

  DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.DedicatedWorkerToken, val.token);
    encoder.encodeStructPointer(url$.Url, val.scriptUrl);
    encoder.encodeStruct(codec.Int32, val.credentialsMode);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(fetch_client_settings_object$.FetchClientSettingsObject, val.outsideFetchClientSettingsObject);
    encoder.encodeStruct(new codec.NullableInterface(blob_url_store$.BlobURLTokenPtr), val.blobUrlToken);
    encoder.encodeStruct(new codec.Interface(DedicatedWorkerHostFactoryClientPtr), val.client);
  };
  var kDedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Name = 1947688988;
  var kDedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Name = 2102425937;
  var kDedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Name = 187348286;

  function DedicatedWorkerHostFactoryClientPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(DedicatedWorkerHostFactoryClient,
                                                   handleOrPtrInfo);
  }

  function DedicatedWorkerHostFactoryClientAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        DedicatedWorkerHostFactoryClient, associatedInterfacePtrInfo);
  }

  DedicatedWorkerHostFactoryClientAssociatedPtr.prototype =
      Object.create(DedicatedWorkerHostFactoryClientPtr.prototype);
  DedicatedWorkerHostFactoryClientAssociatedPtr.prototype.constructor =
      DedicatedWorkerHostFactoryClientAssociatedPtr;

  function DedicatedWorkerHostFactoryClientProxy(receiver) {
    this.receiver_ = receiver;
  }
  DedicatedWorkerHostFactoryClientPtr.prototype.onWorkerHostCreated = function() {
    return DedicatedWorkerHostFactoryClientProxy.prototype.onWorkerHostCreated
        .apply(this.ptr.getProxy(), arguments);
  };

  DedicatedWorkerHostFactoryClientProxy.prototype.onWorkerHostCreated = function(browserInterfaceBroker, host) {
    var params_ = new DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params();
    params_.browserInterfaceBroker = browserInterfaceBroker;
    params_.host = host;
    var builder = new codec.MessageV0Builder(
        kDedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Name,
        codec.align(DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params.encodedSize));
    builder.encodeStruct(DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  DedicatedWorkerHostFactoryClientPtr.prototype.onScriptLoadStarted = function() {
    return DedicatedWorkerHostFactoryClientProxy.prototype.onScriptLoadStarted
        .apply(this.ptr.getProxy(), arguments);
  };

  DedicatedWorkerHostFactoryClientProxy.prototype.onScriptLoadStarted = function(serviceWorkerContainerInfo, mainScriptLoadParams, subresourceLoaderFactories, subresourceLoaderUpdater, controllerInfo, backForwardCacheControllerHost) {
    var params_ = new DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params();
    params_.serviceWorkerContainerInfo = serviceWorkerContainerInfo;
    params_.mainScriptLoadParams = mainScriptLoadParams;
    params_.subresourceLoaderFactories = subresourceLoaderFactories;
    params_.subresourceLoaderUpdater = subresourceLoaderUpdater;
    params_.controllerInfo = controllerInfo;
    params_.backForwardCacheControllerHost = backForwardCacheControllerHost;
    var builder = new codec.MessageV2Builder(
        kDedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Name,
        codec.align(DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params.encodedSize));
    builder.setPayload(DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  DedicatedWorkerHostFactoryClientPtr.prototype.onScriptLoadStartFailed = function() {
    return DedicatedWorkerHostFactoryClientProxy.prototype.onScriptLoadStartFailed
        .apply(this.ptr.getProxy(), arguments);
  };

  DedicatedWorkerHostFactoryClientProxy.prototype.onScriptLoadStartFailed = function() {
    var params_ = new DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params();
    var builder = new codec.MessageV0Builder(
        kDedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Name,
        codec.align(DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params.encodedSize));
    builder.encodeStruct(DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function DedicatedWorkerHostFactoryClientStub(delegate) {
    this.delegate_ = delegate;
  }
  DedicatedWorkerHostFactoryClientStub.prototype.onWorkerHostCreated = function(browserInterfaceBroker, host) {
    return this.delegate_ && this.delegate_.onWorkerHostCreated && this.delegate_.onWorkerHostCreated(browserInterfaceBroker, host);
  }
  DedicatedWorkerHostFactoryClientStub.prototype.onScriptLoadStarted = function(serviceWorkerContainerInfo, mainScriptLoadParams, subresourceLoaderFactories, subresourceLoaderUpdater, controllerInfo, backForwardCacheControllerHost) {
    return this.delegate_ && this.delegate_.onScriptLoadStarted && this.delegate_.onScriptLoadStarted(serviceWorkerContainerInfo, mainScriptLoadParams, subresourceLoaderFactories, subresourceLoaderUpdater, controllerInfo, backForwardCacheControllerHost);
  }
  DedicatedWorkerHostFactoryClientStub.prototype.onScriptLoadStartFailed = function() {
    return this.delegate_ && this.delegate_.onScriptLoadStartFailed && this.delegate_.onScriptLoadStartFailed();
  }

  DedicatedWorkerHostFactoryClientStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kDedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Name:
      var params = reader.decodeStruct(DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params);
      this.onWorkerHostCreated(params.browserInterfaceBroker, params.host);
      return true;
    case kDedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Name:
      var params = reader.decodeStruct(DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params);
      this.onScriptLoadStarted(params.serviceWorkerContainerInfo, params.mainScriptLoadParams, params.subresourceLoaderFactories, params.subresourceLoaderUpdater, params.controllerInfo, params.backForwardCacheControllerHost);
      return true;
    case kDedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Name:
      var params = reader.decodeStruct(DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params);
      this.onScriptLoadStartFailed();
      return true;
    default:
      return false;
    }
  };

  DedicatedWorkerHostFactoryClientStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateDedicatedWorkerHostFactoryClientRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kDedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = DedicatedWorkerHostFactoryClient_OnWorkerHostCreated_Params;
      break;
      case kDedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = DedicatedWorkerHostFactoryClient_OnScriptLoadStarted_Params;
      break;
      case kDedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = DedicatedWorkerHostFactoryClient_OnScriptLoadStartFailed_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateDedicatedWorkerHostFactoryClientResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var DedicatedWorkerHostFactoryClient = {
    name: 'blink.mojom.DedicatedWorkerHostFactoryClient',
    kVersion: 0,
    ptrClass: DedicatedWorkerHostFactoryClientPtr,
    proxyClass: DedicatedWorkerHostFactoryClientProxy,
    stubClass: DedicatedWorkerHostFactoryClientStub,
    validateRequest: validateDedicatedWorkerHostFactoryClientRequest,
    validateResponse: null,
  };
  DedicatedWorkerHostFactoryClientStub.prototype.validator = validateDedicatedWorkerHostFactoryClientRequest;
  DedicatedWorkerHostFactoryClientProxy.prototype.validator = null;
  var kDedicatedWorkerHostFactory_CreateWorkerHost_Name = 1971219952;
  var kDedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Name = 443766262;

  function DedicatedWorkerHostFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(DedicatedWorkerHostFactory,
                                                   handleOrPtrInfo);
  }

  function DedicatedWorkerHostFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        DedicatedWorkerHostFactory, associatedInterfacePtrInfo);
  }

  DedicatedWorkerHostFactoryAssociatedPtr.prototype =
      Object.create(DedicatedWorkerHostFactoryPtr.prototype);
  DedicatedWorkerHostFactoryAssociatedPtr.prototype.constructor =
      DedicatedWorkerHostFactoryAssociatedPtr;

  function DedicatedWorkerHostFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  DedicatedWorkerHostFactoryPtr.prototype.createWorkerHost = function() {
    return DedicatedWorkerHostFactoryProxy.prototype.createWorkerHost
        .apply(this.ptr.getProxy(), arguments);
  };

  DedicatedWorkerHostFactoryProxy.prototype.createWorkerHost = function(token, scriptUrl, browserInterfaceBroker, host) {
    var params_ = new DedicatedWorkerHostFactory_CreateWorkerHost_Params();
    params_.token = token;
    params_.scriptUrl = scriptUrl;
    params_.browserInterfaceBroker = browserInterfaceBroker;
    params_.host = host;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDedicatedWorkerHostFactory_CreateWorkerHost_Name,
          codec.align(DedicatedWorkerHostFactory_CreateWorkerHost_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DedicatedWorkerHostFactory_CreateWorkerHost_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  DedicatedWorkerHostFactoryPtr.prototype.createWorkerHostAndStartScriptLoad = function() {
    return DedicatedWorkerHostFactoryProxy.prototype.createWorkerHostAndStartScriptLoad
        .apply(this.ptr.getProxy(), arguments);
  };

  DedicatedWorkerHostFactoryProxy.prototype.createWorkerHostAndStartScriptLoad = function(token, scriptUrl, credentialsMode, outsideFetchClientSettingsObject, blobUrlToken, client) {
    var params_ = new DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params();
    params_.token = token;
    params_.scriptUrl = scriptUrl;
    params_.credentialsMode = credentialsMode;
    params_.outsideFetchClientSettingsObject = outsideFetchClientSettingsObject;
    params_.blobUrlToken = blobUrlToken;
    params_.client = client;
    var builder = new codec.MessageV0Builder(
        kDedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Name,
        codec.align(DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params.encodedSize));
    builder.encodeStruct(DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function DedicatedWorkerHostFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  DedicatedWorkerHostFactoryStub.prototype.createWorkerHost = function(token, scriptUrl, browserInterfaceBroker, host) {
    return this.delegate_ && this.delegate_.createWorkerHost && this.delegate_.createWorkerHost(token, scriptUrl, browserInterfaceBroker, host);
  }
  DedicatedWorkerHostFactoryStub.prototype.createWorkerHostAndStartScriptLoad = function(token, scriptUrl, credentialsMode, outsideFetchClientSettingsObject, blobUrlToken, client) {
    return this.delegate_ && this.delegate_.createWorkerHostAndStartScriptLoad && this.delegate_.createWorkerHostAndStartScriptLoad(token, scriptUrl, credentialsMode, outsideFetchClientSettingsObject, blobUrlToken, client);
  }

  DedicatedWorkerHostFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kDedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Name:
      var params = reader.decodeStruct(DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params);
      this.createWorkerHostAndStartScriptLoad(params.token, params.scriptUrl, params.credentialsMode, params.outsideFetchClientSettingsObject, params.blobUrlToken, params.client);
      return true;
    default:
      return false;
    }
  };

  DedicatedWorkerHostFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kDedicatedWorkerHostFactory_CreateWorkerHost_Name:
      var params = reader.decodeStruct(DedicatedWorkerHostFactory_CreateWorkerHost_Params);
      this.createWorkerHost(params.token, params.scriptUrl, params.browserInterfaceBroker, params.host).then(function(response) {
        var responseParams =
            new DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams();
        responseParams.parentCoep = response.parentCoep;
        responseParams.backForwardCacheControllerHost = response.backForwardCacheControllerHost;
        var builder = new codec.MessageV1Builder(
            kDedicatedWorkerHostFactory_CreateWorkerHost_Name,
            codec.align(DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateDedicatedWorkerHostFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kDedicatedWorkerHostFactory_CreateWorkerHost_Name:
        if (message.expectsResponse())
          paramsClass = DedicatedWorkerHostFactory_CreateWorkerHost_Params;
      break;
      case kDedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = DedicatedWorkerHostFactory_CreateWorkerHostAndStartScriptLoad_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateDedicatedWorkerHostFactoryResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kDedicatedWorkerHostFactory_CreateWorkerHost_Name:
        if (message.isResponse())
          paramsClass = DedicatedWorkerHostFactory_CreateWorkerHost_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var DedicatedWorkerHostFactory = {
    name: 'blink.mojom.DedicatedWorkerHostFactory',
    kVersion: 0,
    ptrClass: DedicatedWorkerHostFactoryPtr,
    proxyClass: DedicatedWorkerHostFactoryProxy,
    stubClass: DedicatedWorkerHostFactoryStub,
    validateRequest: validateDedicatedWorkerHostFactoryRequest,
    validateResponse: validateDedicatedWorkerHostFactoryResponse,
  };
  DedicatedWorkerHostFactoryStub.prototype.validator = validateDedicatedWorkerHostFactoryRequest;
  DedicatedWorkerHostFactoryProxy.prototype.validator = validateDedicatedWorkerHostFactoryResponse;
  exports.NAVIGATION_DEDICATED_WORKER_SPEC = NAVIGATION_DEDICATED_WORKER_SPEC;
  exports.DedicatedWorkerHostFactoryClient = DedicatedWorkerHostFactoryClient;
  exports.DedicatedWorkerHostFactoryClientPtr = DedicatedWorkerHostFactoryClientPtr;
  exports.DedicatedWorkerHostFactoryClientAssociatedPtr = DedicatedWorkerHostFactoryClientAssociatedPtr;
  exports.DedicatedWorkerHostFactory = DedicatedWorkerHostFactory;
  exports.DedicatedWorkerHostFactoryPtr = DedicatedWorkerHostFactoryPtr;
  exports.DedicatedWorkerHostFactoryAssociatedPtr = DedicatedWorkerHostFactoryAssociatedPtr;
})();