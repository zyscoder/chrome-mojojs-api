// third_party/blink/public/mojom/digital_goods/digital_goods.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/digital_goods/digital_goods.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('payments.mojom');
  var digital_goods$ =
      mojo.internal.exposeNamespace('payments.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'components/digital_goods/mojom/digital_goods.mojom', '../../../../../components/digital_goods/mojom/digital_goods.mojom.js');
  }



  function DigitalGoods_GetDetails_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_GetDetails_Params.prototype.initDefaults_ = function() {
    this.itemIds = null;
  };
  DigitalGoods_GetDetails_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_GetDetails_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_GetDetails_Params.itemIds
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, codec.String, false, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_GetDetails_Params.encodedSize = codec.kStructHeaderSize + 8;

  DigitalGoods_GetDetails_Params.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_GetDetails_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.itemIds =
        decoder.decodeArrayPointer(codec.String);
    return val;
  };

  DigitalGoods_GetDetails_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_GetDetails_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.String, val.itemIds);
  };
  function DigitalGoods_GetDetails_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_GetDetails_ResponseParams.prototype.initDefaults_ = function() {
    this.code = 0;
    this.itemDetailsList = null;
  };
  DigitalGoods_GetDetails_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_GetDetails_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_GetDetails_ResponseParams.code
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, digital_goods$.BillingResponseCode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_GetDetails_ResponseParams.itemDetailsList
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 8, new codec.PointerTo(digital_goods$.ItemDetails), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_GetDetails_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  DigitalGoods_GetDetails_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_GetDetails_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(new codec.Enum(digital_goods$.BillingResponseCode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.itemDetailsList =
        decoder.decodeArrayPointer(new codec.PointerTo(digital_goods$.ItemDetails));
    return val;
  };

  DigitalGoods_GetDetails_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_GetDetails_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.code);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(new codec.PointerTo(digital_goods$.ItemDetails), val.itemDetailsList);
  };
  function DigitalGoods_ListPurchases_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_ListPurchases_Params.prototype.initDefaults_ = function() {
  };
  DigitalGoods_ListPurchases_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_ListPurchases_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_ListPurchases_Params.encodedSize = codec.kStructHeaderSize + 0;

  DigitalGoods_ListPurchases_Params.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_ListPurchases_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  DigitalGoods_ListPurchases_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_ListPurchases_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function DigitalGoods_ListPurchases_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_ListPurchases_ResponseParams.prototype.initDefaults_ = function() {
    this.code = 0;
    this.purchaseReferenceList = null;
  };
  DigitalGoods_ListPurchases_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_ListPurchases_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_ListPurchases_ResponseParams.code
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, digital_goods$.BillingResponseCode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_ListPurchases_ResponseParams.purchaseReferenceList
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 8, new codec.PointerTo(digital_goods$.PurchaseReference), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_ListPurchases_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  DigitalGoods_ListPurchases_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_ListPurchases_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(new codec.Enum(digital_goods$.BillingResponseCode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.purchaseReferenceList =
        decoder.decodeArrayPointer(new codec.PointerTo(digital_goods$.PurchaseReference));
    return val;
  };

  DigitalGoods_ListPurchases_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_ListPurchases_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.code);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(new codec.PointerTo(digital_goods$.PurchaseReference), val.purchaseReferenceList);
  };
  function DigitalGoods_ListPurchaseHistory_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_ListPurchaseHistory_Params.prototype.initDefaults_ = function() {
  };
  DigitalGoods_ListPurchaseHistory_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_ListPurchaseHistory_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_ListPurchaseHistory_Params.encodedSize = codec.kStructHeaderSize + 0;

  DigitalGoods_ListPurchaseHistory_Params.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_ListPurchaseHistory_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  DigitalGoods_ListPurchaseHistory_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_ListPurchaseHistory_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function DigitalGoods_ListPurchaseHistory_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_ListPurchaseHistory_ResponseParams.prototype.initDefaults_ = function() {
    this.code = 0;
    this.purchaseReferenceList = null;
  };
  DigitalGoods_ListPurchaseHistory_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_ListPurchaseHistory_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_ListPurchaseHistory_ResponseParams.code
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, digital_goods$.BillingResponseCode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_ListPurchaseHistory_ResponseParams.purchaseReferenceList
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 8, new codec.PointerTo(digital_goods$.PurchaseReference), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_ListPurchaseHistory_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  DigitalGoods_ListPurchaseHistory_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_ListPurchaseHistory_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(new codec.Enum(digital_goods$.BillingResponseCode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.purchaseReferenceList =
        decoder.decodeArrayPointer(new codec.PointerTo(digital_goods$.PurchaseReference));
    return val;
  };

  DigitalGoods_ListPurchaseHistory_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_ListPurchaseHistory_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.code);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(new codec.PointerTo(digital_goods$.PurchaseReference), val.purchaseReferenceList);
  };
  function DigitalGoods_Consume_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_Consume_Params.prototype.initDefaults_ = function() {
    this.purchaseToken = null;
  };
  DigitalGoods_Consume_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_Consume_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_Consume_Params.purchaseToken
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_Consume_Params.encodedSize = codec.kStructHeaderSize + 8;

  DigitalGoods_Consume_Params.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_Consume_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.purchaseToken =
        decoder.decodeStruct(codec.String);
    return val;
  };

  DigitalGoods_Consume_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_Consume_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.purchaseToken);
  };
  function DigitalGoods_Consume_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoods_Consume_ResponseParams.prototype.initDefaults_ = function() {
    this.code = 0;
  };
  DigitalGoods_Consume_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoods_Consume_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoods_Consume_ResponseParams.code
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, digital_goods$.BillingResponseCode);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoods_Consume_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  DigitalGoods_Consume_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DigitalGoods_Consume_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(new codec.Enum(digital_goods$.BillingResponseCode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  DigitalGoods_Consume_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoods_Consume_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.code);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function DigitalGoodsFactory_CreateDigitalGoods_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoodsFactory_CreateDigitalGoods_Params.prototype.initDefaults_ = function() {
    this.paymentMethod = null;
  };
  DigitalGoodsFactory_CreateDigitalGoods_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoodsFactory_CreateDigitalGoods_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoodsFactory_CreateDigitalGoods_Params.paymentMethod
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoodsFactory_CreateDigitalGoods_Params.encodedSize = codec.kStructHeaderSize + 8;

  DigitalGoodsFactory_CreateDigitalGoods_Params.decode = function(decoder) {
    var packed;
    var val = new DigitalGoodsFactory_CreateDigitalGoods_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.paymentMethod =
        decoder.decodeStruct(codec.String);
    return val;
  };

  DigitalGoodsFactory_CreateDigitalGoods_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoodsFactory_CreateDigitalGoods_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.paymentMethod);
  };
  function DigitalGoodsFactory_CreateDigitalGoods_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.prototype.initDefaults_ = function() {
    this.code = 0;
    this.digitalGoods = new DigitalGoodsPtr();
  };
  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.code
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, digital_goods$.CreateDigitalGoodsResponseCode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.digitalGoods
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 4, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new DigitalGoodsFactory_CreateDigitalGoods_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.code =
        decoder.decodeStruct(new codec.Enum(digital_goods$.CreateDigitalGoodsResponseCode));
    val.digitalGoods =
        decoder.decodeStruct(new codec.NullableInterface(DigitalGoodsPtr));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.code);
    encoder.encodeStruct(new codec.NullableInterface(DigitalGoodsPtr), val.digitalGoods);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  var kDigitalGoods_GetDetails_Name = 0;
  var kDigitalGoods_ListPurchases_Name = 1;
  var kDigitalGoods_ListPurchaseHistory_Name = 2;
  var kDigitalGoods_Consume_Name = 3;

  function DigitalGoodsPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(DigitalGoods,
                                                   handleOrPtrInfo);
  }

  function DigitalGoodsAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        DigitalGoods, associatedInterfacePtrInfo);
  }

  DigitalGoodsAssociatedPtr.prototype =
      Object.create(DigitalGoodsPtr.prototype);
  DigitalGoodsAssociatedPtr.prototype.constructor =
      DigitalGoodsAssociatedPtr;

  function DigitalGoodsProxy(receiver) {
    this.receiver_ = receiver;
  }
  DigitalGoodsPtr.prototype.getDetails = function() {
    return DigitalGoodsProxy.prototype.getDetails
        .apply(this.ptr.getProxy(), arguments);
  };

  DigitalGoodsProxy.prototype.getDetails = function(itemIds) {
    var params_ = new DigitalGoods_GetDetails_Params();
    params_.itemIds = itemIds;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDigitalGoods_GetDetails_Name,
          codec.align(DigitalGoods_GetDetails_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DigitalGoods_GetDetails_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DigitalGoods_GetDetails_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  DigitalGoodsPtr.prototype.listPurchases = function() {
    return DigitalGoodsProxy.prototype.listPurchases
        .apply(this.ptr.getProxy(), arguments);
  };

  DigitalGoodsProxy.prototype.listPurchases = function() {
    var params_ = new DigitalGoods_ListPurchases_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDigitalGoods_ListPurchases_Name,
          codec.align(DigitalGoods_ListPurchases_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DigitalGoods_ListPurchases_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DigitalGoods_ListPurchases_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  DigitalGoodsPtr.prototype.listPurchaseHistory = function() {
    return DigitalGoodsProxy.prototype.listPurchaseHistory
        .apply(this.ptr.getProxy(), arguments);
  };

  DigitalGoodsProxy.prototype.listPurchaseHistory = function() {
    var params_ = new DigitalGoods_ListPurchaseHistory_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDigitalGoods_ListPurchaseHistory_Name,
          codec.align(DigitalGoods_ListPurchaseHistory_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DigitalGoods_ListPurchaseHistory_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DigitalGoods_ListPurchaseHistory_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  DigitalGoodsPtr.prototype.consume = function() {
    return DigitalGoodsProxy.prototype.consume
        .apply(this.ptr.getProxy(), arguments);
  };

  DigitalGoodsProxy.prototype.consume = function(purchaseToken) {
    var params_ = new DigitalGoods_Consume_Params();
    params_.purchaseToken = purchaseToken;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDigitalGoods_Consume_Name,
          codec.align(DigitalGoods_Consume_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DigitalGoods_Consume_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DigitalGoods_Consume_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function DigitalGoodsStub(delegate) {
    this.delegate_ = delegate;
  }
  DigitalGoodsStub.prototype.getDetails = function(itemIds) {
    return this.delegate_ && this.delegate_.getDetails && this.delegate_.getDetails(itemIds);
  }
  DigitalGoodsStub.prototype.listPurchases = function() {
    return this.delegate_ && this.delegate_.listPurchases && this.delegate_.listPurchases();
  }
  DigitalGoodsStub.prototype.listPurchaseHistory = function() {
    return this.delegate_ && this.delegate_.listPurchaseHistory && this.delegate_.listPurchaseHistory();
  }
  DigitalGoodsStub.prototype.consume = function(purchaseToken) {
    return this.delegate_ && this.delegate_.consume && this.delegate_.consume(purchaseToken);
  }

  DigitalGoodsStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  DigitalGoodsStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kDigitalGoods_GetDetails_Name:
      var params = reader.decodeStruct(DigitalGoods_GetDetails_Params);
      this.getDetails(params.itemIds).then(function(response) {
        var responseParams =
            new DigitalGoods_GetDetails_ResponseParams();
        responseParams.code = response.code;
        responseParams.itemDetailsList = response.itemDetailsList;
        var builder = new codec.MessageV1Builder(
            kDigitalGoods_GetDetails_Name,
            codec.align(DigitalGoods_GetDetails_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DigitalGoods_GetDetails_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kDigitalGoods_ListPurchases_Name:
      var params = reader.decodeStruct(DigitalGoods_ListPurchases_Params);
      this.listPurchases().then(function(response) {
        var responseParams =
            new DigitalGoods_ListPurchases_ResponseParams();
        responseParams.code = response.code;
        responseParams.purchaseReferenceList = response.purchaseReferenceList;
        var builder = new codec.MessageV1Builder(
            kDigitalGoods_ListPurchases_Name,
            codec.align(DigitalGoods_ListPurchases_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DigitalGoods_ListPurchases_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kDigitalGoods_ListPurchaseHistory_Name:
      var params = reader.decodeStruct(DigitalGoods_ListPurchaseHistory_Params);
      this.listPurchaseHistory().then(function(response) {
        var responseParams =
            new DigitalGoods_ListPurchaseHistory_ResponseParams();
        responseParams.code = response.code;
        responseParams.purchaseReferenceList = response.purchaseReferenceList;
        var builder = new codec.MessageV1Builder(
            kDigitalGoods_ListPurchaseHistory_Name,
            codec.align(DigitalGoods_ListPurchaseHistory_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DigitalGoods_ListPurchaseHistory_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kDigitalGoods_Consume_Name:
      var params = reader.decodeStruct(DigitalGoods_Consume_Params);
      this.consume(params.purchaseToken).then(function(response) {
        var responseParams =
            new DigitalGoods_Consume_ResponseParams();
        responseParams.code = response.code;
        var builder = new codec.MessageV1Builder(
            kDigitalGoods_Consume_Name,
            codec.align(DigitalGoods_Consume_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DigitalGoods_Consume_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateDigitalGoodsRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kDigitalGoods_GetDetails_Name:
        if (message.expectsResponse())
          paramsClass = DigitalGoods_GetDetails_Params;
      break;
      case kDigitalGoods_ListPurchases_Name:
        if (message.expectsResponse())
          paramsClass = DigitalGoods_ListPurchases_Params;
      break;
      case kDigitalGoods_ListPurchaseHistory_Name:
        if (message.expectsResponse())
          paramsClass = DigitalGoods_ListPurchaseHistory_Params;
      break;
      case kDigitalGoods_Consume_Name:
        if (message.expectsResponse())
          paramsClass = DigitalGoods_Consume_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateDigitalGoodsResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kDigitalGoods_GetDetails_Name:
        if (message.isResponse())
          paramsClass = DigitalGoods_GetDetails_ResponseParams;
        break;
      case kDigitalGoods_ListPurchases_Name:
        if (message.isResponse())
          paramsClass = DigitalGoods_ListPurchases_ResponseParams;
        break;
      case kDigitalGoods_ListPurchaseHistory_Name:
        if (message.isResponse())
          paramsClass = DigitalGoods_ListPurchaseHistory_ResponseParams;
        break;
      case kDigitalGoods_Consume_Name:
        if (message.isResponse())
          paramsClass = DigitalGoods_Consume_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var DigitalGoods = {
    name: 'payments.mojom.DigitalGoods',
    kVersion: 0,
    ptrClass: DigitalGoodsPtr,
    proxyClass: DigitalGoodsProxy,
    stubClass: DigitalGoodsStub,
    validateRequest: validateDigitalGoodsRequest,
    validateResponse: validateDigitalGoodsResponse,
  };
  DigitalGoodsStub.prototype.validator = validateDigitalGoodsRequest;
  DigitalGoodsProxy.prototype.validator = validateDigitalGoodsResponse;
  var kDigitalGoodsFactory_CreateDigitalGoods_Name = 0;

  function DigitalGoodsFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(DigitalGoodsFactory,
                                                   handleOrPtrInfo);
  }

  function DigitalGoodsFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        DigitalGoodsFactory, associatedInterfacePtrInfo);
  }

  DigitalGoodsFactoryAssociatedPtr.prototype =
      Object.create(DigitalGoodsFactoryPtr.prototype);
  DigitalGoodsFactoryAssociatedPtr.prototype.constructor =
      DigitalGoodsFactoryAssociatedPtr;

  function DigitalGoodsFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  DigitalGoodsFactoryPtr.prototype.createDigitalGoods = function() {
    return DigitalGoodsFactoryProxy.prototype.createDigitalGoods
        .apply(this.ptr.getProxy(), arguments);
  };

  DigitalGoodsFactoryProxy.prototype.createDigitalGoods = function(paymentMethod) {
    var params_ = new DigitalGoodsFactory_CreateDigitalGoods_Params();
    params_.paymentMethod = paymentMethod;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kDigitalGoodsFactory_CreateDigitalGoods_Name,
          codec.align(DigitalGoodsFactory_CreateDigitalGoods_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(DigitalGoodsFactory_CreateDigitalGoods_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(DigitalGoodsFactory_CreateDigitalGoods_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function DigitalGoodsFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  DigitalGoodsFactoryStub.prototype.createDigitalGoods = function(paymentMethod) {
    return this.delegate_ && this.delegate_.createDigitalGoods && this.delegate_.createDigitalGoods(paymentMethod);
  }

  DigitalGoodsFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  DigitalGoodsFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kDigitalGoodsFactory_CreateDigitalGoods_Name:
      var params = reader.decodeStruct(DigitalGoodsFactory_CreateDigitalGoods_Params);
      this.createDigitalGoods(params.paymentMethod).then(function(response) {
        var responseParams =
            new DigitalGoodsFactory_CreateDigitalGoods_ResponseParams();
        responseParams.code = response.code;
        responseParams.digitalGoods = response.digitalGoods;
        var builder = new codec.MessageV1Builder(
            kDigitalGoodsFactory_CreateDigitalGoods_Name,
            codec.align(DigitalGoodsFactory_CreateDigitalGoods_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(DigitalGoodsFactory_CreateDigitalGoods_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateDigitalGoodsFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kDigitalGoodsFactory_CreateDigitalGoods_Name:
        if (message.expectsResponse())
          paramsClass = DigitalGoodsFactory_CreateDigitalGoods_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateDigitalGoodsFactoryResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kDigitalGoodsFactory_CreateDigitalGoods_Name:
        if (message.isResponse())
          paramsClass = DigitalGoodsFactory_CreateDigitalGoods_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var DigitalGoodsFactory = {
    name: 'payments.mojom.DigitalGoodsFactory',
    kVersion: 0,
    ptrClass: DigitalGoodsFactoryPtr,
    proxyClass: DigitalGoodsFactoryProxy,
    stubClass: DigitalGoodsFactoryStub,
    validateRequest: validateDigitalGoodsFactoryRequest,
    validateResponse: validateDigitalGoodsFactoryResponse,
  };
  DigitalGoodsFactoryStub.prototype.validator = validateDigitalGoodsFactoryRequest;
  DigitalGoodsFactoryProxy.prototype.validator = validateDigitalGoodsFactoryResponse;
  exports.DigitalGoods = DigitalGoods;
  exports.DigitalGoodsPtr = DigitalGoodsPtr;
  exports.DigitalGoodsAssociatedPtr = DigitalGoodsAssociatedPtr;
  exports.DigitalGoodsFactory = DigitalGoodsFactory;
  exports.DigitalGoodsFactoryPtr = DigitalGoodsFactoryPtr;
  exports.DigitalGoodsFactoryAssociatedPtr = DigitalGoodsFactoryAssociatedPtr;
})();