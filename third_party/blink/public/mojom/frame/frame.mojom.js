// third_party/blink/public/mojom/frame/frame.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/frame/frame.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var browser_controls_state$ =
      mojo.internal.exposeNamespace('cc.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'cc/mojom/browser_controls_state.mojom', '../../../../../cc/mojom/browser_controls_state.mojom.js');
  }
  var shared_memory$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/shared_memory.mojom', '../../../../../mojo/public/mojom/base/shared_memory.mojom.js');
  }
  var string16$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/string16.mojom', '../../../../../mojo/public/mojom/base/string16.mojom.js');
  }
  var text_direction$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/text_direction.mojom', '../../../../../mojo/public/mojom/base/text_direction.mojom.js');
  }
  var time$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/time.mojom', '../../../../../mojo/public/mojom/base/time.mojom.js');
  }
  var unguessable_token$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/unguessable_token.mojom', '../../../../../mojo/public/mojom/base/unguessable_token.mojom.js');
  }
  var values$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/values.mojom', '../../../../../mojo/public/mojom/base/values.mojom.js');
  }
  var content_security_policy$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/content_security_policy.mojom', '../../../../../services/network/public/mojom/content_security_policy.mojom.js');
  }
  var cross_origin_opener_policy$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/cross_origin_opener_policy.mojom', '../../../../../services/network/public/mojom/cross_origin_opener_policy.mojom.js');
  }
  var fetch_api$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/fetch_api.mojom', '../../../../../services/network/public/mojom/fetch_api.mojom.js');
  }
  var load_timing_info$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/load_timing_info.mojom', '../../../../../services/network/public/mojom/load_timing_info.mojom.js');
  }
  var network_types$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/network_types.mojom', '../../../../../services/network/public/mojom/network_types.mojom.js');
  }
  var source_location$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/source_location.mojom', '../../../../../services/network/public/mojom/source_location.mojom.js');
  }
  var url_loader_completion_status$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/url_loader_completion_status.mojom', '../../../../../services/network/public/mojom/url_loader_completion_status.mojom.js');
  }
  var attribution$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/attribution.mojom', '../../../../../services/network/public/mojom/attribution.mojom.js');
  }
  var bitmap$ =
      mojo.internal.exposeNamespace('skia.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'skia/public/mojom/bitmap.mojom', '../../../../../skia/public/mojom/bitmap.mojom.js');
  }
  var skcolor$ =
      mojo.internal.exposeNamespace('skia.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'skia/public/mojom/skcolor.mojom', '../../../../../skia/public/mojom/skcolor.mojom.js');
  }
  var skcolor4f$ =
      mojo.internal.exposeNamespace('skia.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'skia/public/mojom/skcolor4f.mojom', '../../../../../skia/public/mojom/skcolor4f.mojom.js');
  }
  var blob$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/blob/blob.mojom', '../blob/blob.mojom.js');
  }
  var blob_url_store$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/blob/blob_url_store.mojom', '../blob/blob_url_store.mojom.js');
  }
  var popup_menu$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/choosers/popup_menu.mojom', '../choosers/popup_menu.mojom.js');
  }
  var close_listener$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/close_watcher/close_listener.mojom', '../close_watcher/close_listener.mojom.js');
  }
  var context_menu$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/context_menu/context_menu.mojom', '../context_menu/context_menu.mojom.js');
  }
  var preferred_color_scheme$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/css/preferred_color_scheme.mojom', '../css/preferred_color_scheme.mojom.js');
  }
  var console_message$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/devtools/console_message.mojom', '../devtools/console_message.mojom.js');
  }
  var devtools_agent$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/devtools/devtools_agent.mojom', '../devtools/devtools_agent.mojom.js');
  }
  var inspector_issue$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/devtools/inspector_issue.mojom', '../devtools/inspector_issue.mojom.js');
  }
  var drag$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/drag/drag.mojom', '../drag/drag.mojom.js');
  }
  var favicon_url$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/favicon/favicon_url.mojom', '../favicon/favicon_url.mojom.js');
  }
  var fenced_frame$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/fenced_frame/fenced_frame.mojom', '../fenced_frame/fenced_frame.mojom.js');
  }
  var fenced_frame_config$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/fenced_frame/fenced_frame_config.mojom', '../fenced_frame/fenced_frame_config.mojom.js');
  }
  var fetch_api_request$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/fetch/fetch_api_request.mojom', '../fetch/fetch_api_request.mojom.js');
  }
  var blocked_navigation_types$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/blocked_navigation_types.mojom', 'blocked_navigation_types.mojom.js');
  }
  var frame_owner_properties$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/frame_owner_properties.mojom', 'frame_owner_properties.mojom.js');
  }
  var frame_policy$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/frame_policy.mojom', 'frame_policy.mojom.js');
  }
  var frame_replication_state$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/frame_replication_state.mojom', 'frame_replication_state.mojom.js');
  }
  var fullscreen$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/fullscreen.mojom', 'fullscreen.mojom.js');
  }
  var lifecycle$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/lifecycle.mojom', 'lifecycle.mojom.js');
  }
  var media_player_action$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/media_player_action.mojom', 'media_player_action.mojom.js');
  }
  var remote_frame$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/remote_frame.mojom', 'remote_frame.mojom.js');
  }
  var reporting_observer$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/reporting_observer.mojom', 'reporting_observer.mojom.js');
  }
  var sudden_termination_disabler_type$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/sudden_termination_disabler_type.mojom', 'sudden_termination_disabler_type.mojom.js');
  }
  var text_autosizer_page_info$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/text_autosizer_page_info.mojom', 'text_autosizer_page_info.mojom.js');
  }
  var user_activation_notification_type$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/user_activation_notification_type.mojom', 'user_activation_notification_type.mojom.js');
  }
  var user_activation_update_types$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/user_activation_update_types.mojom', 'user_activation_update_types.mojom.js');
  }
  var view_transition_state$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/view_transition_state.mojom', 'view_transition_state.mojom.js');
  }
  var focus_type$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/input/focus_type.mojom', '../input/focus_type.mojom.js');
  }
  var scroll_direction$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/input/scroll_direction.mojom', '../input/scroll_direction.mojom.js');
  }
  var referrer$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/loader/referrer.mojom', '../loader/referrer.mojom.js');
  }
  var keep_alive_handle_factory$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/loader/keep_alive_handle_factory.mojom', '../loader/keep_alive_handle_factory.mojom.js');
  }
  var delegated_capability$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/messaging/delegated_capability.mojom', '../messaging/delegated_capability.mojom.js');
  }
  var task_attribution_id$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/messaging/task_attribution_id.mojom', '../messaging/task_attribution_id.mojom.js');
  }
  var transferable_message$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/messaging/transferable_message.mojom', '../messaging/transferable_message.mojom.js');
  }
  var navigation_api_history_entry_arrays$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/navigation/navigation_api_history_entry_arrays.mojom', '../navigation/navigation_api_history_entry_arrays.mojom.js');
  }
  var metadata$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/opengraph/metadata.mojom', '../opengraph/metadata.mojom.js');
  }
  var widget$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/page/widget.mojom', '../page/widget.mojom.js');
  }
  var portal$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/portal/portal.mojom', '../portal/portal.mojom.js');
  }
  var scroll_into_view_params$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/scroll/scroll_into_view_params.mojom', '../scroll/scroll_into_view_params.mojom.js');
  }
  var insecure_request_policy$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/security_context/insecure_request_policy.mojom', '../security_context/insecure_request_policy.mojom.js');
  }
  var resource_timing$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/timing/resource_timing.mojom', '../timing/resource_timing.mojom.js');
  }
  var tokens$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/tokens/tokens.mojom', '../tokens/tokens.mojom.js');
  }
  var web_feature$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/use_counter/metrics/web_feature.mojom', '../use_counter/metrics/web_feature.mojom.js');
  }
  var platform_widget$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/widget/platform_widget.mojom', '../widget/platform_widget.mojom.js');
  }
  var window_features$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/window_features/window_features.mojom', '../window_features/window_features.mojom.js');
  }
  var virtual_keyboard_types$ =
      mojo.internal.exposeNamespace('ui.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/base/ime/mojom/virtual_keyboard_types.mojom', '../../../../../ui/base/ime/mojom/virtual_keyboard_types.mojom.js');
  }
  var window_open_disposition$ =
      mojo.internal.exposeNamespace('ui.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/base/mojom/window_open_disposition.mojom', '../../../../../ui/base/mojom/window_open_disposition.mojom.js');
  }
  var scroll_granularity$ =
      mojo.internal.exposeNamespace('ui.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/events/mojom/scroll_granularity.mojom', '../../../../../ui/events/mojom/scroll_granularity.mojom.js');
  }
  var geometry$ =
      mojo.internal.exposeNamespace('gfx.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/gfx/geometry/mojom/geometry.mojom', '../../../../../ui/gfx/geometry/mojom/geometry.mojom.js');
  }
  var range$ =
      mojo.internal.exposeNamespace('gfx.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/gfx/range/mojom/range.mojom', '../../../../../ui/gfx/range/mojom/range.mojom.js');
  }
  var origin$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/origin.mojom', '../../../../../url/mojom/origin.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }


  var MAX_TITLE_CHARS = 4096;
  var PluginActionType = {};
  PluginActionType.kRotate90Clockwise = 0;
  PluginActionType.kRotate90Counterclockwise = 1;
  PluginActionType.MIN_VALUE = 0;
  PluginActionType.MAX_VALUE = 1;

  PluginActionType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  PluginActionType.toKnownEnumValue = function(value) {
    return value;
  };

  PluginActionType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var JavaScriptExecutionResultType = {};
  JavaScriptExecutionResultType.kSuccess = 0;
  JavaScriptExecutionResultType.kException = 1;
  JavaScriptExecutionResultType.MIN_VALUE = 0;
  JavaScriptExecutionResultType.MAX_VALUE = 1;

  JavaScriptExecutionResultType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  JavaScriptExecutionResultType.toKnownEnumValue = function(value) {
    return value;
  };

  JavaScriptExecutionResultType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var TraverseCancelledReason = {};
  TraverseCancelledReason.kNotFound = 0;
  TraverseCancelledReason.kSandboxViolation = 1;
  TraverseCancelledReason.kAbortedBeforeCommit = 2;
  TraverseCancelledReason.MIN_VALUE = 0;
  TraverseCancelledReason.MAX_VALUE = 2;

  TraverseCancelledReason.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    }
    return false;
  };

  TraverseCancelledReason.toKnownEnumValue = function(value) {
    return value;
  };

  TraverseCancelledReason.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var ViewTransitionSameOriginOptIn = {};
  ViewTransitionSameOriginOptIn.kDisabled = 0;
  ViewTransitionSameOriginOptIn.kEnabled = 1;
  ViewTransitionSameOriginOptIn.MIN_VALUE = 0;
  ViewTransitionSameOriginOptIn.MAX_VALUE = 1;

  ViewTransitionSameOriginOptIn.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  ViewTransitionSameOriginOptIn.toKnownEnumValue = function(value) {
    return value;
  };

  ViewTransitionSameOriginOptIn.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var FrameOwnerElementType = {};
  FrameOwnerElementType.kNone = 0;
  FrameOwnerElementType.kIframe = 1;
  FrameOwnerElementType.kObject = 2;
  FrameOwnerElementType.kEmbed = 3;
  FrameOwnerElementType.kFrame = 4;
  FrameOwnerElementType.kPortal = 5;
  FrameOwnerElementType.kFencedframe = 6;
  FrameOwnerElementType.MIN_VALUE = 0;
  FrameOwnerElementType.MAX_VALUE = 6;

  FrameOwnerElementType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    }
    return false;
  };

  FrameOwnerElementType.toKnownEnumValue = function(value) {
    return value;
  };

  FrameOwnerElementType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function SavableSubframe(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SavableSubframe.prototype.initDefaults_ = function() {
    this.originalUrl = null;
    this.subframeToken = null;
  };
  SavableSubframe.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SavableSubframe.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SavableSubframe.originalUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SavableSubframe.subframeToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 8, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SavableSubframe.encodedSize = codec.kStructHeaderSize + 24;

  SavableSubframe.decode = function(decoder) {
    var packed;
    var val = new SavableSubframe();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.originalUrl =
        decoder.decodeStructPointer(url$.Url);
    val.subframeToken =
        decoder.decodeStruct(tokens$.FrameToken);
    return val;
  };

  SavableSubframe.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SavableSubframe.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.originalUrl);
    encoder.encodeStruct(tokens$.FrameToken, val.subframeToken);
  };
  function GetSavableResourceLinksReply(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  GetSavableResourceLinksReply.prototype.initDefaults_ = function() {
    this.resourcesList = null;
    this.referrer = null;
    this.subframes = null;
  };
  GetSavableResourceLinksReply.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  GetSavableResourceLinksReply.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate GetSavableResourceLinksReply.resourcesList
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(url$.Url), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;


    // validate GetSavableResourceLinksReply.referrer
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, referrer$.Referrer, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate GetSavableResourceLinksReply.subframes
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 8, new codec.PointerTo(SavableSubframe), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  GetSavableResourceLinksReply.encodedSize = codec.kStructHeaderSize + 24;

  GetSavableResourceLinksReply.decode = function(decoder) {
    var packed;
    var val = new GetSavableResourceLinksReply();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.resourcesList =
        decoder.decodeArrayPointer(new codec.PointerTo(url$.Url));
    val.referrer =
        decoder.decodeStructPointer(referrer$.Referrer);
    val.subframes =
        decoder.decodeArrayPointer(new codec.PointerTo(SavableSubframe));
    return val;
  };

  GetSavableResourceLinksReply.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(GetSavableResourceLinksReply.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(url$.Url), val.resourcesList);
    encoder.encodeStructPointer(referrer$.Referrer, val.referrer);
    encoder.encodeArrayPointer(new codec.PointerTo(SavableSubframe), val.subframes);
  };
  function FindInPageResultAXParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  FindInPageResultAXParams.prototype.initDefaults_ = function() {
    this.requestId = 0;
    this.matchIndex = 0;
    this.startId = 0;
    this.startOffset = 0;
    this.endId = 0;
    this.endOffset = 0;
  };
  FindInPageResultAXParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  FindInPageResultAXParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;







    return validator.validationError.NONE;
  };

  FindInPageResultAXParams.encodedSize = codec.kStructHeaderSize + 24;

  FindInPageResultAXParams.decode = function(decoder) {
    var packed;
    var val = new FindInPageResultAXParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.requestId =
        decoder.decodeStruct(codec.Int32);
    val.matchIndex =
        decoder.decodeStruct(codec.Int32);
    val.startId =
        decoder.decodeStruct(codec.Int32);
    val.startOffset =
        decoder.decodeStruct(codec.Int32);
    val.endId =
        decoder.decodeStruct(codec.Int32);
    val.endOffset =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  FindInPageResultAXParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(FindInPageResultAXParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.requestId);
    encoder.encodeStruct(codec.Int32, val.matchIndex);
    encoder.encodeStruct(codec.Int32, val.startId);
    encoder.encodeStruct(codec.Int32, val.startOffset);
    encoder.encodeStruct(codec.Int32, val.endId);
    encoder.encodeStruct(codec.Int32, val.endOffset);
  };
  function DownloadURLParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DownloadURLParams.prototype.initDefaults_ = function() {
    this.url = null;
    this.referrer = null;
    this.initiatorOrigin = null;
    this.suggestedName = null;
    this.crossOriginRedirects = 0;
    this.blobUrlToken = new blob_url_store$.BlobURLTokenPtr();
    this.dataUrlBlob = new blob$.BlobPtr();
    this.isContextMenuSave = false;
    this.hasUserGesture = false;
  };
  DownloadURLParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DownloadURLParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 64}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.referrer
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, referrer$.Referrer, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.initiatorOrigin
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, origin$.Origin, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.suggestedName
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, string16$.String16, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.crossOriginRedirects
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 32, fetch_api$.RedirectMode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.blobUrlToken
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 36, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DownloadURLParams.dataUrlBlob
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 44, true);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  DownloadURLParams.encodedSize = codec.kStructHeaderSize + 56;

  DownloadURLParams.decode = function(decoder) {
    var packed;
    var val = new DownloadURLParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.referrer =
        decoder.decodeStructPointer(referrer$.Referrer);
    val.initiatorOrigin =
        decoder.decodeStructPointer(origin$.Origin);
    val.suggestedName =
        decoder.decodeStructPointer(string16$.String16);
    val.crossOriginRedirects =
        decoder.decodeStruct(new codec.Enum(fetch_api$.RedirectMode));
    val.blobUrlToken =
        decoder.decodeStruct(new codec.NullableInterface(blob_url_store$.BlobURLTokenPtr));
    val.dataUrlBlob =
        decoder.decodeStruct(new codec.NullableInterface(blob$.BlobPtr));
    packed = decoder.readUint8();
    val.isContextMenuSave = (packed >> 0) & 1 ? true : false;
    val.hasUserGesture = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  DownloadURLParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DownloadURLParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStructPointer(referrer$.Referrer, val.referrer);
    encoder.encodeStructPointer(origin$.Origin, val.initiatorOrigin);
    encoder.encodeStructPointer(string16$.String16, val.suggestedName);
    encoder.encodeStruct(codec.Int32, val.crossOriginRedirects);
    encoder.encodeStruct(new codec.NullableInterface(blob_url_store$.BlobURLTokenPtr), val.blobUrlToken);
    encoder.encodeStruct(new codec.NullableInterface(blob$.BlobPtr), val.dataUrlBlob);
    packed = 0;
    packed |= (val.isContextMenuSave & 1) << 0
    packed |= (val.hasUserGesture & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function IframeAttributes(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  IframeAttributes.prototype.initDefaults_ = function() {
    this.parsedCspAttribute = null;
    this.credentialless = false;
    this.browsingTopics = false;
    this.sharedStorageWritable = false;
    this.id = null;
    this.name = null;
    this.src = null;
  };
  IframeAttributes.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  IframeAttributes.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate IframeAttributes.parsedCspAttribute
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, content_security_policy$.ContentSecurityPolicy, true);
    if (err !== validator.validationError.NONE)
        return err;





    // validate IframeAttributes.id
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate IframeAttributes.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 24, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate IframeAttributes.src
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 32, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  IframeAttributes.encodedSize = codec.kStructHeaderSize + 40;

  IframeAttributes.decode = function(decoder) {
    var packed;
    var val = new IframeAttributes();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.parsedCspAttribute =
        decoder.decodeStructPointer(content_security_policy$.ContentSecurityPolicy);
    packed = decoder.readUint8();
    val.credentialless = (packed >> 0) & 1 ? true : false;
    val.browsingTopics = (packed >> 1) & 1 ? true : false;
    val.sharedStorageWritable = (packed >> 2) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.id =
        decoder.decodeStruct(codec.NullableString);
    val.name =
        decoder.decodeStruct(codec.NullableString);
    val.src =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  IframeAttributes.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(IframeAttributes.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(content_security_policy$.ContentSecurityPolicy, val.parsedCspAttribute);
    packed = 0;
    packed |= (val.credentialless & 1) << 0
    packed |= (val.browsingTopics & 1) << 1
    packed |= (val.sharedStorageWritable & 1) << 2
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.NullableString, val.id);
    encoder.encodeStruct(codec.NullableString, val.name);
    encoder.encodeStruct(codec.NullableString, val.src);
  };
  function LegacyTechEventCodeLocation(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LegacyTechEventCodeLocation.prototype.initDefaults_ = function() {
    this.filename = null;
    this.line = 0;
    this.column = 0;
  };
  LegacyTechEventCodeLocation.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LegacyTechEventCodeLocation.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LegacyTechEventCodeLocation.filename
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  LegacyTechEventCodeLocation.encodedSize = codec.kStructHeaderSize + 24;

  LegacyTechEventCodeLocation.decode = function(decoder) {
    var packed;
    var val = new LegacyTechEventCodeLocation();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.filename =
        decoder.decodeStruct(codec.String);
    val.line =
        decoder.decodeStruct(codec.Uint64);
    val.column =
        decoder.decodeStruct(codec.Uint64);
    return val;
  };

  LegacyTechEventCodeLocation.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LegacyTechEventCodeLocation.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.filename);
    encoder.encodeStruct(codec.Uint64, val.line);
    encoder.encodeStruct(codec.Uint64, val.column);
  };
  function LocalFrameHost_EnterFullscreen_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_EnterFullscreen_Params.prototype.initDefaults_ = function() {
    this.options = null;
  };
  LocalFrameHost_EnterFullscreen_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_EnterFullscreen_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_EnterFullscreen_Params.options
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, fullscreen$.FullscreenOptions, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_EnterFullscreen_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_EnterFullscreen_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_EnterFullscreen_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.options =
        decoder.decodeStructPointer(fullscreen$.FullscreenOptions);
    return val;
  };

  LocalFrameHost_EnterFullscreen_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_EnterFullscreen_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(fullscreen$.FullscreenOptions, val.options);
  };
  function LocalFrameHost_EnterFullscreen_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_EnterFullscreen_ResponseParams.prototype.initDefaults_ = function() {
    this.granted = false;
  };
  LocalFrameHost_EnterFullscreen_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_EnterFullscreen_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_EnterFullscreen_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_EnterFullscreen_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_EnterFullscreen_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.granted = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_EnterFullscreen_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_EnterFullscreen_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.granted & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_ExitFullscreen_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ExitFullscreen_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_ExitFullscreen_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ExitFullscreen_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_ExitFullscreen_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_ExitFullscreen_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ExitFullscreen_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_ExitFullscreen_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ExitFullscreen_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_FullscreenStateChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_FullscreenStateChanged_Params.prototype.initDefaults_ = function() {
    this.isFullscreen = false;
    this.options = null;
  };
  LocalFrameHost_FullscreenStateChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_FullscreenStateChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_FullscreenStateChanged_Params.options
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, fullscreen$.FullscreenOptions, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_FullscreenStateChanged_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_FullscreenStateChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_FullscreenStateChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isFullscreen = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.options =
        decoder.decodeStructPointer(fullscreen$.FullscreenOptions);
    return val;
  };

  LocalFrameHost_FullscreenStateChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_FullscreenStateChanged_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isFullscreen & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(fullscreen$.FullscreenOptions, val.options);
  };
  function LocalFrameHost_Maximize_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_Maximize_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_Maximize_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_Maximize_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_Maximize_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_Maximize_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_Maximize_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_Maximize_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_Maximize_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_Minimize_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_Minimize_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_Minimize_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_Minimize_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_Minimize_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_Minimize_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_Minimize_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_Minimize_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_Minimize_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_Restore_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_Restore_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_Restore_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_Restore_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_Restore_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_Restore_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_Restore_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_Restore_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_Restore_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_RegisterProtocolHandler_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RegisterProtocolHandler_Params.prototype.initDefaults_ = function() {
    this.scheme = null;
    this.url = null;
    this.userGesture = false;
  };
  LocalFrameHost_RegisterProtocolHandler_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RegisterProtocolHandler_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RegisterProtocolHandler_Params.scheme
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RegisterProtocolHandler_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RegisterProtocolHandler_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_RegisterProtocolHandler_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RegisterProtocolHandler_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.scheme =
        decoder.decodeStruct(codec.String);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    packed = decoder.readUint8();
    val.userGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RegisterProtocolHandler_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RegisterProtocolHandler_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.scheme);
    encoder.encodeStructPointer(url$.Url, val.url);
    packed = 0;
    packed |= (val.userGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_UnregisterProtocolHandler_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_UnregisterProtocolHandler_Params.prototype.initDefaults_ = function() {
    this.scheme = null;
    this.url = null;
    this.userGesture = false;
  };
  LocalFrameHost_UnregisterProtocolHandler_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_UnregisterProtocolHandler_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UnregisterProtocolHandler_Params.scheme
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UnregisterProtocolHandler_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_UnregisterProtocolHandler_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_UnregisterProtocolHandler_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_UnregisterProtocolHandler_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.scheme =
        decoder.decodeStruct(codec.String);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    packed = decoder.readUint8();
    val.userGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_UnregisterProtocolHandler_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_UnregisterProtocolHandler_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.scheme);
    encoder.encodeStructPointer(url$.Url, val.url);
    packed = 0;
    packed |= (val.userGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidDisplayInsecureContent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidDisplayInsecureContent_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidDisplayInsecureContent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidDisplayInsecureContent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidDisplayInsecureContent_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidDisplayInsecureContent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidDisplayInsecureContent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidDisplayInsecureContent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidDisplayInsecureContent_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_DidContainInsecureFormAction_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidContainInsecureFormAction_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidContainInsecureFormAction_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidContainInsecureFormAction_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidContainInsecureFormAction_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidContainInsecureFormAction_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidContainInsecureFormAction_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidContainInsecureFormAction_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidContainInsecureFormAction_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_MainDocumentElementAvailable_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_MainDocumentElementAvailable_Params.prototype.initDefaults_ = function() {
    this.usesTemporaryZoomLevel = false;
  };
  LocalFrameHost_MainDocumentElementAvailable_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_MainDocumentElementAvailable_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_MainDocumentElementAvailable_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_MainDocumentElementAvailable_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_MainDocumentElementAvailable_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.usesTemporaryZoomLevel = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_MainDocumentElementAvailable_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_MainDocumentElementAvailable_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.usesTemporaryZoomLevel & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_SetNeedsOcclusionTracking_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SetNeedsOcclusionTracking_Params.prototype.initDefaults_ = function() {
    this.needsTracking = false;
  };
  LocalFrameHost_SetNeedsOcclusionTracking_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SetNeedsOcclusionTracking_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_SetNeedsOcclusionTracking_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_SetNeedsOcclusionTracking_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SetNeedsOcclusionTracking_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.needsTracking = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_SetNeedsOcclusionTracking_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SetNeedsOcclusionTracking_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.needsTracking & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_SetVirtualKeyboardMode_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SetVirtualKeyboardMode_Params.prototype.initDefaults_ = function() {
    this.type = 0;
  };
  LocalFrameHost_SetVirtualKeyboardMode_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SetVirtualKeyboardMode_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SetVirtualKeyboardMode_Params.type
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, virtual_keyboard_types$.VirtualKeyboardMode);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SetVirtualKeyboardMode_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_SetVirtualKeyboardMode_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SetVirtualKeyboardMode_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.type =
        decoder.decodeStruct(new codec.Enum(virtual_keyboard_types$.VirtualKeyboardMode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_SetVirtualKeyboardMode_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SetVirtualKeyboardMode_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.type);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_VisibilityChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_VisibilityChanged_Params.prototype.initDefaults_ = function() {
    this.visibility = 0;
  };
  LocalFrameHost_VisibilityChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_VisibilityChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_VisibilityChanged_Params.visibility
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, lifecycle$.FrameVisibility);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_VisibilityChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_VisibilityChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_VisibilityChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.visibility =
        decoder.decodeStruct(new codec.Enum(lifecycle$.FrameVisibility));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_VisibilityChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_VisibilityChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.visibility);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidChangeThemeColor_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeThemeColor_Params.prototype.initDefaults_ = function() {
    this.themeColor = null;
  };
  LocalFrameHost_DidChangeThemeColor_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeThemeColor_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeThemeColor_Params.themeColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, skcolor$.SkColor, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeThemeColor_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DidChangeThemeColor_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeThemeColor_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.themeColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    return val;
  };

  LocalFrameHost_DidChangeThemeColor_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeThemeColor_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(skcolor$.SkColor, val.themeColor);
  };
  function LocalFrameHost_DidChangeBackgroundColor_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeBackgroundColor_Params.prototype.initDefaults_ = function() {
    this.backgroundColor = null;
    this.colorAdjust = false;
  };
  LocalFrameHost_DidChangeBackgroundColor_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeBackgroundColor_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeBackgroundColor_Params.backgroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, skcolor4f$.SkColor4f, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeBackgroundColor_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_DidChangeBackgroundColor_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeBackgroundColor_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.backgroundColor =
        decoder.decodeStructPointer(skcolor4f$.SkColor4f);
    packed = decoder.readUint8();
    val.colorAdjust = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_DidChangeBackgroundColor_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeBackgroundColor_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(skcolor4f$.SkColor4f, val.backgroundColor);
    packed = 0;
    packed |= (val.colorAdjust & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidFailLoadWithError_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidFailLoadWithError_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.errorCode = 0;
  };
  LocalFrameHost_DidFailLoadWithError_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidFailLoadWithError_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidFailLoadWithError_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_DidFailLoadWithError_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_DidFailLoadWithError_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidFailLoadWithError_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.errorCode =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_DidFailLoadWithError_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidFailLoadWithError_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.Int32, val.errorCode);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidFocusFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidFocusFrame_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidFocusFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidFocusFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidFocusFrame_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidFocusFrame_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidFocusFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidFocusFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidFocusFrame_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_DidCallFocus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidCallFocus_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidCallFocus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidCallFocus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidCallFocus_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidCallFocus_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidCallFocus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidCallFocus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidCallFocus_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_EnforceInsecureRequestPolicy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_EnforceInsecureRequestPolicy_Params.prototype.initDefaults_ = function() {
    this.policyBitmap = 0;
  };
  LocalFrameHost_EnforceInsecureRequestPolicy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_EnforceInsecureRequestPolicy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_EnforceInsecureRequestPolicy_Params.policyBitmap
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, insecure_request_policy$.InsecureRequestPolicy);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_EnforceInsecureRequestPolicy_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_EnforceInsecureRequestPolicy_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_EnforceInsecureRequestPolicy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.policyBitmap =
        decoder.decodeStruct(new codec.Enum(insecure_request_policy$.InsecureRequestPolicy));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_EnforceInsecureRequestPolicy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_EnforceInsecureRequestPolicy_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.policyBitmap);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_EnforceInsecureNavigationsSet_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_EnforceInsecureNavigationsSet_Params.prototype.initDefaults_ = function() {
    this.set = null;
  };
  LocalFrameHost_EnforceInsecureNavigationsSet_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_EnforceInsecureNavigationsSet_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_EnforceInsecureNavigationsSet_Params.set
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 4, codec.Uint32, false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_EnforceInsecureNavigationsSet_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_EnforceInsecureNavigationsSet_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_EnforceInsecureNavigationsSet_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.set =
        decoder.decodeArrayPointer(codec.Uint32);
    return val;
  };

  LocalFrameHost_EnforceInsecureNavigationsSet_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_EnforceInsecureNavigationsSet_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.Uint32, val.set);
  };
  function LocalFrameHost_SuddenTerminationDisablerChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SuddenTerminationDisablerChanged_Params.prototype.initDefaults_ = function() {
    this.present = false;
    this.disablerType = 0;
  };
  LocalFrameHost_SuddenTerminationDisablerChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SuddenTerminationDisablerChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_SuddenTerminationDisablerChanged_Params.disablerType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, sudden_termination_disabler_type$.SuddenTerminationDisablerType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SuddenTerminationDisablerChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_SuddenTerminationDisablerChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SuddenTerminationDisablerChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.present = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.disablerType =
        decoder.decodeStruct(new codec.Enum(sudden_termination_disabler_type$.SuddenTerminationDisablerType));
    return val;
  };

  LocalFrameHost_SuddenTerminationDisablerChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SuddenTerminationDisablerChanged_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.present & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.disablerType);
  };
  function LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.prototype.initDefaults_ = function() {
    this.hasGesture = false;
  };
  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.hasGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.hasGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_ScrollRectToVisibleInParentFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.prototype.initDefaults_ = function() {
    this.rectToScroll = null;
    this.params = null;
  };
  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.rectToScroll
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.RectF, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, scroll_into_view_params$.ScrollIntoViewParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ScrollRectToVisibleInParentFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.rectToScroll =
        decoder.decodeStructPointer(geometry$.RectF);
    val.params =
        decoder.decodeStructPointer(scroll_into_view_params$.ScrollIntoViewParams);
    return val;
  };

  LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.RectF, val.rectToScroll);
    encoder.encodeStructPointer(scroll_into_view_params$.ScrollIntoViewParams, val.params);
  };
  function LocalFrameHost_BubbleLogicalScrollInParentFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.prototype.initDefaults_ = function() {
    this.direction = 0;
    this.granularity = 0;
  };
  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.direction
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, scroll_direction$.ScrollDirection);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.granularity
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, scroll_granularity$.ScrollGranularity);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_BubbleLogicalScrollInParentFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.direction =
        decoder.decodeStruct(new codec.Enum(scroll_direction$.ScrollDirection));
    val.granularity =
        decoder.decodeStruct(new codec.Enum(scroll_granularity$.ScrollGranularity));
    return val;
  };

  LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.direction);
    encoder.encodeStruct(codec.Int32, val.granularity);
  };
  function LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_DidBlockNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidBlockNavigation_Params.prototype.initDefaults_ = function() {
    this.blockedUrl = null;
    this.initiatorUrl = null;
    this.reason = 0;
  };
  LocalFrameHost_DidBlockNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidBlockNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidBlockNavigation_Params.blockedUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidBlockNavigation_Params.initiatorUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidBlockNavigation_Params.reason
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 16, blocked_navigation_types$.NavigationBlockedReason);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidBlockNavigation_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_DidBlockNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidBlockNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.blockedUrl =
        decoder.decodeStructPointer(url$.Url);
    val.initiatorUrl =
        decoder.decodeStructPointer(url$.Url);
    val.reason =
        decoder.decodeStruct(new codec.Enum(blocked_navigation_types$.NavigationBlockedReason));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_DidBlockNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidBlockNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.blockedUrl);
    encoder.encodeStructPointer(url$.Url, val.initiatorUrl);
    encoder.encodeStruct(codec.Int32, val.reason);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidChangeLoadProgress_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeLoadProgress_Params.prototype.initDefaults_ = function() {
    this.loadProgress = 0;
  };
  LocalFrameHost_DidChangeLoadProgress_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeLoadProgress_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeLoadProgress_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DidChangeLoadProgress_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeLoadProgress_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.loadProgress =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  LocalFrameHost_DidChangeLoadProgress_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeLoadProgress_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.loadProgress);
  };
  function LocalFrameHost_DidFinishLoad_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidFinishLoad_Params.prototype.initDefaults_ = function() {
    this.validatedUrl = null;
  };
  LocalFrameHost_DidFinishLoad_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidFinishLoad_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidFinishLoad_Params.validatedUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidFinishLoad_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DidFinishLoad_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidFinishLoad_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.validatedUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  LocalFrameHost_DidFinishLoad_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidFinishLoad_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.validatedUrl);
  };
  function LocalFrameHost_DispatchLoad_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DispatchLoad_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DispatchLoad_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DispatchLoad_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DispatchLoad_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DispatchLoad_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DispatchLoad_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DispatchLoad_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DispatchLoad_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_GoToEntryAtOffset_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_GoToEntryAtOffset_Params.prototype.initDefaults_ = function() {
    this.offset = 0;
    this.hasUserGesture = false;
    this.softNavigationHeuristicsTaskId = null;
  };
  LocalFrameHost_GoToEntryAtOffset_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_GoToEntryAtOffset_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate LocalFrameHost_GoToEntryAtOffset_Params.softNavigationHeuristicsTaskId
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, task_attribution_id$.TaskAttributionId, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_GoToEntryAtOffset_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_GoToEntryAtOffset_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_GoToEntryAtOffset_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.offset =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.hasUserGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.softNavigationHeuristicsTaskId =
        decoder.decodeStructPointer(task_attribution_id$.TaskAttributionId);
    return val;
  };

  LocalFrameHost_GoToEntryAtOffset_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_GoToEntryAtOffset_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.offset);
    packed = 0;
    packed |= (val.hasUserGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(task_attribution_id$.TaskAttributionId, val.softNavigationHeuristicsTaskId);
  };
  function LocalFrameHost_NavigateToNavigationApiKey_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_NavigateToNavigationApiKey_Params.prototype.initDefaults_ = function() {
    this.key = null;
    this.hasUserGesture = false;
    this.softNavigationHeuristicsTaskId = null;
  };
  LocalFrameHost_NavigateToNavigationApiKey_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_NavigateToNavigationApiKey_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_NavigateToNavigationApiKey_Params.key
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_NavigateToNavigationApiKey_Params.softNavigationHeuristicsTaskId
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, task_attribution_id$.TaskAttributionId, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_NavigateToNavigationApiKey_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_NavigateToNavigationApiKey_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_NavigateToNavigationApiKey_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.key =
        decoder.decodeStruct(codec.String);
    packed = decoder.readUint8();
    val.hasUserGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.softNavigationHeuristicsTaskId =
        decoder.decodeStructPointer(task_attribution_id$.TaskAttributionId);
    return val;
  };

  LocalFrameHost_NavigateToNavigationApiKey_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_NavigateToNavigationApiKey_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.key);
    packed = 0;
    packed |= (val.hasUserGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(task_attribution_id$.TaskAttributionId, val.softNavigationHeuristicsTaskId);
  };
  function LocalFrameHost_NavigateEventHandlerPresenceChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.prototype.initDefaults_ = function() {
    this.present = false;
  };
  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_NavigateEventHandlerPresenceChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.present = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.present & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_UpdateTitle_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_UpdateTitle_Params.prototype.initDefaults_ = function() {
    this.title = null;
    this.titleDirection = 0;
  };
  LocalFrameHost_UpdateTitle_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_UpdateTitle_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UpdateTitle_Params.title
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UpdateTitle_Params.titleDirection
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 8, text_direction$.TextDirection);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_UpdateTitle_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_UpdateTitle_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_UpdateTitle_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.title =
        decoder.decodeStructPointer(string16$.String16);
    val.titleDirection =
        decoder.decodeStruct(new codec.Enum(text_direction$.TextDirection));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_UpdateTitle_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_UpdateTitle_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.title);
    encoder.encodeStruct(codec.Int32, val.titleDirection);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_UpdateUserActivationState_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_UpdateUserActivationState_Params.prototype.initDefaults_ = function() {
    this.updateType = 0;
    this.notificationType = 0;
  };
  LocalFrameHost_UpdateUserActivationState_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_UpdateUserActivationState_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UpdateUserActivationState_Params.updateType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, user_activation_update_types$.UserActivationUpdateType);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UpdateUserActivationState_Params.notificationType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, user_activation_notification_type$.UserActivationNotificationType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_UpdateUserActivationState_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_UpdateUserActivationState_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_UpdateUserActivationState_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.updateType =
        decoder.decodeStruct(new codec.Enum(user_activation_update_types$.UserActivationUpdateType));
    val.notificationType =
        decoder.decodeStruct(new codec.Enum(user_activation_notification_type$.UserActivationNotificationType));
    return val;
  };

  LocalFrameHost_UpdateUserActivationState_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_UpdateUserActivationState_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.updateType);
    encoder.encodeStruct(codec.Int32, val.notificationType);
  };
  function LocalFrameHost_DidConsumeHistoryUserActivation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidConsumeHistoryUserActivation_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidConsumeHistoryUserActivation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidConsumeHistoryUserActivation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidConsumeHistoryUserActivation_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidConsumeHistoryUserActivation_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidConsumeHistoryUserActivation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidConsumeHistoryUserActivation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidConsumeHistoryUserActivation_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_HandleAccessibilityFindInPageResult_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_HandleAccessibilityFindInPageResult_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, FindInPageResultAXParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_HandleAccessibilityFindInPageResult_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(FindInPageResultAXParams);
    return val;
  };

  LocalFrameHost_HandleAccessibilityFindInPageResult_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_HandleAccessibilityFindInPageResult_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(FindInPageResultAXParams, val.params);
  };
  function LocalFrameHost_HandleAccessibilityFindInPageTermination_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_HandleAccessibilityFindInPageTermination_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_DocumentOnLoadCompleted_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DocumentOnLoadCompleted_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DocumentOnLoadCompleted_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DocumentOnLoadCompleted_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DocumentOnLoadCompleted_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DocumentOnLoadCompleted_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DocumentOnLoadCompleted_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DocumentOnLoadCompleted_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DocumentOnLoadCompleted_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_ForwardResourceTimingToParent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ForwardResourceTimingToParent_Params.prototype.initDefaults_ = function() {
    this.timing = null;
  };
  LocalFrameHost_ForwardResourceTimingToParent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ForwardResourceTimingToParent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ForwardResourceTimingToParent_Params.timing
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, resource_timing$.ResourceTimingInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_ForwardResourceTimingToParent_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_ForwardResourceTimingToParent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ForwardResourceTimingToParent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.timing =
        decoder.decodeStructPointer(resource_timing$.ResourceTimingInfo);
    return val;
  };

  LocalFrameHost_ForwardResourceTimingToParent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ForwardResourceTimingToParent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(resource_timing$.ResourceTimingInfo, val.timing);
  };
  function LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_RunModalAlertDialog_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalAlertDialog_Params.prototype.initDefaults_ = function() {
    this.alertMessage = null;
    this.disableThirdPartySubframeSuppresion = false;
  };
  LocalFrameHost_RunModalAlertDialog_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalAlertDialog_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RunModalAlertDialog_Params.alertMessage
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalAlertDialog_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_RunModalAlertDialog_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalAlertDialog_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.alertMessage =
        decoder.decodeStructPointer(string16$.String16);
    packed = decoder.readUint8();
    val.disableThirdPartySubframeSuppresion = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunModalAlertDialog_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalAlertDialog_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.alertMessage);
    packed = 0;
    packed |= (val.disableThirdPartySubframeSuppresion & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_RunModalAlertDialog_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalAlertDialog_ResponseParams.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_RunModalAlertDialog_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalAlertDialog_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalAlertDialog_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_RunModalAlertDialog_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalAlertDialog_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_RunModalAlertDialog_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalAlertDialog_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_RunModalConfirmDialog_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalConfirmDialog_Params.prototype.initDefaults_ = function() {
    this.alertMessage = null;
    this.disableThirdPartySubframeSuppresion = false;
  };
  LocalFrameHost_RunModalConfirmDialog_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalConfirmDialog_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RunModalConfirmDialog_Params.alertMessage
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalConfirmDialog_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_RunModalConfirmDialog_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalConfirmDialog_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.alertMessage =
        decoder.decodeStructPointer(string16$.String16);
    packed = decoder.readUint8();
    val.disableThirdPartySubframeSuppresion = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunModalConfirmDialog_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalConfirmDialog_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.alertMessage);
    packed = 0;
    packed |= (val.disableThirdPartySubframeSuppresion & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_RunModalConfirmDialog_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalConfirmDialog_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  LocalFrameHost_RunModalConfirmDialog_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalConfirmDialog_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalConfirmDialog_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_RunModalConfirmDialog_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalConfirmDialog_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunModalConfirmDialog_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalConfirmDialog_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_RunModalPromptDialog_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalPromptDialog_Params.prototype.initDefaults_ = function() {
    this.alertMessage = null;
    this.defaultValue = null;
    this.disableThirdPartySubframeSuppresion = false;
  };
  LocalFrameHost_RunModalPromptDialog_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalPromptDialog_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RunModalPromptDialog_Params.alertMessage
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_RunModalPromptDialog_Params.defaultValue
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalPromptDialog_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_RunModalPromptDialog_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalPromptDialog_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.alertMessage =
        decoder.decodeStructPointer(string16$.String16);
    val.defaultValue =
        decoder.decodeStructPointer(string16$.String16);
    packed = decoder.readUint8();
    val.disableThirdPartySubframeSuppresion = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunModalPromptDialog_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalPromptDialog_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.alertMessage);
    encoder.encodeStructPointer(string16$.String16, val.defaultValue);
    packed = 0;
    packed |= (val.disableThirdPartySubframeSuppresion & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_RunModalPromptDialog_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunModalPromptDialog_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
    this.result = null;
  };
  LocalFrameHost_RunModalPromptDialog_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunModalPromptDialog_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_RunModalPromptDialog_ResponseParams.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_RunModalPromptDialog_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_RunModalPromptDialog_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunModalPromptDialog_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.result =
        decoder.decodeStructPointer(string16$.String16);
    return val;
  };

  LocalFrameHost_RunModalPromptDialog_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunModalPromptDialog_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(string16$.String16, val.result);
  };
  function LocalFrameHost_RunBeforeUnloadConfirm_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunBeforeUnloadConfirm_Params.prototype.initDefaults_ = function() {
    this.isReload = false;
  };
  LocalFrameHost_RunBeforeUnloadConfirm_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunBeforeUnloadConfirm_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunBeforeUnloadConfirm_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_RunBeforeUnloadConfirm_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunBeforeUnloadConfirm_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isReload = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunBeforeUnloadConfirm_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunBeforeUnloadConfirm_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isReload & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_UpdateFaviconURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_UpdateFaviconURL_Params.prototype.initDefaults_ = function() {
    this.faviconUrls = null;
  };
  LocalFrameHost_UpdateFaviconURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_UpdateFaviconURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_UpdateFaviconURL_Params.faviconUrls
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(favicon_url$.FaviconURL), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_UpdateFaviconURL_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_UpdateFaviconURL_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_UpdateFaviconURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.faviconUrls =
        decoder.decodeArrayPointer(new codec.PointerTo(favicon_url$.FaviconURL));
    return val;
  };

  LocalFrameHost_UpdateFaviconURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_UpdateFaviconURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(favicon_url$.FaviconURL), val.faviconUrls);
  };
  function LocalFrameHost_DownloadURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DownloadURL_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  LocalFrameHost_DownloadURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DownloadURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DownloadURL_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, DownloadURLParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DownloadURL_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DownloadURL_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DownloadURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(DownloadURLParams);
    return val;
  };

  LocalFrameHost_DownloadURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DownloadURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(DownloadURLParams, val.params);
  };
  function LocalFrameHost_FocusedElementChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_FocusedElementChanged_Params.prototype.initDefaults_ = function() {
    this.isEditableElement = false;
    this.isRichlyEditableElement = false;
    this.focusType = 0;
    this.boundsInFrameWidget = null;
  };
  LocalFrameHost_FocusedElementChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_FocusedElementChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate LocalFrameHost_FocusedElementChanged_Params.boundsInFrameWidget
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_FocusedElementChanged_Params.focusType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, focus_type$.FocusType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_FocusedElementChanged_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_FocusedElementChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_FocusedElementChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isEditableElement = (packed >> 0) & 1 ? true : false;
    val.isRichlyEditableElement = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.focusType =
        decoder.decodeStruct(new codec.Enum(focus_type$.FocusType));
    val.boundsInFrameWidget =
        decoder.decodeStructPointer(geometry$.Rect);
    return val;
  };

  LocalFrameHost_FocusedElementChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_FocusedElementChanged_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isEditableElement & 1) << 0
    packed |= (val.isRichlyEditableElement & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.focusType);
    encoder.encodeStructPointer(geometry$.Rect, val.boundsInFrameWidget);
  };
  function LocalFrameHost_TextSelectionChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_TextSelectionChanged_Params.prototype.initDefaults_ = function() {
    this.text = null;
    this.offset = 0;
    this.range = null;
  };
  LocalFrameHost_TextSelectionChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_TextSelectionChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_TextSelectionChanged_Params.text
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.BigString16, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_TextSelectionChanged_Params.range
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, range$.Range, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_TextSelectionChanged_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_TextSelectionChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_TextSelectionChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.text =
        decoder.decodeStructPointer(string16$.BigString16);
    val.offset =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.range =
        decoder.decodeStructPointer(range$.Range);
    return val;
  };

  LocalFrameHost_TextSelectionChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_TextSelectionChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.BigString16, val.text);
    encoder.encodeStruct(codec.Uint32, val.offset);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(range$.Range, val.range);
  };
  function LocalFrameHost_ShowPopupMenu_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ShowPopupMenu_Params.prototype.initDefaults_ = function() {
    this.popupClient = new popup_menu$.PopupMenuClientPtr();
    this.bounds = null;
    this.itemHeight = 0;
    this.selectedItem = 0;
    this.fontSize = 0;
    this.menuItems = null;
    this.rightAligned = false;
    this.allowMultipleSelection = false;
  };
  LocalFrameHost_ShowPopupMenu_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ShowPopupMenu_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 56}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ShowPopupMenu_Params.popupClient
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ShowPopupMenu_Params.bounds
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;





    // validate LocalFrameHost_ShowPopupMenu_Params.menuItems
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 32, 8, new codec.PointerTo(popup_menu$.MenuItem), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  LocalFrameHost_ShowPopupMenu_Params.encodedSize = codec.kStructHeaderSize + 48;

  LocalFrameHost_ShowPopupMenu_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ShowPopupMenu_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.popupClient =
        decoder.decodeStruct(new codec.Interface(popup_menu$.PopupMenuClientPtr));
    val.bounds =
        decoder.decodeStructPointer(geometry$.Rect);
    val.itemHeight =
        decoder.decodeStruct(codec.Int32);
    val.selectedItem =
        decoder.decodeStruct(codec.Int32);
    val.fontSize =
        decoder.decodeStruct(codec.Double);
    val.menuItems =
        decoder.decodeArrayPointer(new codec.PointerTo(popup_menu$.MenuItem));
    packed = decoder.readUint8();
    val.rightAligned = (packed >> 0) & 1 ? true : false;
    val.allowMultipleSelection = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_ShowPopupMenu_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ShowPopupMenu_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(popup_menu$.PopupMenuClientPtr), val.popupClient);
    encoder.encodeStructPointer(geometry$.Rect, val.bounds);
    encoder.encodeStruct(codec.Int32, val.itemHeight);
    encoder.encodeStruct(codec.Int32, val.selectedItem);
    encoder.encodeStruct(codec.Double, val.fontSize);
    encoder.encodeArrayPointer(new codec.PointerTo(popup_menu$.MenuItem), val.menuItems);
    packed = 0;
    packed |= (val.rightAligned & 1) << 0
    packed |= (val.allowMultipleSelection & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_CreateNewPopupWidget_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_CreateNewPopupWidget_Params.prototype.initDefaults_ = function() {
    this.popupHost = new associatedBindings.AssociatedInterfaceRequest();
    this.blinkWidgetHost = new associatedBindings.AssociatedInterfaceRequest();
    this.blinkWidget = new associatedBindings.AssociatedInterfacePtrInfo();
  };
  LocalFrameHost_CreateNewPopupWidget_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_CreateNewPopupWidget_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateNewPopupWidget_Params.popupHost
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateNewPopupWidget_Params.blinkWidgetHost
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 4, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateNewPopupWidget_Params.blinkWidget
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 8, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_CreateNewPopupWidget_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_CreateNewPopupWidget_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_CreateNewPopupWidget_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.popupHost =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.blinkWidgetHost =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.blinkWidget =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    return val;
  };

  LocalFrameHost_CreateNewPopupWidget_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_CreateNewPopupWidget_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.popupHost);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.blinkWidgetHost);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.blinkWidget);
  };
  function LocalFrameHost_ShowContextMenu_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ShowContextMenu_Params.prototype.initDefaults_ = function() {
    this.client = new associatedBindings.AssociatedInterfacePtrInfo();
    this.params = null;
  };
  LocalFrameHost_ShowContextMenu_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ShowContextMenu_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ShowContextMenu_Params.client
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ShowContextMenu_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, context_menu$.UntrustworthyContextMenuParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_ShowContextMenu_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_ShowContextMenu_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ShowContextMenu_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.client =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    val.params =
        decoder.decodeStructPointer(context_menu$.UntrustworthyContextMenuParams);
    return val;
  };

  LocalFrameHost_ShowContextMenu_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ShowContextMenu_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.client);
    encoder.encodeStructPointer(context_menu$.UntrustworthyContextMenuParams, val.params);
  };
  function LocalFrameHost_DidLoadResourceFromMemoryCache_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.httpMethod = null;
    this.mimeType = null;
    this.requestDestination = 0;
    this.includeCredentials = false;
  };
  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidLoadResourceFromMemoryCache_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidLoadResourceFromMemoryCache_Params.httpMethod
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidLoadResourceFromMemoryCache_Params.mimeType
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidLoadResourceFromMemoryCache_Params.requestDestination
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 24, fetch_api$.RequestDestination);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidLoadResourceFromMemoryCache_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.httpMethod =
        decoder.decodeStruct(codec.String);
    val.mimeType =
        decoder.decodeStruct(codec.String);
    val.requestDestination =
        decoder.decodeStruct(new codec.Enum(fetch_api$.RequestDestination));
    packed = decoder.readUint8();
    val.includeCredentials = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_DidLoadResourceFromMemoryCache_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidLoadResourceFromMemoryCache_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.String, val.httpMethod);
    encoder.encodeStruct(codec.String, val.mimeType);
    encoder.encodeStruct(codec.Int32, val.requestDestination);
    packed = 0;
    packed |= (val.includeCredentials & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidChangeFrameOwnerProperties_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeFrameOwnerProperties_Params.prototype.initDefaults_ = function() {
    this.childFrameToken = null;
    this.frameOwnerProperties = null;
  };
  LocalFrameHost_DidChangeFrameOwnerProperties_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeFrameOwnerProperties_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeFrameOwnerProperties_Params.childFrameToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeFrameOwnerProperties_Params.frameOwnerProperties
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, frame_owner_properties$.FrameOwnerProperties, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeFrameOwnerProperties_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_DidChangeFrameOwnerProperties_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeFrameOwnerProperties_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.childFrameToken =
        decoder.decodeStruct(tokens$.FrameToken);
    val.frameOwnerProperties =
        decoder.decodeStructPointer(frame_owner_properties$.FrameOwnerProperties);
    return val;
  };

  LocalFrameHost_DidChangeFrameOwnerProperties_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeFrameOwnerProperties_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.childFrameToken);
    encoder.encodeStructPointer(frame_owner_properties$.FrameOwnerProperties, val.frameOwnerProperties);
  };
  function LocalFrameHost_DidChangeOpener_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeOpener_Params.prototype.initDefaults_ = function() {
    this.openerFrame = null;
  };
  LocalFrameHost_DidChangeOpener_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeOpener_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeOpener_Params.openerFrame
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.LocalFrameToken, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeOpener_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DidChangeOpener_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeOpener_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.openerFrame =
        decoder.decodeStructPointer(tokens$.LocalFrameToken);
    return val;
  };

  LocalFrameHost_DidChangeOpener_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeOpener_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.LocalFrameToken, val.openerFrame);
  };
  function LocalFrameHost_DidChangeFramePolicy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeFramePolicy_Params.prototype.initDefaults_ = function() {
    this.childFrameToken = null;
    this.framePolicy = null;
  };
  LocalFrameHost_DidChangeFramePolicy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeFramePolicy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeFramePolicy_Params.childFrameToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeFramePolicy_Params.framePolicy
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, frame_policy$.FramePolicy, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeFramePolicy_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_DidChangeFramePolicy_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeFramePolicy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.childFrameToken =
        decoder.decodeStruct(tokens$.FrameToken);
    val.framePolicy =
        decoder.decodeStructPointer(frame_policy$.FramePolicy);
    return val;
  };

  LocalFrameHost_DidChangeFramePolicy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeFramePolicy_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.childFrameToken);
    encoder.encodeStructPointer(frame_policy$.FramePolicy, val.framePolicy);
  };
  function LocalFrameHost_DidChangeIframeAttributes_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeIframeAttributes_Params.prototype.initDefaults_ = function() {
    this.childFrameToken = null;
    this.attributes = null;
  };
  LocalFrameHost_DidChangeIframeAttributes_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeIframeAttributes_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeIframeAttributes_Params.childFrameToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeIframeAttributes_Params.attributes
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, IframeAttributes, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeIframeAttributes_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_DidChangeIframeAttributes_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeIframeAttributes_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.childFrameToken =
        decoder.decodeStruct(tokens$.FrameToken);
    val.attributes =
        decoder.decodeStructPointer(IframeAttributes);
    return val;
  };

  LocalFrameHost_DidChangeIframeAttributes_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeIframeAttributes_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.childFrameToken);
    encoder.encodeStructPointer(IframeAttributes, val.attributes);
  };
  function LocalFrameHost_CapturePaintPreviewOfSubframe_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.prototype.initDefaults_ = function() {
    this.clipRect = null;
    this.guid = null;
  };
  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CapturePaintPreviewOfSubframe_Params.clipRect
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CapturePaintPreviewOfSubframe_Params.guid
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, unguessable_token$.UnguessableToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_CapturePaintPreviewOfSubframe_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.clipRect =
        decoder.decodeStructPointer(geometry$.Rect);
    val.guid =
        decoder.decodeStructPointer(unguessable_token$.UnguessableToken);
    return val;
  };

  LocalFrameHost_CapturePaintPreviewOfSubframe_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_CapturePaintPreviewOfSubframe_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Rect, val.clipRect);
    encoder.encodeStructPointer(unguessable_token$.UnguessableToken, val.guid);
  };
  function LocalFrameHost_SetCloseListener_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SetCloseListener_Params.prototype.initDefaults_ = function() {
    this.listener = new close_listener$.CloseListenerPtr();
  };
  LocalFrameHost_SetCloseListener_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SetCloseListener_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SetCloseListener_Params.listener
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SetCloseListener_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_SetCloseListener_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SetCloseListener_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.listener =
        decoder.decodeStruct(new codec.Interface(close_listener$.CloseListenerPtr));
    return val;
  };

  LocalFrameHost_SetCloseListener_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SetCloseListener_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(close_listener$.CloseListenerPtr), val.listener);
  };
  function LocalFrameHost_Detach_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_Detach_Params.prototype.initDefaults_ = function() {
  };
  LocalFrameHost_Detach_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_Detach_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_Detach_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrameHost_Detach_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_Detach_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrameHost_Detach_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_Detach_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrameHost_GetKeepAliveHandleFactory_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_GetKeepAliveHandleFactory_Params.prototype.initDefaults_ = function() {
    this.factory = new bindings.InterfaceRequest();
  };
  LocalFrameHost_GetKeepAliveHandleFactory_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_GetKeepAliveHandleFactory_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_GetKeepAliveHandleFactory_Params.factory
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_GetKeepAliveHandleFactory_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_GetKeepAliveHandleFactory_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_GetKeepAliveHandleFactory_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.factory =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_GetKeepAliveHandleFactory_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_GetKeepAliveHandleFactory_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.InterfaceRequest, val.factory);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidAddMessageToConsole_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidAddMessageToConsole_Params.prototype.initDefaults_ = function() {
    this.logLevel = 0;
    this.lineNumber = 0;
    this.msg = null;
    this.sourceId = null;
    this.untrustedStackTrace = null;
  };
  LocalFrameHost_DidAddMessageToConsole_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidAddMessageToConsole_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidAddMessageToConsole_Params.logLevel
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, console_message$.ConsoleMessageLevel);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidAddMessageToConsole_Params.msg
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.BigString16, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrameHost_DidAddMessageToConsole_Params.sourceId
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, string16$.String16, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidAddMessageToConsole_Params.untrustedStackTrace
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, string16$.BigString16, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidAddMessageToConsole_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_DidAddMessageToConsole_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidAddMessageToConsole_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.logLevel =
        decoder.decodeStruct(new codec.Enum(console_message$.ConsoleMessageLevel));
    val.lineNumber =
        decoder.decodeStruct(codec.Uint32);
    val.msg =
        decoder.decodeStructPointer(string16$.BigString16);
    val.sourceId =
        decoder.decodeStructPointer(string16$.String16);
    val.untrustedStackTrace =
        decoder.decodeStructPointer(string16$.BigString16);
    return val;
  };

  LocalFrameHost_DidAddMessageToConsole_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidAddMessageToConsole_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.logLevel);
    encoder.encodeStruct(codec.Uint32, val.lineNumber);
    encoder.encodeStructPointer(string16$.BigString16, val.msg);
    encoder.encodeStructPointer(string16$.String16, val.sourceId);
    encoder.encodeStructPointer(string16$.BigString16, val.untrustedStackTrace);
  };
  function LocalFrameHost_FrameSizeChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_FrameSizeChanged_Params.prototype.initDefaults_ = function() {
    this.size = null;
  };
  LocalFrameHost_FrameSizeChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_FrameSizeChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_FrameSizeChanged_Params.size
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_FrameSizeChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_FrameSizeChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_FrameSizeChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.size =
        decoder.decodeStructPointer(geometry$.Size);
    return val;
  };

  LocalFrameHost_FrameSizeChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_FrameSizeChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.size);
  };
  function LocalFrameHost_DidInferColorScheme_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidInferColorScheme_Params.prototype.initDefaults_ = function() {
    this.colorScheme = 0;
  };
  LocalFrameHost_DidInferColorScheme_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidInferColorScheme_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidInferColorScheme_Params.colorScheme
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, preferred_color_scheme$.PreferredColorScheme);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidInferColorScheme_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_DidInferColorScheme_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidInferColorScheme_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.colorScheme =
        decoder.decodeStruct(new codec.Enum(preferred_color_scheme$.PreferredColorScheme));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_DidInferColorScheme_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidInferColorScheme_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.colorScheme);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_DidChangeSrcDoc_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_DidChangeSrcDoc_Params.prototype.initDefaults_ = function() {
    this.childFrameToken = null;
    this.srcdocValue = null;
  };
  LocalFrameHost_DidChangeSrcDoc_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_DidChangeSrcDoc_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeSrcDoc_Params.childFrameToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_DidChangeSrcDoc_Params.srcdocValue
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_DidChangeSrcDoc_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_DidChangeSrcDoc_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_DidChangeSrcDoc_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.childFrameToken =
        decoder.decodeStruct(tokens$.FrameToken);
    val.srcdocValue =
        decoder.decodeStruct(codec.String);
    return val;
  };

  LocalFrameHost_DidChangeSrcDoc_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_DidChangeSrcDoc_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.childFrameToken);
    encoder.encodeStruct(codec.String, val.srcdocValue);
  };
  function LocalFrameHost_ReceivedDelegatedCapability_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_ReceivedDelegatedCapability_Params.prototype.initDefaults_ = function() {
    this.delegatedCapability = 0;
  };
  LocalFrameHost_ReceivedDelegatedCapability_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_ReceivedDelegatedCapability_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_ReceivedDelegatedCapability_Params.delegatedCapability
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, delegated_capability$.DelegatedCapability);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_ReceivedDelegatedCapability_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_ReceivedDelegatedCapability_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_ReceivedDelegatedCapability_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.delegatedCapability =
        decoder.decodeStruct(new codec.Enum(delegated_capability$.DelegatedCapability));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_ReceivedDelegatedCapability_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_ReceivedDelegatedCapability_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.delegatedCapability);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_SendFencedFrameReportingBeacon_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SendFencedFrameReportingBeacon_Params.prototype.initDefaults_ = function() {
    this.eventData = null;
    this.eventType = null;
    this.destinations = null;
    this.attributionReportingRuntimeFeatures = null;
  };
  LocalFrameHost_SendFencedFrameReportingBeacon_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SendFencedFrameReportingBeacon_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeacon_Params.eventData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeacon_Params.eventType
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeacon_Params.destinations
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 4, new codec.Enum(fenced_frame_config$.ReportingDestination), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeacon_Params.attributionReportingRuntimeFeatures
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, attribution$.AttributionReportingRuntimeFeatures, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SendFencedFrameReportingBeacon_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_SendFencedFrameReportingBeacon_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SendFencedFrameReportingBeacon_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.eventData =
        decoder.decodeStruct(codec.String);
    val.eventType =
        decoder.decodeStruct(codec.String);
    val.destinations =
        decoder.decodeArrayPointer(new codec.Enum(fenced_frame_config$.ReportingDestination));
    val.attributionReportingRuntimeFeatures =
        decoder.decodeStructPointer(attribution$.AttributionReportingRuntimeFeatures);
    return val;
  };

  LocalFrameHost_SendFencedFrameReportingBeacon_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SendFencedFrameReportingBeacon_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.eventData);
    encoder.encodeStruct(codec.String, val.eventType);
    encoder.encodeArrayPointer(new codec.Enum(fenced_frame_config$.ReportingDestination), val.destinations);
    encoder.encodeStructPointer(attribution$.AttributionReportingRuntimeFeatures, val.attributionReportingRuntimeFeatures);
  };
  function LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.prototype.initDefaults_ = function() {
    this.destinationUrl = null;
    this.attributionReportingRuntimeFeatures = null;
  };
  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.destinationUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.attributionReportingRuntimeFeatures
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, attribution$.AttributionReportingRuntimeFeatures, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.destinationUrl =
        decoder.decodeStructPointer(url$.Url);
    val.attributionReportingRuntimeFeatures =
        decoder.decodeStructPointer(attribution$.AttributionReportingRuntimeFeatures);
    return val;
  };

  LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.destinationUrl);
    encoder.encodeStructPointer(attribution$.AttributionReportingRuntimeFeatures, val.attributionReportingRuntimeFeatures);
  };
  function LocalFrameHost_SendLegacyTechEvent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SendLegacyTechEvent_Params.prototype.initDefaults_ = function() {
    this.type = null;
    this.codeLocation = null;
  };
  LocalFrameHost_SendLegacyTechEvent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SendLegacyTechEvent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendLegacyTechEvent_Params.type
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendLegacyTechEvent_Params.codeLocation
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, LegacyTechEventCodeLocation, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SendLegacyTechEvent_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_SendLegacyTechEvent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SendLegacyTechEvent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.type =
        decoder.decodeStruct(codec.String);
    val.codeLocation =
        decoder.decodeStructPointer(LegacyTechEventCodeLocation);
    return val;
  };

  LocalFrameHost_SendLegacyTechEvent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SendLegacyTechEvent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.type);
    encoder.encodeStructPointer(LegacyTechEventCodeLocation, val.codeLocation);
  };
  function LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.prototype.initDefaults_ = function() {
    this.eventData = null;
    this.destinations = null;
    this.attributionReportingRuntimeFeatures = null;
    this.once = false;
  };
  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.eventData
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.destinations
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 4, new codec.Enum(fenced_frame_config$.ReportingDestination), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.attributionReportingRuntimeFeatures
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, attribution$.AttributionReportingRuntimeFeatures, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.eventData =
        decoder.decodeStruct(codec.String);
    val.destinations =
        decoder.decodeArrayPointer(new codec.Enum(fenced_frame_config$.ReportingDestination));
    val.attributionReportingRuntimeFeatures =
        decoder.decodeStructPointer(attribution$.AttributionReportingRuntimeFeatures);
    packed = decoder.readUint8();
    val.once = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.eventData);
    encoder.encodeArrayPointer(new codec.Enum(fenced_frame_config$.ReportingDestination), val.destinations);
    encoder.encodeStructPointer(attribution$.AttributionReportingRuntimeFeatures, val.attributionReportingRuntimeFeatures);
    packed = 0;
    packed |= (val.once & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.prototype.initDefaults_ = function() {
    this.eventType = null;
  };
  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.eventType
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.eventType =
        decoder.decodeStruct(codec.String);
    return val;
  };

  LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.eventType);
  };
  function LocalFrameHost_CreatePortal_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_CreatePortal_Params.prototype.initDefaults_ = function() {
    this.portal = new associatedBindings.AssociatedInterfaceRequest();
    this.client = new associatedBindings.AssociatedInterfacePtrInfo();
    this.remoteFrameInterfaces = null;
  };
  LocalFrameHost_CreatePortal_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_CreatePortal_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_Params.portal
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_Params.client
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 4, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_Params.remoteFrameInterfaces
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, remote_frame$.RemoteFrameInterfacesFromRenderer, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_CreatePortal_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_CreatePortal_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_CreatePortal_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.portal =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.client =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.remoteFrameInterfaces =
        decoder.decodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer);
    return val;
  };

  LocalFrameHost_CreatePortal_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_CreatePortal_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.portal);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.client);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer, val.remoteFrameInterfaces);
  };
  function LocalFrameHost_CreatePortal_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_CreatePortal_ResponseParams.prototype.initDefaults_ = function() {
    this.initialReplicatedState = null;
    this.portalToken = null;
    this.frameToken = null;
    this.devtoolsFrameToken = null;
  };
  LocalFrameHost_CreatePortal_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_CreatePortal_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_ResponseParams.initialReplicatedState
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame_replication_state$.FrameReplicationState, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_ResponseParams.portalToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, tokens$.PortalToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_ResponseParams.frameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, tokens$.RemoteFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreatePortal_ResponseParams.devtoolsFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, unguessable_token$.UnguessableToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_CreatePortal_ResponseParams.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_CreatePortal_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_CreatePortal_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.initialReplicatedState =
        decoder.decodeStructPointer(frame_replication_state$.FrameReplicationState);
    val.portalToken =
        decoder.decodeStructPointer(tokens$.PortalToken);
    val.frameToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    val.devtoolsFrameToken =
        decoder.decodeStructPointer(unguessable_token$.UnguessableToken);
    return val;
  };

  LocalFrameHost_CreatePortal_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_CreatePortal_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame_replication_state$.FrameReplicationState, val.initialReplicatedState);
    encoder.encodeStructPointer(tokens$.PortalToken, val.portalToken);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.frameToken);
    encoder.encodeStructPointer(unguessable_token$.UnguessableToken, val.devtoolsFrameToken);
  };
  function LocalFrameHost_AdoptPortal_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_AdoptPortal_Params.prototype.initDefaults_ = function() {
    this.portalToken = null;
    this.remoteFrameInterfaces = null;
  };
  LocalFrameHost_AdoptPortal_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_AdoptPortal_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_AdoptPortal_Params.portalToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.PortalToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_AdoptPortal_Params.remoteFrameInterfaces
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, remote_frame$.RemoteFrameInterfacesFromRenderer, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_AdoptPortal_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrameHost_AdoptPortal_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_AdoptPortal_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.portalToken =
        decoder.decodeStructPointer(tokens$.PortalToken);
    val.remoteFrameInterfaces =
        decoder.decodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer);
    return val;
  };

  LocalFrameHost_AdoptPortal_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_AdoptPortal_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.PortalToken, val.portalToken);
    encoder.encodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer, val.remoteFrameInterfaces);
  };
  function LocalFrameHost_AdoptPortal_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_AdoptPortal_ResponseParams.prototype.initDefaults_ = function() {
    this.replicatedState = null;
    this.frameToken = null;
    this.devtoolsFrameToken = null;
  };
  LocalFrameHost_AdoptPortal_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_AdoptPortal_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_AdoptPortal_ResponseParams.replicatedState
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame_replication_state$.FrameReplicationState, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_AdoptPortal_ResponseParams.frameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, tokens$.RemoteFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_AdoptPortal_ResponseParams.devtoolsFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, unguessable_token$.UnguessableToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_AdoptPortal_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrameHost_AdoptPortal_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_AdoptPortal_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.replicatedState =
        decoder.decodeStructPointer(frame_replication_state$.FrameReplicationState);
    val.frameToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    val.devtoolsFrameToken =
        decoder.decodeStructPointer(unguessable_token$.UnguessableToken);
    return val;
  };

  LocalFrameHost_AdoptPortal_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_AdoptPortal_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame_replication_state$.FrameReplicationState, val.replicatedState);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.frameToken);
    encoder.encodeStructPointer(unguessable_token$.UnguessableToken, val.devtoolsFrameToken);
  };
  function LocalFrameHost_CreateFencedFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_CreateFencedFrame_Params.prototype.initDefaults_ = function() {
    this.fencedFrame = new associatedBindings.AssociatedInterfaceRequest();
    this.remoteFrameInterfaces = null;
    this.frameToken = null;
    this.devtoolsFrameToken = null;
  };
  LocalFrameHost_CreateFencedFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_CreateFencedFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateFencedFrame_Params.fencedFrame
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateFencedFrame_Params.remoteFrameInterfaces
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, remote_frame$.RemoteFrameInterfacesFromRenderer, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateFencedFrame_Params.frameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, tokens$.RemoteFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_CreateFencedFrame_Params.devtoolsFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, unguessable_token$.UnguessableToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_CreateFencedFrame_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrameHost_CreateFencedFrame_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_CreateFencedFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.fencedFrame =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.remoteFrameInterfaces =
        decoder.decodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer);
    val.frameToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    val.devtoolsFrameToken =
        decoder.decodeStructPointer(unguessable_token$.UnguessableToken);
    return val;
  };

  LocalFrameHost_CreateFencedFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_CreateFencedFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.fencedFrame);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(remote_frame$.RemoteFrameInterfacesFromRenderer, val.remoteFrameInterfaces);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.frameToken);
    encoder.encodeStructPointer(unguessable_token$.UnguessableToken, val.devtoolsFrameToken);
  };
  function LocalFrameHost_OnViewTransitionOptInChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_OnViewTransitionOptInChanged_Params.prototype.initDefaults_ = function() {
    this.viewTransitionOptIn = 0;
  };
  LocalFrameHost_OnViewTransitionOptInChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_OnViewTransitionOptInChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_OnViewTransitionOptInChanged_Params.viewTransitionOptIn
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, ViewTransitionSameOriginOptIn);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_OnViewTransitionOptInChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrameHost_OnViewTransitionOptInChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_OnViewTransitionOptInChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.viewTransitionOptIn =
        decoder.decodeStruct(new codec.Enum(ViewTransitionSameOriginOptIn));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrameHost_OnViewTransitionOptInChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_OnViewTransitionOptInChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.viewTransitionOptIn);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrameHost_StartDragging_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrameHost_StartDragging_Params.prototype.initDefaults_ = function() {
    this.dragData = null;
    this.operationsAllowed = null;
    this.image = null;
    this.cursorOffsetInDip = null;
    this.dragObjRectInDip = null;
    this.eventInfo = null;
  };
  LocalFrameHost_StartDragging_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrameHost_StartDragging_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 56}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.dragData
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, drag$.DragData, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.operationsAllowed
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, drag$.AllowedDragOperations, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.image
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, bitmap$.BitmapN32, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.cursorOffsetInDip
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, geometry$.Vector2d, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.dragObjRectInDip
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrameHost_StartDragging_Params.eventInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 40, drag$.DragEventSourceInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrameHost_StartDragging_Params.encodedSize = codec.kStructHeaderSize + 48;

  LocalFrameHost_StartDragging_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrameHost_StartDragging_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.dragData =
        decoder.decodeStructPointer(drag$.DragData);
    val.operationsAllowed =
        decoder.decodeStructPointer(drag$.AllowedDragOperations);
    val.image =
        decoder.decodeStructPointer(bitmap$.BitmapN32);
    val.cursorOffsetInDip =
        decoder.decodeStructPointer(geometry$.Vector2d);
    val.dragObjRectInDip =
        decoder.decodeStructPointer(geometry$.Rect);
    val.eventInfo =
        decoder.decodeStructPointer(drag$.DragEventSourceInfo);
    return val;
  };

  LocalFrameHost_StartDragging_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrameHost_StartDragging_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(drag$.DragData, val.dragData);
    encoder.encodeStructPointer(drag$.AllowedDragOperations, val.operationsAllowed);
    encoder.encodeStructPointer(bitmap$.BitmapN32, val.image);
    encoder.encodeStructPointer(geometry$.Vector2d, val.cursorOffsetInDip);
    encoder.encodeStructPointer(geometry$.Rect, val.dragObjRectInDip);
    encoder.encodeStructPointer(drag$.DragEventSourceInfo, val.eventInfo);
  };
  function NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.prototype.initDefaults_ = function() {
    this.urls = null;
  };
  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.urls
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(url$.Url), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.encodedSize = codec.kStructHeaderSize + 8;

  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.urls =
        decoder.decodeArrayPointer(new codec.PointerTo(url$.Url));
    return val;
  };

  NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(url$.Url), val.urls);
  };
  function LocalFrame_GetTextSurroundingSelection_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetTextSurroundingSelection_Params.prototype.initDefaults_ = function() {
    this.maxLength = 0;
  };
  LocalFrame_GetTextSurroundingSelection_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetTextSurroundingSelection_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_GetTextSurroundingSelection_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_GetTextSurroundingSelection_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetTextSurroundingSelection_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.maxLength =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_GetTextSurroundingSelection_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetTextSurroundingSelection_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.maxLength);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_GetTextSurroundingSelection_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetTextSurroundingSelection_ResponseParams.prototype.initDefaults_ = function() {
    this.content = null;
    this.startOffset = 0;
    this.endOffset = 0;
  };
  LocalFrame_GetTextSurroundingSelection_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetTextSurroundingSelection_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_GetTextSurroundingSelection_ResponseParams.content
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  LocalFrame_GetTextSurroundingSelection_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_GetTextSurroundingSelection_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetTextSurroundingSelection_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.content =
        decoder.decodeStructPointer(string16$.String16);
    val.startOffset =
        decoder.decodeStruct(codec.Uint32);
    val.endOffset =
        decoder.decodeStruct(codec.Uint32);
    return val;
  };

  LocalFrame_GetTextSurroundingSelection_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetTextSurroundingSelection_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.content);
    encoder.encodeStruct(codec.Uint32, val.startOffset);
    encoder.encodeStruct(codec.Uint32, val.endOffset);
  };
  function LocalFrame_SendInterventionReport_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SendInterventionReport_Params.prototype.initDefaults_ = function() {
    this.id = null;
    this.message = null;
  };
  LocalFrame_SendInterventionReport_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SendInterventionReport_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SendInterventionReport_Params.id
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SendInterventionReport_Params.message
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SendInterventionReport_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_SendInterventionReport_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SendInterventionReport_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.id =
        decoder.decodeStruct(codec.String);
    val.message =
        decoder.decodeStruct(codec.String);
    return val;
  };

  LocalFrame_SendInterventionReport_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SendInterventionReport_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.id);
    encoder.encodeStruct(codec.String, val.message);
  };
  function LocalFrame_SetFrameOwnerProperties_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SetFrameOwnerProperties_Params.prototype.initDefaults_ = function() {
    this.properties = null;
  };
  LocalFrame_SetFrameOwnerProperties_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SetFrameOwnerProperties_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SetFrameOwnerProperties_Params.properties
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame_owner_properties$.FrameOwnerProperties, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SetFrameOwnerProperties_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_SetFrameOwnerProperties_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SetFrameOwnerProperties_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.properties =
        decoder.decodeStructPointer(frame_owner_properties$.FrameOwnerProperties);
    return val;
  };

  LocalFrame_SetFrameOwnerProperties_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SetFrameOwnerProperties_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame_owner_properties$.FrameOwnerProperties, val.properties);
  };
  function LocalFrame_NotifyUserActivation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_NotifyUserActivation_Params.prototype.initDefaults_ = function() {
    this.notificationType = 0;
  };
  LocalFrame_NotifyUserActivation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_NotifyUserActivation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_NotifyUserActivation_Params.notificationType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, user_activation_notification_type$.UserActivationNotificationType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_NotifyUserActivation_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_NotifyUserActivation_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_NotifyUserActivation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.notificationType =
        decoder.decodeStruct(new codec.Enum(user_activation_notification_type$.UserActivationNotificationType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_NotifyUserActivation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_NotifyUserActivation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.notificationType);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_NotifyVirtualKeyboardOverlayRect_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.prototype.initDefaults_ = function() {
    this.keyboardRect = null;
  };
  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.keyboardRect
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_NotifyVirtualKeyboardOverlayRect_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.keyboardRect =
        decoder.decodeStructPointer(geometry$.Rect);
    return val;
  };

  LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Rect, val.keyboardRect);
  };
  function LocalFrame_AddMessageToConsole_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_AddMessageToConsole_Params.prototype.initDefaults_ = function() {
    this.level = 0;
    this.discardDuplicates = false;
    this.message = null;
  };
  LocalFrame_AddMessageToConsole_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_AddMessageToConsole_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddMessageToConsole_Params.level
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, console_message$.ConsoleMessageLevel);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddMessageToConsole_Params.message
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_AddMessageToConsole_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_AddMessageToConsole_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_AddMessageToConsole_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.level =
        decoder.decodeStruct(new codec.Enum(console_message$.ConsoleMessageLevel));
    packed = decoder.readUint8();
    val.discardDuplicates = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.message =
        decoder.decodeStruct(codec.String);
    return val;
  };

  LocalFrame_AddMessageToConsole_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_AddMessageToConsole_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.level);
    packed = 0;
    packed |= (val.discardDuplicates & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.message);
  };
  function LocalFrame_AddInspectorIssue_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_AddInspectorIssue_Params.prototype.initDefaults_ = function() {
    this.info = null;
  };
  LocalFrame_AddInspectorIssue_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_AddInspectorIssue_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddInspectorIssue_Params.info
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, inspector_issue$.InspectorIssueInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_AddInspectorIssue_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_AddInspectorIssue_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_AddInspectorIssue_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.info =
        decoder.decodeStructPointer(inspector_issue$.InspectorIssueInfo);
    return val;
  };

  LocalFrame_AddInspectorIssue_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_AddInspectorIssue_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(inspector_issue$.InspectorIssueInfo, val.info);
  };
  function LocalFrame_SwapInImmediately_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SwapInImmediately_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_SwapInImmediately_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SwapInImmediately_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SwapInImmediately_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_SwapInImmediately_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SwapInImmediately_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_SwapInImmediately_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SwapInImmediately_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_CheckCompleted_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_CheckCompleted_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_CheckCompleted_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_CheckCompleted_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_CheckCompleted_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_CheckCompleted_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_CheckCompleted_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_CheckCompleted_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_CheckCompleted_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_StopLoading_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_StopLoading_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_StopLoading_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_StopLoading_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_StopLoading_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_StopLoading_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_StopLoading_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_StopLoading_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_StopLoading_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_Collapse_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_Collapse_Params.prototype.initDefaults_ = function() {
    this.collapsed = false;
  };
  LocalFrame_Collapse_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_Collapse_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_Collapse_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_Collapse_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_Collapse_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.collapsed = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_Collapse_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_Collapse_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.collapsed & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_EnableViewSourceMode_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_EnableViewSourceMode_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_EnableViewSourceMode_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_EnableViewSourceMode_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_EnableViewSourceMode_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_EnableViewSourceMode_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_EnableViewSourceMode_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_EnableViewSourceMode_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_EnableViewSourceMode_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_Focus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_Focus_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_Focus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_Focus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_Focus_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_Focus_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_Focus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_Focus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_Focus_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_ClearFocusedElement_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_ClearFocusedElement_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_ClearFocusedElement_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_ClearFocusedElement_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_ClearFocusedElement_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_ClearFocusedElement_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_ClearFocusedElement_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_ClearFocusedElement_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_ClearFocusedElement_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_CopyImageAt_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_CopyImageAt_Params.prototype.initDefaults_ = function() {
    this.windowPoint = null;
  };
  LocalFrame_CopyImageAt_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_CopyImageAt_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_CopyImageAt_Params.windowPoint
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_CopyImageAt_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_CopyImageAt_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_CopyImageAt_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.windowPoint =
        decoder.decodeStructPointer(geometry$.Point);
    return val;
  };

  LocalFrame_CopyImageAt_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_CopyImageAt_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Point, val.windowPoint);
  };
  function LocalFrame_SaveImageAt_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SaveImageAt_Params.prototype.initDefaults_ = function() {
    this.windowPoint = null;
  };
  LocalFrame_SaveImageAt_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SaveImageAt_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SaveImageAt_Params.windowPoint
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SaveImageAt_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_SaveImageAt_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SaveImageAt_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.windowPoint =
        decoder.decodeStructPointer(geometry$.Point);
    return val;
  };

  LocalFrame_SaveImageAt_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SaveImageAt_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Point, val.windowPoint);
  };
  function LocalFrame_ReportBlinkFeatureUsage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_ReportBlinkFeatureUsage_Params.prototype.initDefaults_ = function() {
    this.features = null;
  };
  LocalFrame_ReportBlinkFeatureUsage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_ReportBlinkFeatureUsage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_ReportBlinkFeatureUsage_Params.features
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 4, new codec.Enum(web_feature$.WebFeature), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_ReportBlinkFeatureUsage_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_ReportBlinkFeatureUsage_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_ReportBlinkFeatureUsage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.features =
        decoder.decodeArrayPointer(new codec.Enum(web_feature$.WebFeature));
    return val;
  };

  LocalFrame_ReportBlinkFeatureUsage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_ReportBlinkFeatureUsage_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.Enum(web_feature$.WebFeature), val.features);
  };
  function LocalFrame_RenderFallbackContent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_RenderFallbackContent_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_RenderFallbackContent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_RenderFallbackContent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_RenderFallbackContent_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_RenderFallbackContent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_RenderFallbackContent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_RenderFallbackContent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_RenderFallbackContent_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_BeforeUnload_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_BeforeUnload_Params.prototype.initDefaults_ = function() {
    this.isReload = false;
  };
  LocalFrame_BeforeUnload_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_BeforeUnload_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_BeforeUnload_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_BeforeUnload_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_BeforeUnload_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isReload = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_BeforeUnload_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_BeforeUnload_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isReload & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_BeforeUnload_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_BeforeUnload_ResponseParams.prototype.initDefaults_ = function() {
    this.proceed = false;
    this.beforeUnloadStartTime = null;
    this.beforeUnloadEndTime = null;
  };
  LocalFrame_BeforeUnload_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_BeforeUnload_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrame_BeforeUnload_ResponseParams.beforeUnloadStartTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_BeforeUnload_ResponseParams.beforeUnloadEndTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_BeforeUnload_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrame_BeforeUnload_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_BeforeUnload_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.proceed = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.beforeUnloadStartTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.beforeUnloadEndTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    return val;
  };

  LocalFrame_BeforeUnload_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_BeforeUnload_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.proceed & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(time$.TimeTicks, val.beforeUnloadStartTime);
    encoder.encodeStructPointer(time$.TimeTicks, val.beforeUnloadEndTime);
  };
  function LocalFrame_MediaPlayerActionAt_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_MediaPlayerActionAt_Params.prototype.initDefaults_ = function() {
    this.location = null;
    this.action = null;
  };
  LocalFrame_MediaPlayerActionAt_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_MediaPlayerActionAt_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_MediaPlayerActionAt_Params.location
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_MediaPlayerActionAt_Params.action
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, media_player_action$.MediaPlayerAction, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_MediaPlayerActionAt_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_MediaPlayerActionAt_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_MediaPlayerActionAt_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.location =
        decoder.decodeStructPointer(geometry$.Point);
    val.action =
        decoder.decodeStructPointer(media_player_action$.MediaPlayerAction);
    return val;
  };

  LocalFrame_MediaPlayerActionAt_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_MediaPlayerActionAt_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Point, val.location);
    encoder.encodeStructPointer(media_player_action$.MediaPlayerAction, val.action);
  };
  function LocalFrame_PluginActionAt_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_PluginActionAt_Params.prototype.initDefaults_ = function() {
    this.location = null;
    this.action = 0;
  };
  LocalFrame_PluginActionAt_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_PluginActionAt_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PluginActionAt_Params.location
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PluginActionAt_Params.action
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 8, PluginActionType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_PluginActionAt_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_PluginActionAt_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_PluginActionAt_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.location =
        decoder.decodeStructPointer(geometry$.Point);
    val.action =
        decoder.decodeStruct(new codec.Enum(PluginActionType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_PluginActionAt_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_PluginActionAt_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Point, val.location);
    encoder.encodeStruct(codec.Int32, val.action);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_AdvanceFocusInFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_AdvanceFocusInFrame_Params.prototype.initDefaults_ = function() {
    this.focusType = 0;
    this.sourceFrameToken = null;
  };
  LocalFrame_AdvanceFocusInFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_AdvanceFocusInFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AdvanceFocusInFrame_Params.focusType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, focus_type$.FocusType);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AdvanceFocusInFrame_Params.sourceFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, tokens$.RemoteFrameToken, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_AdvanceFocusInFrame_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_AdvanceFocusInFrame_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_AdvanceFocusInFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.focusType =
        decoder.decodeStruct(new codec.Enum(focus_type$.FocusType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.sourceFrameToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    return val;
  };

  LocalFrame_AdvanceFocusInFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_AdvanceFocusInFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.focusType);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.sourceFrameToken);
  };
  function LocalFrame_AdvanceFocusForIME_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_AdvanceFocusForIME_Params.prototype.initDefaults_ = function() {
    this.focusType = 0;
  };
  LocalFrame_AdvanceFocusForIME_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_AdvanceFocusForIME_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AdvanceFocusForIME_Params.focusType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, focus_type$.FocusType);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_AdvanceFocusForIME_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_AdvanceFocusForIME_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_AdvanceFocusForIME_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.focusType =
        decoder.decodeStruct(new codec.Enum(focus_type$.FocusType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_AdvanceFocusForIME_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_AdvanceFocusForIME_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.focusType);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_ReportContentSecurityPolicyViolation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_ReportContentSecurityPolicyViolation_Params.prototype.initDefaults_ = function() {
    this.violation = null;
  };
  LocalFrame_ReportContentSecurityPolicyViolation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_ReportContentSecurityPolicyViolation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_ReportContentSecurityPolicyViolation_Params.violation
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, content_security_policy$.CSPViolation, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_ReportContentSecurityPolicyViolation_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_ReportContentSecurityPolicyViolation_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_ReportContentSecurityPolicyViolation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.violation =
        decoder.decodeStructPointer(content_security_policy$.CSPViolation);
    return val;
  };

  LocalFrame_ReportContentSecurityPolicyViolation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_ReportContentSecurityPolicyViolation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(content_security_policy$.CSPViolation, val.violation);
  };
  function LocalFrame_DidUpdateFramePolicy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_DidUpdateFramePolicy_Params.prototype.initDefaults_ = function() {
    this.framePolicy = null;
  };
  LocalFrame_DidUpdateFramePolicy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_DidUpdateFramePolicy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_DidUpdateFramePolicy_Params.framePolicy
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame_policy$.FramePolicy, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_DidUpdateFramePolicy_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_DidUpdateFramePolicy_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_DidUpdateFramePolicy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.framePolicy =
        decoder.decodeStructPointer(frame_policy$.FramePolicy);
    return val;
  };

  LocalFrame_DidUpdateFramePolicy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_DidUpdateFramePolicy_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame_policy$.FramePolicy, val.framePolicy);
  };
  function LocalFrame_PostMessageEvent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_PostMessageEvent_Params.prototype.initDefaults_ = function() {
    this.sourceFrameToken = null;
    this.sourceOrigin = null;
    this.targetOrigin = null;
    this.message = null;
  };
  LocalFrame_PostMessageEvent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_PostMessageEvent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PostMessageEvent_Params.sourceFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.RemoteFrameToken, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PostMessageEvent_Params.sourceOrigin
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PostMessageEvent_Params.targetOrigin
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_PostMessageEvent_Params.message
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, transferable_message$.TransferableMessage, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_PostMessageEvent_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrame_PostMessageEvent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_PostMessageEvent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.sourceFrameToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    val.sourceOrigin =
        decoder.decodeStructPointer(string16$.String16);
    val.targetOrigin =
        decoder.decodeStructPointer(string16$.String16);
    val.message =
        decoder.decodeStructPointer(transferable_message$.TransferableMessage);
    return val;
  };

  LocalFrame_PostMessageEvent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_PostMessageEvent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.sourceFrameToken);
    encoder.encodeStructPointer(string16$.String16, val.sourceOrigin);
    encoder.encodeStructPointer(string16$.String16, val.targetOrigin);
    encoder.encodeStructPointer(transferable_message$.TransferableMessage, val.message);
  };
  function LocalFrame_JavaScriptMethodExecuteRequest_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptMethodExecuteRequest_Params.prototype.initDefaults_ = function() {
    this.objectName = null;
    this.methodName = null;
    this.arguments = null;
    this.wantsResult = false;
  };
  LocalFrame_JavaScriptMethodExecuteRequest_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptMethodExecuteRequest_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptMethodExecuteRequest_Params.objectName
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptMethodExecuteRequest_Params.methodName
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptMethodExecuteRequest_Params.arguments
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, values$.ListValue, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptMethodExecuteRequest_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalFrame_JavaScriptMethodExecuteRequest_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptMethodExecuteRequest_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.objectName =
        decoder.decodeStructPointer(string16$.String16);
    val.methodName =
        decoder.decodeStructPointer(string16$.String16);
    val.arguments =
        decoder.decodeStructPointer(values$.ListValue);
    packed = decoder.readUint8();
    val.wantsResult = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_JavaScriptMethodExecuteRequest_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptMethodExecuteRequest_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.objectName);
    encoder.encodeStructPointer(string16$.String16, val.methodName);
    encoder.encodeStructPointer(values$.ListValue, val.arguments);
    packed = 0;
    packed |= (val.wantsResult & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
  };
  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.result
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, values$.Value, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStruct(values$.Value);
    return val;
  };

  LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(values$.Value, val.result);
  };
  function LocalFrame_JavaScriptExecuteRequest_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequest_Params.prototype.initDefaults_ = function() {
    this.javascript = null;
    this.wantsResult = false;
  };
  LocalFrame_JavaScriptExecuteRequest_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequest_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequest_Params.javascript
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.BigString16, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequest_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptExecuteRequest_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequest_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.javascript =
        decoder.decodeStructPointer(string16$.BigString16);
    packed = decoder.readUint8();
    val.wantsResult = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequest_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequest_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.BigString16, val.javascript);
    packed = 0;
    packed |= (val.wantsResult & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_JavaScriptExecuteRequest_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequest_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
  };
  LocalFrame_JavaScriptExecuteRequest_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequest_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequest_ResponseParams.result
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, values$.Value, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequest_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptExecuteRequest_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequest_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStruct(values$.Value);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequest_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequest_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(values$.Value, val.result);
  };
  function LocalFrame_JavaScriptExecuteRequestForTests_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequestForTests_Params.prototype.initDefaults_ = function() {
    this.javascript = null;
    this.hasUserGesture = false;
    this.resolvePromises = false;
    this.worldId = 0;
  };
  LocalFrame_JavaScriptExecuteRequestForTests_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequestForTests_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequestForTests_Params.javascript
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.BigString16, false);
    if (err !== validator.validationError.NONE)
        return err;




    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequestForTests_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptExecuteRequestForTests_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequestForTests_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.javascript =
        decoder.decodeStructPointer(string16$.BigString16);
    packed = decoder.readUint8();
    val.hasUserGesture = (packed >> 0) & 1 ? true : false;
    val.resolvePromises = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.worldId =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequestForTests_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequestForTests_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.BigString16, val.javascript);
    packed = 0;
    packed |= (val.hasUserGesture & 1) << 0
    packed |= (val.resolvePromises & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.worldId);
  };
  function LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.prototype.initDefaults_ = function() {
    this.resultType = 0;
    this.result = null;
  };
  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.resultType
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, JavaScriptExecutionResultType);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.result
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 8, values$.Value, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.resultType =
        decoder.decodeStruct(new codec.Enum(JavaScriptExecutionResultType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.result =
        decoder.decodeStruct(values$.Value);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.resultType);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(values$.Value, val.result);
  };
  function LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.prototype.initDefaults_ = function() {
    this.javascript = null;
    this.wantsResult = false;
    this.worldId = 0;
  };
  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.javascript
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.BigString16, false);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.javascript =
        decoder.decodeStructPointer(string16$.BigString16);
    packed = decoder.readUint8();
    val.wantsResult = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.worldId =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.BigString16, val.javascript);
    packed = 0;
    packed |= (val.wantsResult & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.worldId);
  };
  function LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
  };
  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.result
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, values$.Value, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStruct(values$.Value);
    return val;
  };

  LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(values$.Value, val.result);
  };
  function LocalFrame_BindReportingObserver_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_BindReportingObserver_Params.prototype.initDefaults_ = function() {
    this.receiver = new bindings.InterfaceRequest();
  };
  LocalFrame_BindReportingObserver_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_BindReportingObserver_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_BindReportingObserver_Params.receiver
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_BindReportingObserver_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_BindReportingObserver_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_BindReportingObserver_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.receiver =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_BindReportingObserver_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_BindReportingObserver_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.InterfaceRequest, val.receiver);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_UpdateOpener_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_UpdateOpener_Params.prototype.initDefaults_ = function() {
    this.openerFrameToken = null;
  };
  LocalFrame_UpdateOpener_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_UpdateOpener_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_UpdateOpener_Params.openerFrameToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_UpdateOpener_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_UpdateOpener_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_UpdateOpener_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.openerFrameToken =
        decoder.decodeStruct(tokens$.FrameToken);
    return val;
  };

  LocalFrame_UpdateOpener_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_UpdateOpener_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.openerFrameToken);
  };
  function LocalFrame_GetSavableResourceLinks_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetSavableResourceLinks_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_GetSavableResourceLinks_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetSavableResourceLinks_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetSavableResourceLinks_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_GetSavableResourceLinks_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetSavableResourceLinks_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_GetSavableResourceLinks_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetSavableResourceLinks_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_GetSavableResourceLinks_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetSavableResourceLinks_ResponseParams.prototype.initDefaults_ = function() {
    this.reply = null;
  };
  LocalFrame_GetSavableResourceLinks_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetSavableResourceLinks_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_GetSavableResourceLinks_ResponseParams.reply
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, GetSavableResourceLinksReply, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetSavableResourceLinks_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_GetSavableResourceLinks_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetSavableResourceLinks_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.reply =
        decoder.decodeStructPointer(GetSavableResourceLinksReply);
    return val;
  };

  LocalFrame_GetSavableResourceLinks_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetSavableResourceLinks_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(GetSavableResourceLinksReply, val.reply);
  };
  function LocalFrame_MixedContentFound_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_MixedContentFound_Params.prototype.initDefaults_ = function() {
    this.mainResourceUrl = null;
    this.mixedContentUrl = null;
    this.requestContext = 0;
    this.wasAllowed = false;
    this.hadRedirect = false;
    this.urlBeforeRedirects = null;
    this.sourceLocation = null;
  };
  LocalFrame_MixedContentFound_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_MixedContentFound_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_MixedContentFound_Params.mainResourceUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_MixedContentFound_Params.mixedContentUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_MixedContentFound_Params.requestContext
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 16, fetch_api_request$.RequestContextType);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrame_MixedContentFound_Params.urlBeforeRedirects
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrame_MixedContentFound_Params.sourceLocation
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, source_location$.SourceLocation, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_MixedContentFound_Params.encodedSize = codec.kStructHeaderSize + 40;

  LocalFrame_MixedContentFound_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_MixedContentFound_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.mainResourceUrl =
        decoder.decodeStructPointer(url$.Url);
    val.mixedContentUrl =
        decoder.decodeStructPointer(url$.Url);
    val.requestContext =
        decoder.decodeStruct(new codec.Enum(fetch_api_request$.RequestContextType));
    packed = decoder.readUint8();
    val.wasAllowed = (packed >> 0) & 1 ? true : false;
    val.hadRedirect = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.urlBeforeRedirects =
        decoder.decodeStructPointer(url$.Url);
    val.sourceLocation =
        decoder.decodeStructPointer(source_location$.SourceLocation);
    return val;
  };

  LocalFrame_MixedContentFound_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_MixedContentFound_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.mainResourceUrl);
    encoder.encodeStructPointer(url$.Url, val.mixedContentUrl);
    encoder.encodeStruct(codec.Int32, val.requestContext);
    packed = 0;
    packed |= (val.wasAllowed & 1) << 0
    packed |= (val.hadRedirect & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.urlBeforeRedirects);
    encoder.encodeStructPointer(source_location$.SourceLocation, val.sourceLocation);
  };
  function LocalFrame_BindDevToolsAgent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_BindDevToolsAgent_Params.prototype.initDefaults_ = function() {
    this.agentHost = new associatedBindings.AssociatedInterfacePtrInfo();
    this.agent = new associatedBindings.AssociatedInterfaceRequest();
  };
  LocalFrame_BindDevToolsAgent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_BindDevToolsAgent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_BindDevToolsAgent_Params.agentHost
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_BindDevToolsAgent_Params.agent
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_BindDevToolsAgent_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_BindDevToolsAgent_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_BindDevToolsAgent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.agentHost =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    val.agent =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_BindDevToolsAgent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_BindDevToolsAgent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.agentHost);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.agent);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_HandleRendererDebugURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_HandleRendererDebugURL_Params.prototype.initDefaults_ = function() {
    this.url = null;
  };
  LocalFrame_HandleRendererDebugURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_HandleRendererDebugURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_HandleRendererDebugURL_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_HandleRendererDebugURL_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_HandleRendererDebugURL_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_HandleRendererDebugURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  LocalFrame_HandleRendererDebugURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_HandleRendererDebugURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function LocalFrame_GetCanonicalUrlForSharing_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetCanonicalUrlForSharing_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_GetCanonicalUrlForSharing_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetCanonicalUrlForSharing_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetCanonicalUrlForSharing_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_GetCanonicalUrlForSharing_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetCanonicalUrlForSharing_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_GetCanonicalUrlForSharing_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetCanonicalUrlForSharing_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_GetCanonicalUrlForSharing_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.prototype.initDefaults_ = function() {
    this.canonicalUrl = null;
  };
  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_GetCanonicalUrlForSharing_ResponseParams.canonicalUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetCanonicalUrlForSharing_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.canonicalUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  LocalFrame_GetCanonicalUrlForSharing_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetCanonicalUrlForSharing_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.canonicalUrl);
  };
  function LocalFrame_GetOpenGraphMetadata_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetOpenGraphMetadata_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_GetOpenGraphMetadata_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetOpenGraphMetadata_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetOpenGraphMetadata_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_GetOpenGraphMetadata_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetOpenGraphMetadata_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_GetOpenGraphMetadata_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetOpenGraphMetadata_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_GetOpenGraphMetadata_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_GetOpenGraphMetadata_ResponseParams.prototype.initDefaults_ = function() {
    this.metadata = null;
  };
  LocalFrame_GetOpenGraphMetadata_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_GetOpenGraphMetadata_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_GetOpenGraphMetadata_ResponseParams.metadata
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, metadata$.OpenGraphMetadata, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_GetOpenGraphMetadata_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_GetOpenGraphMetadata_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_GetOpenGraphMetadata_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.metadata =
        decoder.decodeStructPointer(metadata$.OpenGraphMetadata);
    return val;
  };

  LocalFrame_GetOpenGraphMetadata_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_GetOpenGraphMetadata_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(metadata$.OpenGraphMetadata, val.metadata);
  };
  function LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.prototype.initDefaults_ = function() {
    this.entryArrays = null;
  };
  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.entryArrays
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, navigation_api_history_entry_arrays$.NavigationApiHistoryEntryArrays, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.entryArrays =
        decoder.decodeStructPointer(navigation_api_history_entry_arrays$.NavigationApiHistoryEntryArrays);
    return val;
  };

  LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(navigation_api_history_entry_arrays$.NavigationApiHistoryEntryArrays, val.entryArrays);
  };
  function LocalFrame_NotifyNavigationApiOfDisposedEntries_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.prototype.initDefaults_ = function() {
    this.keys = null;
  };
  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.keys
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, codec.String, false, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_NotifyNavigationApiOfDisposedEntries_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.keys =
        decoder.decodeArrayPointer(codec.String);
    return val;
  };

  LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.String, val.keys);
  };
  function LocalFrame_TraverseCancelled_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_TraverseCancelled_Params.prototype.initDefaults_ = function() {
    this.navigationApiKey = null;
    this.reason = 0;
  };
  LocalFrame_TraverseCancelled_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_TraverseCancelled_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_TraverseCancelled_Params.navigationApiKey
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_TraverseCancelled_Params.reason
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 8, TraverseCancelledReason);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_TraverseCancelled_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalFrame_TraverseCancelled_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_TraverseCancelled_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.navigationApiKey =
        decoder.decodeStruct(codec.String);
    val.reason =
        decoder.decodeStruct(new codec.Enum(TraverseCancelledReason));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalFrame_TraverseCancelled_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_TraverseCancelled_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.navigationApiKey);
    encoder.encodeStruct(codec.Int32, val.reason);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalFrame_SnapshotDocumentForViewTransition_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SnapshotDocumentForViewTransition_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_SnapshotDocumentForViewTransition_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SnapshotDocumentForViewTransition_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SnapshotDocumentForViewTransition_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_SnapshotDocumentForViewTransition_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SnapshotDocumentForViewTransition_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_SnapshotDocumentForViewTransition_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SnapshotDocumentForViewTransition_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalFrame_SnapshotDocumentForViewTransition_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.prototype.initDefaults_ = function() {
    this.viewTransitionState = null;
  };
  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.viewTransitionState
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, view_transition_state$.ViewTransitionState, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_SnapshotDocumentForViewTransition_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.viewTransitionState =
        decoder.decodeStructPointer(view_transition_state$.ViewTransitionState);
    return val;
  };

  LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(view_transition_state$.ViewTransitionState, val.viewTransitionState);
  };
  function LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.prototype.initDefaults_ = function() {
    this.subframeToken = null;
    this.initialUrl = null;
    this.startTime = null;
    this.redirectTime = null;
    this.requestStart = null;
    this.responseStart = null;
    this.responseCode = 0;
    this.connectionInfo = 0;
    this.mimeType = null;
    this.loadTimingInfo = null;
    this.alpnNegotiatedProtocol = null;
    this.isSecureTransport = false;
    this.isValidated = false;
    this.normalizedServerTiming = null;
    this.completionStatus = null;
  };
  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 120}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.subframeToken
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.initialUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.startTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.redirectTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.requestStart
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 40, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.responseStart
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 48, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.mimeType
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 64, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.loadTimingInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 72, load_timing_info$.LoadTimingInfo, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.connectionInfo
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 60, network_types$.ConnectionInfo);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.alpnNegotiatedProtocol
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 80, false)
    if (err !== validator.validationError.NONE)
        return err;




    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.normalizedServerTiming
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 96, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.completionStatus
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 104, url_loader_completion_status$.URLLoaderCompletionStatus, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.encodedSize = codec.kStructHeaderSize + 112;

  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.subframeToken =
        decoder.decodeStruct(tokens$.FrameToken);
    val.initialUrl =
        decoder.decodeStructPointer(url$.Url);
    val.startTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.redirectTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.requestStart =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.responseStart =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.responseCode =
        decoder.decodeStruct(codec.Uint32);
    val.connectionInfo =
        decoder.decodeStruct(new codec.Enum(network_types$.ConnectionInfo));
    val.mimeType =
        decoder.decodeStruct(codec.String);
    val.loadTimingInfo =
        decoder.decodeStructPointer(load_timing_info$.LoadTimingInfo);
    val.alpnNegotiatedProtocol =
        decoder.decodeStruct(codec.String);
    packed = decoder.readUint8();
    val.isSecureTransport = (packed >> 0) & 1 ? true : false;
    val.isValidated = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.normalizedServerTiming =
        decoder.decodeStruct(codec.String);
    val.completionStatus =
        decoder.decodeStructPointer(url_loader_completion_status$.URLLoaderCompletionStatus);
    return val;
  };

  LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.subframeToken);
    encoder.encodeStructPointer(url$.Url, val.initialUrl);
    encoder.encodeStructPointer(time$.TimeTicks, val.startTime);
    encoder.encodeStructPointer(time$.TimeTicks, val.redirectTime);
    encoder.encodeStructPointer(time$.TimeTicks, val.requestStart);
    encoder.encodeStructPointer(time$.TimeTicks, val.responseStart);
    encoder.encodeStruct(codec.Uint32, val.responseCode);
    encoder.encodeStruct(codec.Int32, val.connectionInfo);
    encoder.encodeStruct(codec.String, val.mimeType);
    encoder.encodeStructPointer(load_timing_info$.LoadTimingInfo, val.loadTimingInfo);
    encoder.encodeStruct(codec.String, val.alpnNegotiatedProtocol);
    packed = 0;
    packed |= (val.isSecureTransport & 1) << 0
    packed |= (val.isValidated & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.normalizedServerTiming);
    encoder.encodeStructPointer(url_loader_completion_status$.URLLoaderCompletionStatus, val.completionStatus);
  };
  function LocalFrame_RequestFullscreenDocumentElement_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalFrame_RequestFullscreenDocumentElement_Params.prototype.initDefaults_ = function() {
  };
  LocalFrame_RequestFullscreenDocumentElement_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalFrame_RequestFullscreenDocumentElement_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalFrame_RequestFullscreenDocumentElement_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalFrame_RequestFullscreenDocumentElement_Params.decode = function(decoder) {
    var packed;
    var val = new LocalFrame_RequestFullscreenDocumentElement_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalFrame_RequestFullscreenDocumentElement_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalFrame_RequestFullscreenDocumentElement_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function HighPriorityLocalFrame_DispatchBeforeUnload_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  HighPriorityLocalFrame_DispatchBeforeUnload_Params.prototype.initDefaults_ = function() {
    this.isReload = false;
  };
  HighPriorityLocalFrame_DispatchBeforeUnload_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_Params.encodedSize = codec.kStructHeaderSize + 8;

  HighPriorityLocalFrame_DispatchBeforeUnload_Params.decode = function(decoder) {
    var packed;
    var val = new HighPriorityLocalFrame_DispatchBeforeUnload_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isReload = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(HighPriorityLocalFrame_DispatchBeforeUnload_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isReload & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.prototype.initDefaults_ = function() {
    this.proceed = false;
    this.beforeUnloadStartTime = null;
    this.beforeUnloadEndTime = null;
  };
  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.beforeUnloadStartTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.beforeUnloadEndTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, time$.TimeTicks, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.proceed = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.beforeUnloadStartTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    val.beforeUnloadEndTime =
        decoder.decodeStructPointer(time$.TimeTicks);
    return val;
  };

  HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.proceed & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(time$.TimeTicks, val.beforeUnloadStartTime);
    encoder.encodeStructPointer(time$.TimeTicks, val.beforeUnloadEndTime);
  };
  function LocalMainFrame_AnimateDoubleTapZoom_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_AnimateDoubleTapZoom_Params.prototype.initDefaults_ = function() {
    this.point = null;
    this.rect = null;
  };
  LocalMainFrame_AnimateDoubleTapZoom_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_AnimateDoubleTapZoom_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_AnimateDoubleTapZoom_Params.point
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_AnimateDoubleTapZoom_Params.rect
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_AnimateDoubleTapZoom_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalMainFrame_AnimateDoubleTapZoom_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_AnimateDoubleTapZoom_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.point =
        decoder.decodeStructPointer(geometry$.Point);
    val.rect =
        decoder.decodeStructPointer(geometry$.Rect);
    return val;
  };

  LocalMainFrame_AnimateDoubleTapZoom_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_AnimateDoubleTapZoom_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Point, val.point);
    encoder.encodeStructPointer(geometry$.Rect, val.rect);
  };
  function LocalMainFrame_SetScaleFactor_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_SetScaleFactor_Params.prototype.initDefaults_ = function() {
    this.scale = 0;
  };
  LocalMainFrame_SetScaleFactor_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_SetScaleFactor_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrame_SetScaleFactor_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_SetScaleFactor_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_SetScaleFactor_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.scale =
        decoder.decodeStruct(codec.Float);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrame_SetScaleFactor_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_SetScaleFactor_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Float, val.scale);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrame_ClosePage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_ClosePage_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrame_ClosePage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_ClosePage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_ClosePage_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrame_ClosePage_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_ClosePage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrame_ClosePage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_ClosePage_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrame_ClosePage_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_ClosePage_ResponseParams.prototype.initDefaults_ = function() {
  };
  LocalMainFrame_ClosePage_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_ClosePage_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_ClosePage_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrame_ClosePage_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_ClosePage_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrame_ClosePage_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_ClosePage_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrame_GetFullPageSize_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_GetFullPageSize_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrame_GetFullPageSize_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_GetFullPageSize_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_GetFullPageSize_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrame_GetFullPageSize_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_GetFullPageSize_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrame_GetFullPageSize_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_GetFullPageSize_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrame_GetFullPageSize_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_GetFullPageSize_ResponseParams.prototype.initDefaults_ = function() {
    this.fullPageSize = null;
  };
  LocalMainFrame_GetFullPageSize_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_GetFullPageSize_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_GetFullPageSize_ResponseParams.fullPageSize
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_GetFullPageSize_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_GetFullPageSize_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_GetFullPageSize_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.fullPageSize =
        decoder.decodeStructPointer(geometry$.Size);
    return val;
  };

  LocalMainFrame_GetFullPageSize_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_GetFullPageSize_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.fullPageSize);
  };
  function LocalMainFrame_SetInitialFocus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_SetInitialFocus_Params.prototype.initDefaults_ = function() {
    this.reverse = false;
  };
  LocalMainFrame_SetInitialFocus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_SetInitialFocus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrame_SetInitialFocus_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_SetInitialFocus_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_SetInitialFocus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.reverse = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrame_SetInitialFocus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_SetInitialFocus_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.reverse & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrame_EnablePreferredSizeChangedMode_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_EnablePreferredSizeChangedMode_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrame_EnablePreferredSizeChangedMode_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_EnablePreferredSizeChangedMode_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_EnablePreferredSizeChangedMode_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrame_EnablePreferredSizeChangedMode_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_EnablePreferredSizeChangedMode_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrame_EnablePreferredSizeChangedMode_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_EnablePreferredSizeChangedMode_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrame_ZoomToFindInPageRect_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_ZoomToFindInPageRect_Params.prototype.initDefaults_ = function() {
    this.rectInRootFrame = null;
  };
  LocalMainFrame_ZoomToFindInPageRect_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_ZoomToFindInPageRect_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_ZoomToFindInPageRect_Params.rectInRootFrame
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_ZoomToFindInPageRect_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_ZoomToFindInPageRect_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_ZoomToFindInPageRect_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.rectInRootFrame =
        decoder.decodeStructPointer(geometry$.Rect);
    return val;
  };

  LocalMainFrame_ZoomToFindInPageRect_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_ZoomToFindInPageRect_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Rect, val.rectInRootFrame);
  };
  function LocalMainFrame_InstallCoopAccessMonitor_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_InstallCoopAccessMonitor_Params.prototype.initDefaults_ = function() {
    this.accessedWindow = null;
    this.coopReporterInfo = null;
    this.isInSameVirtualCoopRelatedGroup = false;
  };
  LocalMainFrame_InstallCoopAccessMonitor_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_InstallCoopAccessMonitor_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_InstallCoopAccessMonitor_Params.accessedWindow
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, tokens$.FrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_InstallCoopAccessMonitor_Params.coopReporterInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, cross_origin_opener_policy$.CrossOriginOpenerPolicyReporterParams, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrame_InstallCoopAccessMonitor_Params.encodedSize = codec.kStructHeaderSize + 32;

  LocalMainFrame_InstallCoopAccessMonitor_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_InstallCoopAccessMonitor_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.accessedWindow =
        decoder.decodeStruct(tokens$.FrameToken);
    val.coopReporterInfo =
        decoder.decodeStructPointer(cross_origin_opener_policy$.CrossOriginOpenerPolicyReporterParams);
    packed = decoder.readUint8();
    val.isInSameVirtualCoopRelatedGroup = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrame_InstallCoopAccessMonitor_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_InstallCoopAccessMonitor_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(tokens$.FrameToken, val.accessedWindow);
    encoder.encodeStructPointer(cross_origin_opener_policy$.CrossOriginOpenerPolicyReporterParams, val.coopReporterInfo);
    packed = 0;
    packed |= (val.isInSameVirtualCoopRelatedGroup & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrame_OnPortalActivated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_OnPortalActivated_Params.prototype.initDefaults_ = function() {
    this.portalToken = null;
    this.portal = new associatedBindings.AssociatedInterfacePtrInfo();
    this.portalClient = new associatedBindings.AssociatedInterfaceRequest();
    this.data = null;
    this.traceId = 0;
  };
  LocalMainFrame_OnPortalActivated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_OnPortalActivated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_OnPortalActivated_Params.portalToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.PortalToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_OnPortalActivated_Params.portal
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 8, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_OnPortalActivated_Params.portalClient
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_OnPortalActivated_Params.data
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, transferable_message$.TransferableMessage, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrame_OnPortalActivated_Params.encodedSize = codec.kStructHeaderSize + 40;

  LocalMainFrame_OnPortalActivated_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_OnPortalActivated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.portalToken =
        decoder.decodeStructPointer(tokens$.PortalToken);
    val.portal =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    val.portalClient =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.data =
        decoder.decodeStructPointer(transferable_message$.TransferableMessage);
    val.traceId =
        decoder.decodeStruct(codec.Uint64);
    return val;
  };

  LocalMainFrame_OnPortalActivated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_OnPortalActivated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.PortalToken, val.portalToken);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.portal);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.portalClient);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(transferable_message$.TransferableMessage, val.data);
    encoder.encodeStruct(codec.Uint64, val.traceId);
  };
  function LocalMainFrame_OnPortalActivated_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_OnPortalActivated_ResponseParams.prototype.initDefaults_ = function() {
    this.result = 0;
  };
  LocalMainFrame_OnPortalActivated_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_OnPortalActivated_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_OnPortalActivated_ResponseParams.result
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, portal$.PortalActivateResult);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_OnPortalActivated_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_OnPortalActivated_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_OnPortalActivated_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStruct(new codec.Enum(portal$.PortalActivateResult));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrame_OnPortalActivated_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_OnPortalActivated_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.result);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrame_ForwardMessageFromHost_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_ForwardMessageFromHost_Params.prototype.initDefaults_ = function() {
    this.message = null;
    this.sourceOrigin = null;
  };
  LocalMainFrame_ForwardMessageFromHost_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_ForwardMessageFromHost_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_ForwardMessageFromHost_Params.message
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, transferable_message$.TransferableMessage, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_ForwardMessageFromHost_Params.sourceOrigin
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, origin$.Origin, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_ForwardMessageFromHost_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalMainFrame_ForwardMessageFromHost_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_ForwardMessageFromHost_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.message =
        decoder.decodeStructPointer(transferable_message$.TransferableMessage);
    val.sourceOrigin =
        decoder.decodeStructPointer(origin$.Origin);
    return val;
  };

  LocalMainFrame_ForwardMessageFromHost_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_ForwardMessageFromHost_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(transferable_message$.TransferableMessage, val.message);
    encoder.encodeStructPointer(origin$.Origin, val.sourceOrigin);
  };
  function LocalMainFrame_UpdateBrowserControlsState_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_UpdateBrowserControlsState_Params.prototype.initDefaults_ = function() {
    this.constraints = 0;
    this.current = 0;
    this.animate = false;
  };
  LocalMainFrame_UpdateBrowserControlsState_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_UpdateBrowserControlsState_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_UpdateBrowserControlsState_Params.constraints
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, browser_controls_state$.BrowserControlsState);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_UpdateBrowserControlsState_Params.current
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, browser_controls_state$.BrowserControlsState);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrame_UpdateBrowserControlsState_Params.encodedSize = codec.kStructHeaderSize + 16;

  LocalMainFrame_UpdateBrowserControlsState_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_UpdateBrowserControlsState_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.constraints =
        decoder.decodeStruct(new codec.Enum(browser_controls_state$.BrowserControlsState));
    val.current =
        decoder.decodeStruct(new codec.Enum(browser_controls_state$.BrowserControlsState));
    packed = decoder.readUint8();
    val.animate = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrame_UpdateBrowserControlsState_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_UpdateBrowserControlsState_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.constraints);
    encoder.encodeStruct(codec.Int32, val.current);
    packed = 0;
    packed |= (val.animate & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrame_SetV8CompileHints_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrame_SetV8CompileHints_Params.prototype.initDefaults_ = function() {
    this.data = null;
  };
  LocalMainFrame_SetV8CompileHints_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrame_SetV8CompileHints_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrame_SetV8CompileHints_Params.data
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, shared_memory$.ReadOnlySharedMemoryRegion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrame_SetV8CompileHints_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrame_SetV8CompileHints_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrame_SetV8CompileHints_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.data =
        decoder.decodeStructPointer(shared_memory$.ReadOnlySharedMemoryRegion);
    return val;
  };

  LocalMainFrame_SetV8CompileHints_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrame_SetV8CompileHints_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(shared_memory$.ReadOnlySharedMemoryRegion, val.data);
  };
  function LocalMainFrameHost_ScaleFactorChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_ScaleFactorChanged_Params.prototype.initDefaults_ = function() {
    this.scale = 0;
  };
  LocalMainFrameHost_ScaleFactorChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_ScaleFactorChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrameHost_ScaleFactorChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_ScaleFactorChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_ScaleFactorChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.scale =
        decoder.decodeStruct(codec.Float);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrameHost_ScaleFactorChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_ScaleFactorChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Float, val.scale);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrameHost_ContentsPreferredSizeChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.prototype.initDefaults_ = function() {
    this.prefSize = null;
  };
  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_ContentsPreferredSizeChanged_Params.prefSize
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_ContentsPreferredSizeChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.prefSize =
        decoder.decodeStructPointer(geometry$.Size);
    return val;
  };

  LocalMainFrameHost_ContentsPreferredSizeChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_ContentsPreferredSizeChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.prefSize);
  };
  function LocalMainFrameHost_TextAutosizerPageInfoChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.prototype.initDefaults_ = function() {
    this.pageInfo = null;
  };
  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.pageInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, text_autosizer_page_info$.TextAutosizerPageInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_TextAutosizerPageInfoChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageInfo =
        decoder.decodeStructPointer(text_autosizer_page_info$.TextAutosizerPageInfo);
    return val;
  };

  LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(text_autosizer_page_info$.TextAutosizerPageInfo, val.pageInfo);
  };
  function LocalMainFrameHost_FocusPage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_FocusPage_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_FocusPage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_FocusPage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_FocusPage_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_FocusPage_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_FocusPage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_FocusPage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_FocusPage_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_TakeFocus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_TakeFocus_Params.prototype.initDefaults_ = function() {
    this.reverse = false;
  };
  LocalMainFrameHost_TakeFocus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_TakeFocus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrameHost_TakeFocus_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_TakeFocus_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_TakeFocus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.reverse = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  LocalMainFrameHost_TakeFocus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_TakeFocus_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.reverse & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function LocalMainFrameHost_UpdateTargetURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_UpdateTargetURL_Params.prototype.initDefaults_ = function() {
    this.url = null;
  };
  LocalMainFrameHost_UpdateTargetURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_UpdateTargetURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_UpdateTargetURL_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_UpdateTargetURL_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_UpdateTargetURL_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_UpdateTargetURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  LocalMainFrameHost_UpdateTargetURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_UpdateTargetURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function LocalMainFrameHost_UpdateTargetURL_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_UpdateTargetURL_ResponseParams.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_UpdateTargetURL_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_UpdateTargetURL_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_UpdateTargetURL_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_UpdateTargetURL_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_UpdateTargetURL_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_UpdateTargetURL_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_UpdateTargetURL_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_RequestClose_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_RequestClose_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_RequestClose_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_RequestClose_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_RequestClose_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_RequestClose_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_RequestClose_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_RequestClose_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_RequestClose_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_ShowCreatedWindow_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_ShowCreatedWindow_Params.prototype.initDefaults_ = function() {
    this.openerFrameToken = null;
    this.disposition = 0;
    this.openedByUserGesture = false;
    this.windowFeatures = null;
  };
  LocalMainFrameHost_ShowCreatedWindow_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_ShowCreatedWindow_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_ShowCreatedWindow_Params.openerFrameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.LocalFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_ShowCreatedWindow_Params.disposition
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 8, window_open_disposition$.WindowOpenDisposition);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_ShowCreatedWindow_Params.windowFeatures
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, window_features$.WindowFeatures, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  LocalMainFrameHost_ShowCreatedWindow_Params.encodedSize = codec.kStructHeaderSize + 24;

  LocalMainFrameHost_ShowCreatedWindow_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_ShowCreatedWindow_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.openerFrameToken =
        decoder.decodeStructPointer(tokens$.LocalFrameToken);
    val.disposition =
        decoder.decodeStruct(new codec.Enum(window_open_disposition$.WindowOpenDisposition));
    packed = decoder.readUint8();
    val.openedByUserGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.windowFeatures =
        decoder.decodeStructPointer(window_features$.WindowFeatures);
    return val;
  };

  LocalMainFrameHost_ShowCreatedWindow_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_ShowCreatedWindow_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.LocalFrameToken, val.openerFrameToken);
    encoder.encodeStruct(codec.Int32, val.disposition);
    packed = 0;
    packed |= (val.openedByUserGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(window_features$.WindowFeatures, val.windowFeatures);
  };
  function LocalMainFrameHost_ShowCreatedWindow_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_ShowCreatedWindow_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_ShowCreatedWindow_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_ShowCreatedWindow_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_SetWindowRect_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_SetWindowRect_Params.prototype.initDefaults_ = function() {
    this.bounds = null;
  };
  LocalMainFrameHost_SetWindowRect_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_SetWindowRect_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate LocalMainFrameHost_SetWindowRect_Params.bounds
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_SetWindowRect_Params.encodedSize = codec.kStructHeaderSize + 8;

  LocalMainFrameHost_SetWindowRect_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_SetWindowRect_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.bounds =
        decoder.decodeStructPointer(geometry$.Rect);
    return val;
  };

  LocalMainFrameHost_SetWindowRect_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_SetWindowRect_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Rect, val.bounds);
  };
  function LocalMainFrameHost_SetWindowRect_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_SetWindowRect_ResponseParams.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_SetWindowRect_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_SetWindowRect_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_SetWindowRect_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_SetWindowRect_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_SetWindowRect_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_SetWindowRect_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_SetWindowRect_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function LocalMainFrameHost_DidAccessInitialMainDocument_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  LocalMainFrameHost_DidAccessInitialMainDocument_Params.prototype.initDefaults_ = function() {
  };
  LocalMainFrameHost_DidAccessInitialMainDocument_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  LocalMainFrameHost_DidAccessInitialMainDocument_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  LocalMainFrameHost_DidAccessInitialMainDocument_Params.encodedSize = codec.kStructHeaderSize + 0;

  LocalMainFrameHost_DidAccessInitialMainDocument_Params.decode = function(decoder) {
    var packed;
    var val = new LocalMainFrameHost_DidAccessInitialMainDocument_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  LocalMainFrameHost_DidAccessInitialMainDocument_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(LocalMainFrameHost_DidAccessInitialMainDocument_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kLocalFrameHost_EnterFullscreen_Name = 1876724351;
  var kLocalFrameHost_ExitFullscreen_Name = 2109686759;
  var kLocalFrameHost_FullscreenStateChanged_Name = 1553954097;
  var kLocalFrameHost_Maximize_Name = 1572922869;
  var kLocalFrameHost_Minimize_Name = 1800428752;
  var kLocalFrameHost_Restore_Name = 1953034256;
  var kLocalFrameHost_RegisterProtocolHandler_Name = 712564936;
  var kLocalFrameHost_UnregisterProtocolHandler_Name = 1986304420;
  var kLocalFrameHost_DidDisplayInsecureContent_Name = 553427527;
  var kLocalFrameHost_DidContainInsecureFormAction_Name = 318215800;
  var kLocalFrameHost_MainDocumentElementAvailable_Name = 1387848393;
  var kLocalFrameHost_SetNeedsOcclusionTracking_Name = 1991217600;
  var kLocalFrameHost_SetVirtualKeyboardMode_Name = 357797309;
  var kLocalFrameHost_VisibilityChanged_Name = 1764659077;
  var kLocalFrameHost_DidChangeThemeColor_Name = 1378583083;
  var kLocalFrameHost_DidChangeBackgroundColor_Name = 1102595397;
  var kLocalFrameHost_DidFailLoadWithError_Name = 1564017862;
  var kLocalFrameHost_DidFocusFrame_Name = 1219050450;
  var kLocalFrameHost_DidCallFocus_Name = 1498395253;
  var kLocalFrameHost_EnforceInsecureRequestPolicy_Name = 1125427155;
  var kLocalFrameHost_EnforceInsecureNavigationsSet_Name = 1019536378;
  var kLocalFrameHost_SuddenTerminationDisablerChanged_Name = 106417670;
  var kLocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Name = 1781556397;
  var kLocalFrameHost_ScrollRectToVisibleInParentFrame_Name = 1173319544;
  var kLocalFrameHost_BubbleLogicalScrollInParentFrame_Name = 1932787634;
  var kLocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Name = 641876439;
  var kLocalFrameHost_DidBlockNavigation_Name = 1731151252;
  var kLocalFrameHost_DidChangeLoadProgress_Name = 1421122882;
  var kLocalFrameHost_DidFinishLoad_Name = 399920709;
  var kLocalFrameHost_DispatchLoad_Name = 1773690011;
  var kLocalFrameHost_GoToEntryAtOffset_Name = 1218372990;
  var kLocalFrameHost_NavigateToNavigationApiKey_Name = 420488162;
  var kLocalFrameHost_NavigateEventHandlerPresenceChanged_Name = 1938611109;
  var kLocalFrameHost_UpdateTitle_Name = 1017487117;
  var kLocalFrameHost_UpdateUserActivationState_Name = 1236970660;
  var kLocalFrameHost_DidConsumeHistoryUserActivation_Name = 2123545548;
  var kLocalFrameHost_HandleAccessibilityFindInPageResult_Name = 995215459;
  var kLocalFrameHost_HandleAccessibilityFindInPageTermination_Name = 2072909309;
  var kLocalFrameHost_DocumentOnLoadCompleted_Name = 966547369;
  var kLocalFrameHost_ForwardResourceTimingToParent_Name = 1530855604;
  var kLocalFrameHost_DidDispatchDOMContentLoadedEvent_Name = 1097916779;
  var kLocalFrameHost_RunModalAlertDialog_Name = 448899396;
  var kLocalFrameHost_RunModalConfirmDialog_Name = 351364609;
  var kLocalFrameHost_RunModalPromptDialog_Name = 838026628;
  var kLocalFrameHost_RunBeforeUnloadConfirm_Name = 35601074;
  var kLocalFrameHost_UpdateFaviconURL_Name = 2098202446;
  var kLocalFrameHost_DownloadURL_Name = 1696267446;
  var kLocalFrameHost_FocusedElementChanged_Name = 1487716321;
  var kLocalFrameHost_TextSelectionChanged_Name = 1676457968;
  var kLocalFrameHost_ShowPopupMenu_Name = 2084332076;
  var kLocalFrameHost_CreateNewPopupWidget_Name = 1648897136;
  var kLocalFrameHost_ShowContextMenu_Name = 1178895700;
  var kLocalFrameHost_DidLoadResourceFromMemoryCache_Name = 151433156;
  var kLocalFrameHost_DidChangeFrameOwnerProperties_Name = 93760651;
  var kLocalFrameHost_DidChangeOpener_Name = 332049276;
  var kLocalFrameHost_DidChangeFramePolicy_Name = 979195820;
  var kLocalFrameHost_DidChangeIframeAttributes_Name = 961048380;
  var kLocalFrameHost_CapturePaintPreviewOfSubframe_Name = 1583926615;
  var kLocalFrameHost_SetCloseListener_Name = 112276082;
  var kLocalFrameHost_Detach_Name = 801219000;
  var kLocalFrameHost_GetKeepAliveHandleFactory_Name = 325668124;
  var kLocalFrameHost_DidAddMessageToConsole_Name = 717363861;
  var kLocalFrameHost_FrameSizeChanged_Name = 1518436745;
  var kLocalFrameHost_DidInferColorScheme_Name = 1553447916;
  var kLocalFrameHost_DidChangeSrcDoc_Name = 214569337;
  var kLocalFrameHost_ReceivedDelegatedCapability_Name = 1633216048;
  var kLocalFrameHost_SendFencedFrameReportingBeacon_Name = 1281242038;
  var kLocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Name = 463630571;
  var kLocalFrameHost_SendLegacyTechEvent_Name = 1097956472;
  var kLocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Name = 1168007742;
  var kLocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Name = 510754096;
  var kLocalFrameHost_CreatePortal_Name = 1439834292;
  var kLocalFrameHost_AdoptPortal_Name = 977276000;
  var kLocalFrameHost_CreateFencedFrame_Name = 773826489;
  var kLocalFrameHost_OnViewTransitionOptInChanged_Name = 1750084631;
  var kLocalFrameHost_StartDragging_Name = 726312764;

  function LocalFrameHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(LocalFrameHost,
                                                   handleOrPtrInfo);
  }

  function LocalFrameHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        LocalFrameHost, associatedInterfacePtrInfo);
  }

  LocalFrameHostAssociatedPtr.prototype =
      Object.create(LocalFrameHostPtr.prototype);
  LocalFrameHostAssociatedPtr.prototype.constructor =
      LocalFrameHostAssociatedPtr;

  function LocalFrameHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  LocalFrameHostPtr.prototype.enterFullscreen = function() {
    return LocalFrameHostProxy.prototype.enterFullscreen
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.enterFullscreen = function(options) {
    var params_ = new LocalFrameHost_EnterFullscreen_Params();
    params_.options = options;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrameHost_EnterFullscreen_Name,
          codec.align(LocalFrameHost_EnterFullscreen_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrameHost_EnterFullscreen_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_EnterFullscreen_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.exitFullscreen = function() {
    return LocalFrameHostProxy.prototype.exitFullscreen
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.exitFullscreen = function() {
    var params_ = new LocalFrameHost_ExitFullscreen_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_ExitFullscreen_Name,
        codec.align(LocalFrameHost_ExitFullscreen_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_ExitFullscreen_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.fullscreenStateChanged = function() {
    return LocalFrameHostProxy.prototype.fullscreenStateChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.fullscreenStateChanged = function(isFullscreen, options) {
    var params_ = new LocalFrameHost_FullscreenStateChanged_Params();
    params_.isFullscreen = isFullscreen;
    params_.options = options;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_FullscreenStateChanged_Name,
        codec.align(LocalFrameHost_FullscreenStateChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_FullscreenStateChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.maximize = function() {
    return LocalFrameHostProxy.prototype.maximize
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.maximize = function() {
    var params_ = new LocalFrameHost_Maximize_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_Maximize_Name,
        codec.align(LocalFrameHost_Maximize_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_Maximize_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.minimize = function() {
    return LocalFrameHostProxy.prototype.minimize
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.minimize = function() {
    var params_ = new LocalFrameHost_Minimize_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_Minimize_Name,
        codec.align(LocalFrameHost_Minimize_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_Minimize_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.restore = function() {
    return LocalFrameHostProxy.prototype.restore
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.restore = function() {
    var params_ = new LocalFrameHost_Restore_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_Restore_Name,
        codec.align(LocalFrameHost_Restore_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_Restore_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.registerProtocolHandler = function() {
    return LocalFrameHostProxy.prototype.registerProtocolHandler
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.registerProtocolHandler = function(scheme, url, userGesture) {
    var params_ = new LocalFrameHost_RegisterProtocolHandler_Params();
    params_.scheme = scheme;
    params_.url = url;
    params_.userGesture = userGesture;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_RegisterProtocolHandler_Name,
        codec.align(LocalFrameHost_RegisterProtocolHandler_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_RegisterProtocolHandler_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.unregisterProtocolHandler = function() {
    return LocalFrameHostProxy.prototype.unregisterProtocolHandler
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.unregisterProtocolHandler = function(scheme, url, userGesture) {
    var params_ = new LocalFrameHost_UnregisterProtocolHandler_Params();
    params_.scheme = scheme;
    params_.url = url;
    params_.userGesture = userGesture;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_UnregisterProtocolHandler_Name,
        codec.align(LocalFrameHost_UnregisterProtocolHandler_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_UnregisterProtocolHandler_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didDisplayInsecureContent = function() {
    return LocalFrameHostProxy.prototype.didDisplayInsecureContent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didDisplayInsecureContent = function() {
    var params_ = new LocalFrameHost_DidDisplayInsecureContent_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidDisplayInsecureContent_Name,
        codec.align(LocalFrameHost_DidDisplayInsecureContent_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidDisplayInsecureContent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didContainInsecureFormAction = function() {
    return LocalFrameHostProxy.prototype.didContainInsecureFormAction
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didContainInsecureFormAction = function() {
    var params_ = new LocalFrameHost_DidContainInsecureFormAction_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidContainInsecureFormAction_Name,
        codec.align(LocalFrameHost_DidContainInsecureFormAction_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidContainInsecureFormAction_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.mainDocumentElementAvailable = function() {
    return LocalFrameHostProxy.prototype.mainDocumentElementAvailable
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.mainDocumentElementAvailable = function(usesTemporaryZoomLevel) {
    var params_ = new LocalFrameHost_MainDocumentElementAvailable_Params();
    params_.usesTemporaryZoomLevel = usesTemporaryZoomLevel;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_MainDocumentElementAvailable_Name,
        codec.align(LocalFrameHost_MainDocumentElementAvailable_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_MainDocumentElementAvailable_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.setNeedsOcclusionTracking = function() {
    return LocalFrameHostProxy.prototype.setNeedsOcclusionTracking
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.setNeedsOcclusionTracking = function(needsTracking) {
    var params_ = new LocalFrameHost_SetNeedsOcclusionTracking_Params();
    params_.needsTracking = needsTracking;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SetNeedsOcclusionTracking_Name,
        codec.align(LocalFrameHost_SetNeedsOcclusionTracking_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SetNeedsOcclusionTracking_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.setVirtualKeyboardMode = function() {
    return LocalFrameHostProxy.prototype.setVirtualKeyboardMode
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.setVirtualKeyboardMode = function(type) {
    var params_ = new LocalFrameHost_SetVirtualKeyboardMode_Params();
    params_.type = type;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SetVirtualKeyboardMode_Name,
        codec.align(LocalFrameHost_SetVirtualKeyboardMode_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SetVirtualKeyboardMode_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.visibilityChanged = function() {
    return LocalFrameHostProxy.prototype.visibilityChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.visibilityChanged = function(visibility) {
    var params_ = new LocalFrameHost_VisibilityChanged_Params();
    params_.visibility = visibility;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_VisibilityChanged_Name,
        codec.align(LocalFrameHost_VisibilityChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_VisibilityChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeThemeColor = function() {
    return LocalFrameHostProxy.prototype.didChangeThemeColor
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeThemeColor = function(themeColor) {
    var params_ = new LocalFrameHost_DidChangeThemeColor_Params();
    params_.themeColor = themeColor;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeThemeColor_Name,
        codec.align(LocalFrameHost_DidChangeThemeColor_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeThemeColor_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeBackgroundColor = function() {
    return LocalFrameHostProxy.prototype.didChangeBackgroundColor
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeBackgroundColor = function(backgroundColor, colorAdjust) {
    var params_ = new LocalFrameHost_DidChangeBackgroundColor_Params();
    params_.backgroundColor = backgroundColor;
    params_.colorAdjust = colorAdjust;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeBackgroundColor_Name,
        codec.align(LocalFrameHost_DidChangeBackgroundColor_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeBackgroundColor_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didFailLoadWithError = function() {
    return LocalFrameHostProxy.prototype.didFailLoadWithError
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didFailLoadWithError = function(url, errorCode) {
    var params_ = new LocalFrameHost_DidFailLoadWithError_Params();
    params_.url = url;
    params_.errorCode = errorCode;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidFailLoadWithError_Name,
        codec.align(LocalFrameHost_DidFailLoadWithError_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidFailLoadWithError_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didFocusFrame = function() {
    return LocalFrameHostProxy.prototype.didFocusFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didFocusFrame = function() {
    var params_ = new LocalFrameHost_DidFocusFrame_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidFocusFrame_Name,
        codec.align(LocalFrameHost_DidFocusFrame_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidFocusFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didCallFocus = function() {
    return LocalFrameHostProxy.prototype.didCallFocus
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didCallFocus = function() {
    var params_ = new LocalFrameHost_DidCallFocus_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidCallFocus_Name,
        codec.align(LocalFrameHost_DidCallFocus_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidCallFocus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.enforceInsecureRequestPolicy = function() {
    return LocalFrameHostProxy.prototype.enforceInsecureRequestPolicy
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.enforceInsecureRequestPolicy = function(policyBitmap) {
    var params_ = new LocalFrameHost_EnforceInsecureRequestPolicy_Params();
    params_.policyBitmap = policyBitmap;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_EnforceInsecureRequestPolicy_Name,
        codec.align(LocalFrameHost_EnforceInsecureRequestPolicy_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_EnforceInsecureRequestPolicy_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.enforceInsecureNavigationsSet = function() {
    return LocalFrameHostProxy.prototype.enforceInsecureNavigationsSet
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.enforceInsecureNavigationsSet = function(set) {
    var params_ = new LocalFrameHost_EnforceInsecureNavigationsSet_Params();
    params_.set = set;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_EnforceInsecureNavigationsSet_Name,
        codec.align(LocalFrameHost_EnforceInsecureNavigationsSet_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_EnforceInsecureNavigationsSet_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.suddenTerminationDisablerChanged = function() {
    return LocalFrameHostProxy.prototype.suddenTerminationDisablerChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.suddenTerminationDisablerChanged = function(present, disablerType) {
    var params_ = new LocalFrameHost_SuddenTerminationDisablerChanged_Params();
    params_.present = present;
    params_.disablerType = disablerType;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SuddenTerminationDisablerChanged_Name,
        codec.align(LocalFrameHost_SuddenTerminationDisablerChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SuddenTerminationDisablerChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.hadStickyUserActivationBeforeNavigationChanged = function() {
    return LocalFrameHostProxy.prototype.hadStickyUserActivationBeforeNavigationChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.hadStickyUserActivationBeforeNavigationChanged = function(hasGesture) {
    var params_ = new LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params();
    params_.hasGesture = hasGesture;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Name,
        codec.align(LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.scrollRectToVisibleInParentFrame = function() {
    return LocalFrameHostProxy.prototype.scrollRectToVisibleInParentFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.scrollRectToVisibleInParentFrame = function(rectToScroll, params) {
    var params_ = new LocalFrameHost_ScrollRectToVisibleInParentFrame_Params();
    params_.rectToScroll = rectToScroll;
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_ScrollRectToVisibleInParentFrame_Name,
        codec.align(LocalFrameHost_ScrollRectToVisibleInParentFrame_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_ScrollRectToVisibleInParentFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.bubbleLogicalScrollInParentFrame = function() {
    return LocalFrameHostProxy.prototype.bubbleLogicalScrollInParentFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.bubbleLogicalScrollInParentFrame = function(direction, granularity) {
    var params_ = new LocalFrameHost_BubbleLogicalScrollInParentFrame_Params();
    params_.direction = direction;
    params_.granularity = granularity;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_BubbleLogicalScrollInParentFrame_Name,
        codec.align(LocalFrameHost_BubbleLogicalScrollInParentFrame_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_BubbleLogicalScrollInParentFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.startLoadingForAsyncNavigationApiCommit = function() {
    return LocalFrameHostProxy.prototype.startLoadingForAsyncNavigationApiCommit
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.startLoadingForAsyncNavigationApiCommit = function() {
    var params_ = new LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Name,
        codec.align(LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didBlockNavigation = function() {
    return LocalFrameHostProxy.prototype.didBlockNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didBlockNavigation = function(blockedUrl, initiatorUrl, reason) {
    var params_ = new LocalFrameHost_DidBlockNavigation_Params();
    params_.blockedUrl = blockedUrl;
    params_.initiatorUrl = initiatorUrl;
    params_.reason = reason;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidBlockNavigation_Name,
        codec.align(LocalFrameHost_DidBlockNavigation_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidBlockNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeLoadProgress = function() {
    return LocalFrameHostProxy.prototype.didChangeLoadProgress
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeLoadProgress = function(loadProgress) {
    var params_ = new LocalFrameHost_DidChangeLoadProgress_Params();
    params_.loadProgress = loadProgress;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeLoadProgress_Name,
        codec.align(LocalFrameHost_DidChangeLoadProgress_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeLoadProgress_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didFinishLoad = function() {
    return LocalFrameHostProxy.prototype.didFinishLoad
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didFinishLoad = function(validatedUrl) {
    var params_ = new LocalFrameHost_DidFinishLoad_Params();
    params_.validatedUrl = validatedUrl;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidFinishLoad_Name,
        codec.align(LocalFrameHost_DidFinishLoad_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidFinishLoad_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.dispatchLoad = function() {
    return LocalFrameHostProxy.prototype.dispatchLoad
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.dispatchLoad = function() {
    var params_ = new LocalFrameHost_DispatchLoad_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DispatchLoad_Name,
        codec.align(LocalFrameHost_DispatchLoad_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DispatchLoad_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.goToEntryAtOffset = function() {
    return LocalFrameHostProxy.prototype.goToEntryAtOffset
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.goToEntryAtOffset = function(offset, hasUserGesture, softNavigationHeuristicsTaskId) {
    var params_ = new LocalFrameHost_GoToEntryAtOffset_Params();
    params_.offset = offset;
    params_.hasUserGesture = hasUserGesture;
    params_.softNavigationHeuristicsTaskId = softNavigationHeuristicsTaskId;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_GoToEntryAtOffset_Name,
        codec.align(LocalFrameHost_GoToEntryAtOffset_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_GoToEntryAtOffset_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.navigateToNavigationApiKey = function() {
    return LocalFrameHostProxy.prototype.navigateToNavigationApiKey
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.navigateToNavigationApiKey = function(key, hasUserGesture, softNavigationHeuristicsTaskId) {
    var params_ = new LocalFrameHost_NavigateToNavigationApiKey_Params();
    params_.key = key;
    params_.hasUserGesture = hasUserGesture;
    params_.softNavigationHeuristicsTaskId = softNavigationHeuristicsTaskId;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_NavigateToNavigationApiKey_Name,
        codec.align(LocalFrameHost_NavigateToNavigationApiKey_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_NavigateToNavigationApiKey_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.navigateEventHandlerPresenceChanged = function() {
    return LocalFrameHostProxy.prototype.navigateEventHandlerPresenceChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.navigateEventHandlerPresenceChanged = function(present) {
    var params_ = new LocalFrameHost_NavigateEventHandlerPresenceChanged_Params();
    params_.present = present;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_NavigateEventHandlerPresenceChanged_Name,
        codec.align(LocalFrameHost_NavigateEventHandlerPresenceChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_NavigateEventHandlerPresenceChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.updateTitle = function() {
    return LocalFrameHostProxy.prototype.updateTitle
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.updateTitle = function(title, titleDirection) {
    var params_ = new LocalFrameHost_UpdateTitle_Params();
    params_.title = title;
    params_.titleDirection = titleDirection;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_UpdateTitle_Name,
        codec.align(LocalFrameHost_UpdateTitle_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_UpdateTitle_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.updateUserActivationState = function() {
    return LocalFrameHostProxy.prototype.updateUserActivationState
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.updateUserActivationState = function(updateType, notificationType) {
    var params_ = new LocalFrameHost_UpdateUserActivationState_Params();
    params_.updateType = updateType;
    params_.notificationType = notificationType;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_UpdateUserActivationState_Name,
        codec.align(LocalFrameHost_UpdateUserActivationState_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_UpdateUserActivationState_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didConsumeHistoryUserActivation = function() {
    return LocalFrameHostProxy.prototype.didConsumeHistoryUserActivation
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didConsumeHistoryUserActivation = function() {
    var params_ = new LocalFrameHost_DidConsumeHistoryUserActivation_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidConsumeHistoryUserActivation_Name,
        codec.align(LocalFrameHost_DidConsumeHistoryUserActivation_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidConsumeHistoryUserActivation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.handleAccessibilityFindInPageResult = function() {
    return LocalFrameHostProxy.prototype.handleAccessibilityFindInPageResult
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.handleAccessibilityFindInPageResult = function(params) {
    var params_ = new LocalFrameHost_HandleAccessibilityFindInPageResult_Params();
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_HandleAccessibilityFindInPageResult_Name,
        codec.align(LocalFrameHost_HandleAccessibilityFindInPageResult_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_HandleAccessibilityFindInPageResult_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.handleAccessibilityFindInPageTermination = function() {
    return LocalFrameHostProxy.prototype.handleAccessibilityFindInPageTermination
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.handleAccessibilityFindInPageTermination = function() {
    var params_ = new LocalFrameHost_HandleAccessibilityFindInPageTermination_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_HandleAccessibilityFindInPageTermination_Name,
        codec.align(LocalFrameHost_HandleAccessibilityFindInPageTermination_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_HandleAccessibilityFindInPageTermination_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.documentOnLoadCompleted = function() {
    return LocalFrameHostProxy.prototype.documentOnLoadCompleted
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.documentOnLoadCompleted = function() {
    var params_ = new LocalFrameHost_DocumentOnLoadCompleted_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DocumentOnLoadCompleted_Name,
        codec.align(LocalFrameHost_DocumentOnLoadCompleted_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DocumentOnLoadCompleted_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.forwardResourceTimingToParent = function() {
    return LocalFrameHostProxy.prototype.forwardResourceTimingToParent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.forwardResourceTimingToParent = function(timing) {
    var params_ = new LocalFrameHost_ForwardResourceTimingToParent_Params();
    params_.timing = timing;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_ForwardResourceTimingToParent_Name,
        codec.align(LocalFrameHost_ForwardResourceTimingToParent_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_ForwardResourceTimingToParent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didDispatchDOMContentLoadedEvent = function() {
    return LocalFrameHostProxy.prototype.didDispatchDOMContentLoadedEvent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didDispatchDOMContentLoadedEvent = function() {
    var params_ = new LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidDispatchDOMContentLoadedEvent_Name,
        codec.align(LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.runModalAlertDialog = function() {
    return LocalFrameHostProxy.prototype.runModalAlertDialog
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.runModalAlertDialog = function(alertMessage, disableThirdPartySubframeSuppresion) {
    var params_ = new LocalFrameHost_RunModalAlertDialog_Params();
    params_.alertMessage = alertMessage;
    params_.disableThirdPartySubframeSuppresion = disableThirdPartySubframeSuppresion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrameHost_RunModalAlertDialog_Name,
          codec.align(LocalFrameHost_RunModalAlertDialog_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrameHost_RunModalAlertDialog_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_RunModalAlertDialog_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.runModalConfirmDialog = function() {
    return LocalFrameHostProxy.prototype.runModalConfirmDialog
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.runModalConfirmDialog = function(alertMessage, disableThirdPartySubframeSuppresion) {
    var params_ = new LocalFrameHost_RunModalConfirmDialog_Params();
    params_.alertMessage = alertMessage;
    params_.disableThirdPartySubframeSuppresion = disableThirdPartySubframeSuppresion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrameHost_RunModalConfirmDialog_Name,
          codec.align(LocalFrameHost_RunModalConfirmDialog_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrameHost_RunModalConfirmDialog_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_RunModalConfirmDialog_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.runModalPromptDialog = function() {
    return LocalFrameHostProxy.prototype.runModalPromptDialog
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.runModalPromptDialog = function(alertMessage, defaultValue, disableThirdPartySubframeSuppresion) {
    var params_ = new LocalFrameHost_RunModalPromptDialog_Params();
    params_.alertMessage = alertMessage;
    params_.defaultValue = defaultValue;
    params_.disableThirdPartySubframeSuppresion = disableThirdPartySubframeSuppresion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrameHost_RunModalPromptDialog_Name,
          codec.align(LocalFrameHost_RunModalPromptDialog_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrameHost_RunModalPromptDialog_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_RunModalPromptDialog_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.runBeforeUnloadConfirm = function() {
    return LocalFrameHostProxy.prototype.runBeforeUnloadConfirm
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.runBeforeUnloadConfirm = function(isReload) {
    var params_ = new LocalFrameHost_RunBeforeUnloadConfirm_Params();
    params_.isReload = isReload;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrameHost_RunBeforeUnloadConfirm_Name,
          codec.align(LocalFrameHost_RunBeforeUnloadConfirm_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrameHost_RunBeforeUnloadConfirm_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.updateFaviconURL = function() {
    return LocalFrameHostProxy.prototype.updateFaviconURL
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.updateFaviconURL = function(faviconUrls) {
    var params_ = new LocalFrameHost_UpdateFaviconURL_Params();
    params_.faviconUrls = faviconUrls;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_UpdateFaviconURL_Name,
        codec.align(LocalFrameHost_UpdateFaviconURL_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_UpdateFaviconURL_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.downloadURL = function() {
    return LocalFrameHostProxy.prototype.downloadURL
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.downloadURL = function(params) {
    var params_ = new LocalFrameHost_DownloadURL_Params();
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DownloadURL_Name,
        codec.align(LocalFrameHost_DownloadURL_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DownloadURL_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.focusedElementChanged = function() {
    return LocalFrameHostProxy.prototype.focusedElementChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.focusedElementChanged = function(isEditableElement, isRichlyEditableElement, boundsInFrameWidget, focusType) {
    var params_ = new LocalFrameHost_FocusedElementChanged_Params();
    params_.isEditableElement = isEditableElement;
    params_.isRichlyEditableElement = isRichlyEditableElement;
    params_.boundsInFrameWidget = boundsInFrameWidget;
    params_.focusType = focusType;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_FocusedElementChanged_Name,
        codec.align(LocalFrameHost_FocusedElementChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_FocusedElementChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.textSelectionChanged = function() {
    return LocalFrameHostProxy.prototype.textSelectionChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.textSelectionChanged = function(text, offset, range) {
    var params_ = new LocalFrameHost_TextSelectionChanged_Params();
    params_.text = text;
    params_.offset = offset;
    params_.range = range;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_TextSelectionChanged_Name,
        codec.align(LocalFrameHost_TextSelectionChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_TextSelectionChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.showPopupMenu = function() {
    return LocalFrameHostProxy.prototype.showPopupMenu
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.showPopupMenu = function(popupClient, bounds, itemHeight, fontSize, selectedItem, menuItems, rightAligned, allowMultipleSelection) {
    var params_ = new LocalFrameHost_ShowPopupMenu_Params();
    params_.popupClient = popupClient;
    params_.bounds = bounds;
    params_.itemHeight = itemHeight;
    params_.fontSize = fontSize;
    params_.selectedItem = selectedItem;
    params_.menuItems = menuItems;
    params_.rightAligned = rightAligned;
    params_.allowMultipleSelection = allowMultipleSelection;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_ShowPopupMenu_Name,
        codec.align(LocalFrameHost_ShowPopupMenu_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_ShowPopupMenu_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.createNewPopupWidget = function() {
    return LocalFrameHostProxy.prototype.createNewPopupWidget
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.createNewPopupWidget = function(popupHost, blinkWidgetHost, blinkWidget) {
    var params_ = new LocalFrameHost_CreateNewPopupWidget_Params();
    params_.popupHost = popupHost;
    params_.blinkWidgetHost = blinkWidgetHost;
    params_.blinkWidget = blinkWidget;
    var builder = new codec.MessageV2Builder(
        kLocalFrameHost_CreateNewPopupWidget_Name,
        codec.align(LocalFrameHost_CreateNewPopupWidget_Params.encodedSize));
    builder.setPayload(LocalFrameHost_CreateNewPopupWidget_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.showContextMenu = function() {
    return LocalFrameHostProxy.prototype.showContextMenu
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.showContextMenu = function(client, params) {
    var params_ = new LocalFrameHost_ShowContextMenu_Params();
    params_.client = client;
    params_.params = params;
    var builder = new codec.MessageV2Builder(
        kLocalFrameHost_ShowContextMenu_Name,
        codec.align(LocalFrameHost_ShowContextMenu_Params.encodedSize));
    builder.setPayload(LocalFrameHost_ShowContextMenu_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didLoadResourceFromMemoryCache = function() {
    return LocalFrameHostProxy.prototype.didLoadResourceFromMemoryCache
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didLoadResourceFromMemoryCache = function(url, httpMethod, mimeType, requestDestination, includeCredentials) {
    var params_ = new LocalFrameHost_DidLoadResourceFromMemoryCache_Params();
    params_.url = url;
    params_.httpMethod = httpMethod;
    params_.mimeType = mimeType;
    params_.requestDestination = requestDestination;
    params_.includeCredentials = includeCredentials;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidLoadResourceFromMemoryCache_Name,
        codec.align(LocalFrameHost_DidLoadResourceFromMemoryCache_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidLoadResourceFromMemoryCache_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeFrameOwnerProperties = function() {
    return LocalFrameHostProxy.prototype.didChangeFrameOwnerProperties
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeFrameOwnerProperties = function(childFrameToken, frameOwnerProperties) {
    var params_ = new LocalFrameHost_DidChangeFrameOwnerProperties_Params();
    params_.childFrameToken = childFrameToken;
    params_.frameOwnerProperties = frameOwnerProperties;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeFrameOwnerProperties_Name,
        codec.align(LocalFrameHost_DidChangeFrameOwnerProperties_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeFrameOwnerProperties_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeOpener = function() {
    return LocalFrameHostProxy.prototype.didChangeOpener
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeOpener = function(openerFrame) {
    var params_ = new LocalFrameHost_DidChangeOpener_Params();
    params_.openerFrame = openerFrame;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeOpener_Name,
        codec.align(LocalFrameHost_DidChangeOpener_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeOpener_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeFramePolicy = function() {
    return LocalFrameHostProxy.prototype.didChangeFramePolicy
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeFramePolicy = function(childFrameToken, framePolicy) {
    var params_ = new LocalFrameHost_DidChangeFramePolicy_Params();
    params_.childFrameToken = childFrameToken;
    params_.framePolicy = framePolicy;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeFramePolicy_Name,
        codec.align(LocalFrameHost_DidChangeFramePolicy_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeFramePolicy_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeIframeAttributes = function() {
    return LocalFrameHostProxy.prototype.didChangeIframeAttributes
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeIframeAttributes = function(childFrameToken, attributes) {
    var params_ = new LocalFrameHost_DidChangeIframeAttributes_Params();
    params_.childFrameToken = childFrameToken;
    params_.attributes = attributes;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeIframeAttributes_Name,
        codec.align(LocalFrameHost_DidChangeIframeAttributes_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeIframeAttributes_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.capturePaintPreviewOfSubframe = function() {
    return LocalFrameHostProxy.prototype.capturePaintPreviewOfSubframe
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.capturePaintPreviewOfSubframe = function(clipRect, guid) {
    var params_ = new LocalFrameHost_CapturePaintPreviewOfSubframe_Params();
    params_.clipRect = clipRect;
    params_.guid = guid;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_CapturePaintPreviewOfSubframe_Name,
        codec.align(LocalFrameHost_CapturePaintPreviewOfSubframe_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_CapturePaintPreviewOfSubframe_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.setCloseListener = function() {
    return LocalFrameHostProxy.prototype.setCloseListener
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.setCloseListener = function(listener) {
    var params_ = new LocalFrameHost_SetCloseListener_Params();
    params_.listener = listener;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SetCloseListener_Name,
        codec.align(LocalFrameHost_SetCloseListener_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SetCloseListener_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.detach = function() {
    return LocalFrameHostProxy.prototype.detach
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.detach = function() {
    var params_ = new LocalFrameHost_Detach_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_Detach_Name,
        codec.align(LocalFrameHost_Detach_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_Detach_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.getKeepAliveHandleFactory = function() {
    return LocalFrameHostProxy.prototype.getKeepAliveHandleFactory
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.getKeepAliveHandleFactory = function(factory) {
    var params_ = new LocalFrameHost_GetKeepAliveHandleFactory_Params();
    params_.factory = factory;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_GetKeepAliveHandleFactory_Name,
        codec.align(LocalFrameHost_GetKeepAliveHandleFactory_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_GetKeepAliveHandleFactory_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didAddMessageToConsole = function() {
    return LocalFrameHostProxy.prototype.didAddMessageToConsole
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didAddMessageToConsole = function(logLevel, msg, lineNumber, sourceId, untrustedStackTrace) {
    var params_ = new LocalFrameHost_DidAddMessageToConsole_Params();
    params_.logLevel = logLevel;
    params_.msg = msg;
    params_.lineNumber = lineNumber;
    params_.sourceId = sourceId;
    params_.untrustedStackTrace = untrustedStackTrace;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidAddMessageToConsole_Name,
        codec.align(LocalFrameHost_DidAddMessageToConsole_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidAddMessageToConsole_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.frameSizeChanged = function() {
    return LocalFrameHostProxy.prototype.frameSizeChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.frameSizeChanged = function(size) {
    var params_ = new LocalFrameHost_FrameSizeChanged_Params();
    params_.size = size;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_FrameSizeChanged_Name,
        codec.align(LocalFrameHost_FrameSizeChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_FrameSizeChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didInferColorScheme = function() {
    return LocalFrameHostProxy.prototype.didInferColorScheme
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didInferColorScheme = function(colorScheme) {
    var params_ = new LocalFrameHost_DidInferColorScheme_Params();
    params_.colorScheme = colorScheme;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidInferColorScheme_Name,
        codec.align(LocalFrameHost_DidInferColorScheme_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidInferColorScheme_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.didChangeSrcDoc = function() {
    return LocalFrameHostProxy.prototype.didChangeSrcDoc
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.didChangeSrcDoc = function(childFrameToken, srcdocValue) {
    var params_ = new LocalFrameHost_DidChangeSrcDoc_Params();
    params_.childFrameToken = childFrameToken;
    params_.srcdocValue = srcdocValue;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_DidChangeSrcDoc_Name,
        codec.align(LocalFrameHost_DidChangeSrcDoc_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_DidChangeSrcDoc_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.receivedDelegatedCapability = function() {
    return LocalFrameHostProxy.prototype.receivedDelegatedCapability
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.receivedDelegatedCapability = function(delegatedCapability) {
    var params_ = new LocalFrameHost_ReceivedDelegatedCapability_Params();
    params_.delegatedCapability = delegatedCapability;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_ReceivedDelegatedCapability_Name,
        codec.align(LocalFrameHost_ReceivedDelegatedCapability_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_ReceivedDelegatedCapability_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.sendFencedFrameReportingBeacon = function() {
    return LocalFrameHostProxy.prototype.sendFencedFrameReportingBeacon
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.sendFencedFrameReportingBeacon = function(eventData, eventType, destinations, attributionReportingRuntimeFeatures) {
    var params_ = new LocalFrameHost_SendFencedFrameReportingBeacon_Params();
    params_.eventData = eventData;
    params_.eventType = eventType;
    params_.destinations = destinations;
    params_.attributionReportingRuntimeFeatures = attributionReportingRuntimeFeatures;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SendFencedFrameReportingBeacon_Name,
        codec.align(LocalFrameHost_SendFencedFrameReportingBeacon_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SendFencedFrameReportingBeacon_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.sendFencedFrameReportingBeaconToCustomURL = function() {
    return LocalFrameHostProxy.prototype.sendFencedFrameReportingBeaconToCustomURL
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.sendFencedFrameReportingBeaconToCustomURL = function(destinationUrl, attributionReportingRuntimeFeatures) {
    var params_ = new LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params();
    params_.destinationUrl = destinationUrl;
    params_.attributionReportingRuntimeFeatures = attributionReportingRuntimeFeatures;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Name,
        codec.align(LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.sendLegacyTechEvent = function() {
    return LocalFrameHostProxy.prototype.sendLegacyTechEvent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.sendLegacyTechEvent = function(type, codeLocation) {
    var params_ = new LocalFrameHost_SendLegacyTechEvent_Params();
    params_.type = type;
    params_.codeLocation = codeLocation;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SendLegacyTechEvent_Name,
        codec.align(LocalFrameHost_SendLegacyTechEvent_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SendLegacyTechEvent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.setFencedFrameAutomaticBeaconReportEventData = function() {
    return LocalFrameHostProxy.prototype.setFencedFrameAutomaticBeaconReportEventData
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.setFencedFrameAutomaticBeaconReportEventData = function(eventData, destinations, attributionReportingRuntimeFeatures, once) {
    var params_ = new LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params();
    params_.eventData = eventData;
    params_.destinations = destinations;
    params_.attributionReportingRuntimeFeatures = attributionReportingRuntimeFeatures;
    params_.once = once;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Name,
        codec.align(LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.sendPrivateAggregationRequestsForFencedFrameEvent = function() {
    return LocalFrameHostProxy.prototype.sendPrivateAggregationRequestsForFencedFrameEvent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.sendPrivateAggregationRequestsForFencedFrameEvent = function(eventType) {
    var params_ = new LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params();
    params_.eventType = eventType;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Name,
        codec.align(LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.createPortal = function() {
    return LocalFrameHostProxy.prototype.createPortal
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.createPortal = function(portal, client, remoteFrameInterfaces) {
    var params_ = new LocalFrameHost_CreatePortal_Params();
    params_.portal = portal;
    params_.client = client;
    params_.remoteFrameInterfaces = remoteFrameInterfaces;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV2Builder(
          kLocalFrameHost_CreatePortal_Name,
          codec.align(LocalFrameHost_CreatePortal_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.setPayload(LocalFrameHost_CreatePortal_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_CreatePortal_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.adoptPortal = function() {
    return LocalFrameHostProxy.prototype.adoptPortal
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.adoptPortal = function(portalToken, remoteFrameInterfaces) {
    var params_ = new LocalFrameHost_AdoptPortal_Params();
    params_.portalToken = portalToken;
    params_.remoteFrameInterfaces = remoteFrameInterfaces;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV2Builder(
          kLocalFrameHost_AdoptPortal_Name,
          codec.align(LocalFrameHost_AdoptPortal_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.setPayload(LocalFrameHost_AdoptPortal_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrameHost_AdoptPortal_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFrameHostPtr.prototype.createFencedFrame = function() {
    return LocalFrameHostProxy.prototype.createFencedFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.createFencedFrame = function(fencedFrame, remoteFrameInterfaces, frameToken, devtoolsFrameToken) {
    var params_ = new LocalFrameHost_CreateFencedFrame_Params();
    params_.fencedFrame = fencedFrame;
    params_.remoteFrameInterfaces = remoteFrameInterfaces;
    params_.frameToken = frameToken;
    params_.devtoolsFrameToken = devtoolsFrameToken;
    var builder = new codec.MessageV2Builder(
        kLocalFrameHost_CreateFencedFrame_Name,
        codec.align(LocalFrameHost_CreateFencedFrame_Params.encodedSize));
    builder.setPayload(LocalFrameHost_CreateFencedFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.onViewTransitionOptInChanged = function() {
    return LocalFrameHostProxy.prototype.onViewTransitionOptInChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.onViewTransitionOptInChanged = function(viewTransitionOptIn) {
    var params_ = new LocalFrameHost_OnViewTransitionOptInChanged_Params();
    params_.viewTransitionOptIn = viewTransitionOptIn;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_OnViewTransitionOptInChanged_Name,
        codec.align(LocalFrameHost_OnViewTransitionOptInChanged_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_OnViewTransitionOptInChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFrameHostPtr.prototype.startDragging = function() {
    return LocalFrameHostProxy.prototype.startDragging
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameHostProxy.prototype.startDragging = function(dragData, operationsAllowed, image, cursorOffsetInDip, dragObjRectInDip, eventInfo) {
    var params_ = new LocalFrameHost_StartDragging_Params();
    params_.dragData = dragData;
    params_.operationsAllowed = operationsAllowed;
    params_.image = image;
    params_.cursorOffsetInDip = cursorOffsetInDip;
    params_.dragObjRectInDip = dragObjRectInDip;
    params_.eventInfo = eventInfo;
    var builder = new codec.MessageV0Builder(
        kLocalFrameHost_StartDragging_Name,
        codec.align(LocalFrameHost_StartDragging_Params.encodedSize));
    builder.encodeStruct(LocalFrameHost_StartDragging_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function LocalFrameHostStub(delegate) {
    this.delegate_ = delegate;
  }
  LocalFrameHostStub.prototype.enterFullscreen = function(options) {
    return this.delegate_ && this.delegate_.enterFullscreen && this.delegate_.enterFullscreen(options);
  }
  LocalFrameHostStub.prototype.exitFullscreen = function() {
    return this.delegate_ && this.delegate_.exitFullscreen && this.delegate_.exitFullscreen();
  }
  LocalFrameHostStub.prototype.fullscreenStateChanged = function(isFullscreen, options) {
    return this.delegate_ && this.delegate_.fullscreenStateChanged && this.delegate_.fullscreenStateChanged(isFullscreen, options);
  }
  LocalFrameHostStub.prototype.maximize = function() {
    return this.delegate_ && this.delegate_.maximize && this.delegate_.maximize();
  }
  LocalFrameHostStub.prototype.minimize = function() {
    return this.delegate_ && this.delegate_.minimize && this.delegate_.minimize();
  }
  LocalFrameHostStub.prototype.restore = function() {
    return this.delegate_ && this.delegate_.restore && this.delegate_.restore();
  }
  LocalFrameHostStub.prototype.registerProtocolHandler = function(scheme, url, userGesture) {
    return this.delegate_ && this.delegate_.registerProtocolHandler && this.delegate_.registerProtocolHandler(scheme, url, userGesture);
  }
  LocalFrameHostStub.prototype.unregisterProtocolHandler = function(scheme, url, userGesture) {
    return this.delegate_ && this.delegate_.unregisterProtocolHandler && this.delegate_.unregisterProtocolHandler(scheme, url, userGesture);
  }
  LocalFrameHostStub.prototype.didDisplayInsecureContent = function() {
    return this.delegate_ && this.delegate_.didDisplayInsecureContent && this.delegate_.didDisplayInsecureContent();
  }
  LocalFrameHostStub.prototype.didContainInsecureFormAction = function() {
    return this.delegate_ && this.delegate_.didContainInsecureFormAction && this.delegate_.didContainInsecureFormAction();
  }
  LocalFrameHostStub.prototype.mainDocumentElementAvailable = function(usesTemporaryZoomLevel) {
    return this.delegate_ && this.delegate_.mainDocumentElementAvailable && this.delegate_.mainDocumentElementAvailable(usesTemporaryZoomLevel);
  }
  LocalFrameHostStub.prototype.setNeedsOcclusionTracking = function(needsTracking) {
    return this.delegate_ && this.delegate_.setNeedsOcclusionTracking && this.delegate_.setNeedsOcclusionTracking(needsTracking);
  }
  LocalFrameHostStub.prototype.setVirtualKeyboardMode = function(type) {
    return this.delegate_ && this.delegate_.setVirtualKeyboardMode && this.delegate_.setVirtualKeyboardMode(type);
  }
  LocalFrameHostStub.prototype.visibilityChanged = function(visibility) {
    return this.delegate_ && this.delegate_.visibilityChanged && this.delegate_.visibilityChanged(visibility);
  }
  LocalFrameHostStub.prototype.didChangeThemeColor = function(themeColor) {
    return this.delegate_ && this.delegate_.didChangeThemeColor && this.delegate_.didChangeThemeColor(themeColor);
  }
  LocalFrameHostStub.prototype.didChangeBackgroundColor = function(backgroundColor, colorAdjust) {
    return this.delegate_ && this.delegate_.didChangeBackgroundColor && this.delegate_.didChangeBackgroundColor(backgroundColor, colorAdjust);
  }
  LocalFrameHostStub.prototype.didFailLoadWithError = function(url, errorCode) {
    return this.delegate_ && this.delegate_.didFailLoadWithError && this.delegate_.didFailLoadWithError(url, errorCode);
  }
  LocalFrameHostStub.prototype.didFocusFrame = function() {
    return this.delegate_ && this.delegate_.didFocusFrame && this.delegate_.didFocusFrame();
  }
  LocalFrameHostStub.prototype.didCallFocus = function() {
    return this.delegate_ && this.delegate_.didCallFocus && this.delegate_.didCallFocus();
  }
  LocalFrameHostStub.prototype.enforceInsecureRequestPolicy = function(policyBitmap) {
    return this.delegate_ && this.delegate_.enforceInsecureRequestPolicy && this.delegate_.enforceInsecureRequestPolicy(policyBitmap);
  }
  LocalFrameHostStub.prototype.enforceInsecureNavigationsSet = function(set) {
    return this.delegate_ && this.delegate_.enforceInsecureNavigationsSet && this.delegate_.enforceInsecureNavigationsSet(set);
  }
  LocalFrameHostStub.prototype.suddenTerminationDisablerChanged = function(present, disablerType) {
    return this.delegate_ && this.delegate_.suddenTerminationDisablerChanged && this.delegate_.suddenTerminationDisablerChanged(present, disablerType);
  }
  LocalFrameHostStub.prototype.hadStickyUserActivationBeforeNavigationChanged = function(hasGesture) {
    return this.delegate_ && this.delegate_.hadStickyUserActivationBeforeNavigationChanged && this.delegate_.hadStickyUserActivationBeforeNavigationChanged(hasGesture);
  }
  LocalFrameHostStub.prototype.scrollRectToVisibleInParentFrame = function(rectToScroll, params) {
    return this.delegate_ && this.delegate_.scrollRectToVisibleInParentFrame && this.delegate_.scrollRectToVisibleInParentFrame(rectToScroll, params);
  }
  LocalFrameHostStub.prototype.bubbleLogicalScrollInParentFrame = function(direction, granularity) {
    return this.delegate_ && this.delegate_.bubbleLogicalScrollInParentFrame && this.delegate_.bubbleLogicalScrollInParentFrame(direction, granularity);
  }
  LocalFrameHostStub.prototype.startLoadingForAsyncNavigationApiCommit = function() {
    return this.delegate_ && this.delegate_.startLoadingForAsyncNavigationApiCommit && this.delegate_.startLoadingForAsyncNavigationApiCommit();
  }
  LocalFrameHostStub.prototype.didBlockNavigation = function(blockedUrl, initiatorUrl, reason) {
    return this.delegate_ && this.delegate_.didBlockNavigation && this.delegate_.didBlockNavigation(blockedUrl, initiatorUrl, reason);
  }
  LocalFrameHostStub.prototype.didChangeLoadProgress = function(loadProgress) {
    return this.delegate_ && this.delegate_.didChangeLoadProgress && this.delegate_.didChangeLoadProgress(loadProgress);
  }
  LocalFrameHostStub.prototype.didFinishLoad = function(validatedUrl) {
    return this.delegate_ && this.delegate_.didFinishLoad && this.delegate_.didFinishLoad(validatedUrl);
  }
  LocalFrameHostStub.prototype.dispatchLoad = function() {
    return this.delegate_ && this.delegate_.dispatchLoad && this.delegate_.dispatchLoad();
  }
  LocalFrameHostStub.prototype.goToEntryAtOffset = function(offset, hasUserGesture, softNavigationHeuristicsTaskId) {
    return this.delegate_ && this.delegate_.goToEntryAtOffset && this.delegate_.goToEntryAtOffset(offset, hasUserGesture, softNavigationHeuristicsTaskId);
  }
  LocalFrameHostStub.prototype.navigateToNavigationApiKey = function(key, hasUserGesture, softNavigationHeuristicsTaskId) {
    return this.delegate_ && this.delegate_.navigateToNavigationApiKey && this.delegate_.navigateToNavigationApiKey(key, hasUserGesture, softNavigationHeuristicsTaskId);
  }
  LocalFrameHostStub.prototype.navigateEventHandlerPresenceChanged = function(present) {
    return this.delegate_ && this.delegate_.navigateEventHandlerPresenceChanged && this.delegate_.navigateEventHandlerPresenceChanged(present);
  }
  LocalFrameHostStub.prototype.updateTitle = function(title, titleDirection) {
    return this.delegate_ && this.delegate_.updateTitle && this.delegate_.updateTitle(title, titleDirection);
  }
  LocalFrameHostStub.prototype.updateUserActivationState = function(updateType, notificationType) {
    return this.delegate_ && this.delegate_.updateUserActivationState && this.delegate_.updateUserActivationState(updateType, notificationType);
  }
  LocalFrameHostStub.prototype.didConsumeHistoryUserActivation = function() {
    return this.delegate_ && this.delegate_.didConsumeHistoryUserActivation && this.delegate_.didConsumeHistoryUserActivation();
  }
  LocalFrameHostStub.prototype.handleAccessibilityFindInPageResult = function(params) {
    return this.delegate_ && this.delegate_.handleAccessibilityFindInPageResult && this.delegate_.handleAccessibilityFindInPageResult(params);
  }
  LocalFrameHostStub.prototype.handleAccessibilityFindInPageTermination = function() {
    return this.delegate_ && this.delegate_.handleAccessibilityFindInPageTermination && this.delegate_.handleAccessibilityFindInPageTermination();
  }
  LocalFrameHostStub.prototype.documentOnLoadCompleted = function() {
    return this.delegate_ && this.delegate_.documentOnLoadCompleted && this.delegate_.documentOnLoadCompleted();
  }
  LocalFrameHostStub.prototype.forwardResourceTimingToParent = function(timing) {
    return this.delegate_ && this.delegate_.forwardResourceTimingToParent && this.delegate_.forwardResourceTimingToParent(timing);
  }
  LocalFrameHostStub.prototype.didDispatchDOMContentLoadedEvent = function() {
    return this.delegate_ && this.delegate_.didDispatchDOMContentLoadedEvent && this.delegate_.didDispatchDOMContentLoadedEvent();
  }
  LocalFrameHostStub.prototype.runModalAlertDialog = function(alertMessage, disableThirdPartySubframeSuppresion) {
    return this.delegate_ && this.delegate_.runModalAlertDialog && this.delegate_.runModalAlertDialog(alertMessage, disableThirdPartySubframeSuppresion);
  }
  LocalFrameHostStub.prototype.runModalConfirmDialog = function(alertMessage, disableThirdPartySubframeSuppresion) {
    return this.delegate_ && this.delegate_.runModalConfirmDialog && this.delegate_.runModalConfirmDialog(alertMessage, disableThirdPartySubframeSuppresion);
  }
  LocalFrameHostStub.prototype.runModalPromptDialog = function(alertMessage, defaultValue, disableThirdPartySubframeSuppresion) {
    return this.delegate_ && this.delegate_.runModalPromptDialog && this.delegate_.runModalPromptDialog(alertMessage, defaultValue, disableThirdPartySubframeSuppresion);
  }
  LocalFrameHostStub.prototype.runBeforeUnloadConfirm = function(isReload) {
    return this.delegate_ && this.delegate_.runBeforeUnloadConfirm && this.delegate_.runBeforeUnloadConfirm(isReload);
  }
  LocalFrameHostStub.prototype.updateFaviconURL = function(faviconUrls) {
    return this.delegate_ && this.delegate_.updateFaviconURL && this.delegate_.updateFaviconURL(faviconUrls);
  }
  LocalFrameHostStub.prototype.downloadURL = function(params) {
    return this.delegate_ && this.delegate_.downloadURL && this.delegate_.downloadURL(params);
  }
  LocalFrameHostStub.prototype.focusedElementChanged = function(isEditableElement, isRichlyEditableElement, boundsInFrameWidget, focusType) {
    return this.delegate_ && this.delegate_.focusedElementChanged && this.delegate_.focusedElementChanged(isEditableElement, isRichlyEditableElement, boundsInFrameWidget, focusType);
  }
  LocalFrameHostStub.prototype.textSelectionChanged = function(text, offset, range) {
    return this.delegate_ && this.delegate_.textSelectionChanged && this.delegate_.textSelectionChanged(text, offset, range);
  }
  LocalFrameHostStub.prototype.showPopupMenu = function(popupClient, bounds, itemHeight, fontSize, selectedItem, menuItems, rightAligned, allowMultipleSelection) {
    return this.delegate_ && this.delegate_.showPopupMenu && this.delegate_.showPopupMenu(popupClient, bounds, itemHeight, fontSize, selectedItem, menuItems, rightAligned, allowMultipleSelection);
  }
  LocalFrameHostStub.prototype.createNewPopupWidget = function(popupHost, blinkWidgetHost, blinkWidget) {
    return this.delegate_ && this.delegate_.createNewPopupWidget && this.delegate_.createNewPopupWidget(popupHost, blinkWidgetHost, blinkWidget);
  }
  LocalFrameHostStub.prototype.showContextMenu = function(client, params) {
    return this.delegate_ && this.delegate_.showContextMenu && this.delegate_.showContextMenu(client, params);
  }
  LocalFrameHostStub.prototype.didLoadResourceFromMemoryCache = function(url, httpMethod, mimeType, requestDestination, includeCredentials) {
    return this.delegate_ && this.delegate_.didLoadResourceFromMemoryCache && this.delegate_.didLoadResourceFromMemoryCache(url, httpMethod, mimeType, requestDestination, includeCredentials);
  }
  LocalFrameHostStub.prototype.didChangeFrameOwnerProperties = function(childFrameToken, frameOwnerProperties) {
    return this.delegate_ && this.delegate_.didChangeFrameOwnerProperties && this.delegate_.didChangeFrameOwnerProperties(childFrameToken, frameOwnerProperties);
  }
  LocalFrameHostStub.prototype.didChangeOpener = function(openerFrame) {
    return this.delegate_ && this.delegate_.didChangeOpener && this.delegate_.didChangeOpener(openerFrame);
  }
  LocalFrameHostStub.prototype.didChangeFramePolicy = function(childFrameToken, framePolicy) {
    return this.delegate_ && this.delegate_.didChangeFramePolicy && this.delegate_.didChangeFramePolicy(childFrameToken, framePolicy);
  }
  LocalFrameHostStub.prototype.didChangeIframeAttributes = function(childFrameToken, attributes) {
    return this.delegate_ && this.delegate_.didChangeIframeAttributes && this.delegate_.didChangeIframeAttributes(childFrameToken, attributes);
  }
  LocalFrameHostStub.prototype.capturePaintPreviewOfSubframe = function(clipRect, guid) {
    return this.delegate_ && this.delegate_.capturePaintPreviewOfSubframe && this.delegate_.capturePaintPreviewOfSubframe(clipRect, guid);
  }
  LocalFrameHostStub.prototype.setCloseListener = function(listener) {
    return this.delegate_ && this.delegate_.setCloseListener && this.delegate_.setCloseListener(listener);
  }
  LocalFrameHostStub.prototype.detach = function() {
    return this.delegate_ && this.delegate_.detach && this.delegate_.detach();
  }
  LocalFrameHostStub.prototype.getKeepAliveHandleFactory = function(factory) {
    return this.delegate_ && this.delegate_.getKeepAliveHandleFactory && this.delegate_.getKeepAliveHandleFactory(factory);
  }
  LocalFrameHostStub.prototype.didAddMessageToConsole = function(logLevel, msg, lineNumber, sourceId, untrustedStackTrace) {
    return this.delegate_ && this.delegate_.didAddMessageToConsole && this.delegate_.didAddMessageToConsole(logLevel, msg, lineNumber, sourceId, untrustedStackTrace);
  }
  LocalFrameHostStub.prototype.frameSizeChanged = function(size) {
    return this.delegate_ && this.delegate_.frameSizeChanged && this.delegate_.frameSizeChanged(size);
  }
  LocalFrameHostStub.prototype.didInferColorScheme = function(colorScheme) {
    return this.delegate_ && this.delegate_.didInferColorScheme && this.delegate_.didInferColorScheme(colorScheme);
  }
  LocalFrameHostStub.prototype.didChangeSrcDoc = function(childFrameToken, srcdocValue) {
    return this.delegate_ && this.delegate_.didChangeSrcDoc && this.delegate_.didChangeSrcDoc(childFrameToken, srcdocValue);
  }
  LocalFrameHostStub.prototype.receivedDelegatedCapability = function(delegatedCapability) {
    return this.delegate_ && this.delegate_.receivedDelegatedCapability && this.delegate_.receivedDelegatedCapability(delegatedCapability);
  }
  LocalFrameHostStub.prototype.sendFencedFrameReportingBeacon = function(eventData, eventType, destinations, attributionReportingRuntimeFeatures) {
    return this.delegate_ && this.delegate_.sendFencedFrameReportingBeacon && this.delegate_.sendFencedFrameReportingBeacon(eventData, eventType, destinations, attributionReportingRuntimeFeatures);
  }
  LocalFrameHostStub.prototype.sendFencedFrameReportingBeaconToCustomURL = function(destinationUrl, attributionReportingRuntimeFeatures) {
    return this.delegate_ && this.delegate_.sendFencedFrameReportingBeaconToCustomURL && this.delegate_.sendFencedFrameReportingBeaconToCustomURL(destinationUrl, attributionReportingRuntimeFeatures);
  }
  LocalFrameHostStub.prototype.sendLegacyTechEvent = function(type, codeLocation) {
    return this.delegate_ && this.delegate_.sendLegacyTechEvent && this.delegate_.sendLegacyTechEvent(type, codeLocation);
  }
  LocalFrameHostStub.prototype.setFencedFrameAutomaticBeaconReportEventData = function(eventData, destinations, attributionReportingRuntimeFeatures, once) {
    return this.delegate_ && this.delegate_.setFencedFrameAutomaticBeaconReportEventData && this.delegate_.setFencedFrameAutomaticBeaconReportEventData(eventData, destinations, attributionReportingRuntimeFeatures, once);
  }
  LocalFrameHostStub.prototype.sendPrivateAggregationRequestsForFencedFrameEvent = function(eventType) {
    return this.delegate_ && this.delegate_.sendPrivateAggregationRequestsForFencedFrameEvent && this.delegate_.sendPrivateAggregationRequestsForFencedFrameEvent(eventType);
  }
  LocalFrameHostStub.prototype.createPortal = function(portal, client, remoteFrameInterfaces) {
    return this.delegate_ && this.delegate_.createPortal && this.delegate_.createPortal(portal, client, remoteFrameInterfaces);
  }
  LocalFrameHostStub.prototype.adoptPortal = function(portalToken, remoteFrameInterfaces) {
    return this.delegate_ && this.delegate_.adoptPortal && this.delegate_.adoptPortal(portalToken, remoteFrameInterfaces);
  }
  LocalFrameHostStub.prototype.createFencedFrame = function(fencedFrame, remoteFrameInterfaces, frameToken, devtoolsFrameToken) {
    return this.delegate_ && this.delegate_.createFencedFrame && this.delegate_.createFencedFrame(fencedFrame, remoteFrameInterfaces, frameToken, devtoolsFrameToken);
  }
  LocalFrameHostStub.prototype.onViewTransitionOptInChanged = function(viewTransitionOptIn) {
    return this.delegate_ && this.delegate_.onViewTransitionOptInChanged && this.delegate_.onViewTransitionOptInChanged(viewTransitionOptIn);
  }
  LocalFrameHostStub.prototype.startDragging = function(dragData, operationsAllowed, image, cursorOffsetInDip, dragObjRectInDip, eventInfo) {
    return this.delegate_ && this.delegate_.startDragging && this.delegate_.startDragging(dragData, operationsAllowed, image, cursorOffsetInDip, dragObjRectInDip, eventInfo);
  }

  LocalFrameHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalFrameHost_ExitFullscreen_Name:
      var params = reader.decodeStruct(LocalFrameHost_ExitFullscreen_Params);
      this.exitFullscreen();
      return true;
    case kLocalFrameHost_FullscreenStateChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_FullscreenStateChanged_Params);
      this.fullscreenStateChanged(params.isFullscreen, params.options);
      return true;
    case kLocalFrameHost_Maximize_Name:
      var params = reader.decodeStruct(LocalFrameHost_Maximize_Params);
      this.maximize();
      return true;
    case kLocalFrameHost_Minimize_Name:
      var params = reader.decodeStruct(LocalFrameHost_Minimize_Params);
      this.minimize();
      return true;
    case kLocalFrameHost_Restore_Name:
      var params = reader.decodeStruct(LocalFrameHost_Restore_Params);
      this.restore();
      return true;
    case kLocalFrameHost_RegisterProtocolHandler_Name:
      var params = reader.decodeStruct(LocalFrameHost_RegisterProtocolHandler_Params);
      this.registerProtocolHandler(params.scheme, params.url, params.userGesture);
      return true;
    case kLocalFrameHost_UnregisterProtocolHandler_Name:
      var params = reader.decodeStruct(LocalFrameHost_UnregisterProtocolHandler_Params);
      this.unregisterProtocolHandler(params.scheme, params.url, params.userGesture);
      return true;
    case kLocalFrameHost_DidDisplayInsecureContent_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidDisplayInsecureContent_Params);
      this.didDisplayInsecureContent();
      return true;
    case kLocalFrameHost_DidContainInsecureFormAction_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidContainInsecureFormAction_Params);
      this.didContainInsecureFormAction();
      return true;
    case kLocalFrameHost_MainDocumentElementAvailable_Name:
      var params = reader.decodeStruct(LocalFrameHost_MainDocumentElementAvailable_Params);
      this.mainDocumentElementAvailable(params.usesTemporaryZoomLevel);
      return true;
    case kLocalFrameHost_SetNeedsOcclusionTracking_Name:
      var params = reader.decodeStruct(LocalFrameHost_SetNeedsOcclusionTracking_Params);
      this.setNeedsOcclusionTracking(params.needsTracking);
      return true;
    case kLocalFrameHost_SetVirtualKeyboardMode_Name:
      var params = reader.decodeStruct(LocalFrameHost_SetVirtualKeyboardMode_Params);
      this.setVirtualKeyboardMode(params.type);
      return true;
    case kLocalFrameHost_VisibilityChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_VisibilityChanged_Params);
      this.visibilityChanged(params.visibility);
      return true;
    case kLocalFrameHost_DidChangeThemeColor_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeThemeColor_Params);
      this.didChangeThemeColor(params.themeColor);
      return true;
    case kLocalFrameHost_DidChangeBackgroundColor_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeBackgroundColor_Params);
      this.didChangeBackgroundColor(params.backgroundColor, params.colorAdjust);
      return true;
    case kLocalFrameHost_DidFailLoadWithError_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidFailLoadWithError_Params);
      this.didFailLoadWithError(params.url, params.errorCode);
      return true;
    case kLocalFrameHost_DidFocusFrame_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidFocusFrame_Params);
      this.didFocusFrame();
      return true;
    case kLocalFrameHost_DidCallFocus_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidCallFocus_Params);
      this.didCallFocus();
      return true;
    case kLocalFrameHost_EnforceInsecureRequestPolicy_Name:
      var params = reader.decodeStruct(LocalFrameHost_EnforceInsecureRequestPolicy_Params);
      this.enforceInsecureRequestPolicy(params.policyBitmap);
      return true;
    case kLocalFrameHost_EnforceInsecureNavigationsSet_Name:
      var params = reader.decodeStruct(LocalFrameHost_EnforceInsecureNavigationsSet_Params);
      this.enforceInsecureNavigationsSet(params.set);
      return true;
    case kLocalFrameHost_SuddenTerminationDisablerChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_SuddenTerminationDisablerChanged_Params);
      this.suddenTerminationDisablerChanged(params.present, params.disablerType);
      return true;
    case kLocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params);
      this.hadStickyUserActivationBeforeNavigationChanged(params.hasGesture);
      return true;
    case kLocalFrameHost_ScrollRectToVisibleInParentFrame_Name:
      var params = reader.decodeStruct(LocalFrameHost_ScrollRectToVisibleInParentFrame_Params);
      this.scrollRectToVisibleInParentFrame(params.rectToScroll, params.params);
      return true;
    case kLocalFrameHost_BubbleLogicalScrollInParentFrame_Name:
      var params = reader.decodeStruct(LocalFrameHost_BubbleLogicalScrollInParentFrame_Params);
      this.bubbleLogicalScrollInParentFrame(params.direction, params.granularity);
      return true;
    case kLocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Name:
      var params = reader.decodeStruct(LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params);
      this.startLoadingForAsyncNavigationApiCommit();
      return true;
    case kLocalFrameHost_DidBlockNavigation_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidBlockNavigation_Params);
      this.didBlockNavigation(params.blockedUrl, params.initiatorUrl, params.reason);
      return true;
    case kLocalFrameHost_DidChangeLoadProgress_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeLoadProgress_Params);
      this.didChangeLoadProgress(params.loadProgress);
      return true;
    case kLocalFrameHost_DidFinishLoad_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidFinishLoad_Params);
      this.didFinishLoad(params.validatedUrl);
      return true;
    case kLocalFrameHost_DispatchLoad_Name:
      var params = reader.decodeStruct(LocalFrameHost_DispatchLoad_Params);
      this.dispatchLoad();
      return true;
    case kLocalFrameHost_GoToEntryAtOffset_Name:
      var params = reader.decodeStruct(LocalFrameHost_GoToEntryAtOffset_Params);
      this.goToEntryAtOffset(params.offset, params.hasUserGesture, params.softNavigationHeuristicsTaskId);
      return true;
    case kLocalFrameHost_NavigateToNavigationApiKey_Name:
      var params = reader.decodeStruct(LocalFrameHost_NavigateToNavigationApiKey_Params);
      this.navigateToNavigationApiKey(params.key, params.hasUserGesture, params.softNavigationHeuristicsTaskId);
      return true;
    case kLocalFrameHost_NavigateEventHandlerPresenceChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_NavigateEventHandlerPresenceChanged_Params);
      this.navigateEventHandlerPresenceChanged(params.present);
      return true;
    case kLocalFrameHost_UpdateTitle_Name:
      var params = reader.decodeStruct(LocalFrameHost_UpdateTitle_Params);
      this.updateTitle(params.title, params.titleDirection);
      return true;
    case kLocalFrameHost_UpdateUserActivationState_Name:
      var params = reader.decodeStruct(LocalFrameHost_UpdateUserActivationState_Params);
      this.updateUserActivationState(params.updateType, params.notificationType);
      return true;
    case kLocalFrameHost_DidConsumeHistoryUserActivation_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidConsumeHistoryUserActivation_Params);
      this.didConsumeHistoryUserActivation();
      return true;
    case kLocalFrameHost_HandleAccessibilityFindInPageResult_Name:
      var params = reader.decodeStruct(LocalFrameHost_HandleAccessibilityFindInPageResult_Params);
      this.handleAccessibilityFindInPageResult(params.params);
      return true;
    case kLocalFrameHost_HandleAccessibilityFindInPageTermination_Name:
      var params = reader.decodeStruct(LocalFrameHost_HandleAccessibilityFindInPageTermination_Params);
      this.handleAccessibilityFindInPageTermination();
      return true;
    case kLocalFrameHost_DocumentOnLoadCompleted_Name:
      var params = reader.decodeStruct(LocalFrameHost_DocumentOnLoadCompleted_Params);
      this.documentOnLoadCompleted();
      return true;
    case kLocalFrameHost_ForwardResourceTimingToParent_Name:
      var params = reader.decodeStruct(LocalFrameHost_ForwardResourceTimingToParent_Params);
      this.forwardResourceTimingToParent(params.timing);
      return true;
    case kLocalFrameHost_DidDispatchDOMContentLoadedEvent_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params);
      this.didDispatchDOMContentLoadedEvent();
      return true;
    case kLocalFrameHost_UpdateFaviconURL_Name:
      var params = reader.decodeStruct(LocalFrameHost_UpdateFaviconURL_Params);
      this.updateFaviconURL(params.faviconUrls);
      return true;
    case kLocalFrameHost_DownloadURL_Name:
      var params = reader.decodeStruct(LocalFrameHost_DownloadURL_Params);
      this.downloadURL(params.params);
      return true;
    case kLocalFrameHost_FocusedElementChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_FocusedElementChanged_Params);
      this.focusedElementChanged(params.isEditableElement, params.isRichlyEditableElement, params.boundsInFrameWidget, params.focusType);
      return true;
    case kLocalFrameHost_TextSelectionChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_TextSelectionChanged_Params);
      this.textSelectionChanged(params.text, params.offset, params.range);
      return true;
    case kLocalFrameHost_ShowPopupMenu_Name:
      var params = reader.decodeStruct(LocalFrameHost_ShowPopupMenu_Params);
      this.showPopupMenu(params.popupClient, params.bounds, params.itemHeight, params.fontSize, params.selectedItem, params.menuItems, params.rightAligned, params.allowMultipleSelection);
      return true;
    case kLocalFrameHost_CreateNewPopupWidget_Name:
      var params = reader.decodeStruct(LocalFrameHost_CreateNewPopupWidget_Params);
      this.createNewPopupWidget(params.popupHost, params.blinkWidgetHost, params.blinkWidget);
      return true;
    case kLocalFrameHost_ShowContextMenu_Name:
      var params = reader.decodeStruct(LocalFrameHost_ShowContextMenu_Params);
      this.showContextMenu(params.client, params.params);
      return true;
    case kLocalFrameHost_DidLoadResourceFromMemoryCache_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidLoadResourceFromMemoryCache_Params);
      this.didLoadResourceFromMemoryCache(params.url, params.httpMethod, params.mimeType, params.requestDestination, params.includeCredentials);
      return true;
    case kLocalFrameHost_DidChangeFrameOwnerProperties_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeFrameOwnerProperties_Params);
      this.didChangeFrameOwnerProperties(params.childFrameToken, params.frameOwnerProperties);
      return true;
    case kLocalFrameHost_DidChangeOpener_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeOpener_Params);
      this.didChangeOpener(params.openerFrame);
      return true;
    case kLocalFrameHost_DidChangeFramePolicy_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeFramePolicy_Params);
      this.didChangeFramePolicy(params.childFrameToken, params.framePolicy);
      return true;
    case kLocalFrameHost_DidChangeIframeAttributes_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeIframeAttributes_Params);
      this.didChangeIframeAttributes(params.childFrameToken, params.attributes);
      return true;
    case kLocalFrameHost_CapturePaintPreviewOfSubframe_Name:
      var params = reader.decodeStruct(LocalFrameHost_CapturePaintPreviewOfSubframe_Params);
      this.capturePaintPreviewOfSubframe(params.clipRect, params.guid);
      return true;
    case kLocalFrameHost_SetCloseListener_Name:
      var params = reader.decodeStruct(LocalFrameHost_SetCloseListener_Params);
      this.setCloseListener(params.listener);
      return true;
    case kLocalFrameHost_Detach_Name:
      var params = reader.decodeStruct(LocalFrameHost_Detach_Params);
      this.detach();
      return true;
    case kLocalFrameHost_GetKeepAliveHandleFactory_Name:
      var params = reader.decodeStruct(LocalFrameHost_GetKeepAliveHandleFactory_Params);
      this.getKeepAliveHandleFactory(params.factory);
      return true;
    case kLocalFrameHost_DidAddMessageToConsole_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidAddMessageToConsole_Params);
      this.didAddMessageToConsole(params.logLevel, params.msg, params.lineNumber, params.sourceId, params.untrustedStackTrace);
      return true;
    case kLocalFrameHost_FrameSizeChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_FrameSizeChanged_Params);
      this.frameSizeChanged(params.size);
      return true;
    case kLocalFrameHost_DidInferColorScheme_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidInferColorScheme_Params);
      this.didInferColorScheme(params.colorScheme);
      return true;
    case kLocalFrameHost_DidChangeSrcDoc_Name:
      var params = reader.decodeStruct(LocalFrameHost_DidChangeSrcDoc_Params);
      this.didChangeSrcDoc(params.childFrameToken, params.srcdocValue);
      return true;
    case kLocalFrameHost_ReceivedDelegatedCapability_Name:
      var params = reader.decodeStruct(LocalFrameHost_ReceivedDelegatedCapability_Params);
      this.receivedDelegatedCapability(params.delegatedCapability);
      return true;
    case kLocalFrameHost_SendFencedFrameReportingBeacon_Name:
      var params = reader.decodeStruct(LocalFrameHost_SendFencedFrameReportingBeacon_Params);
      this.sendFencedFrameReportingBeacon(params.eventData, params.eventType, params.destinations, params.attributionReportingRuntimeFeatures);
      return true;
    case kLocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Name:
      var params = reader.decodeStruct(LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params);
      this.sendFencedFrameReportingBeaconToCustomURL(params.destinationUrl, params.attributionReportingRuntimeFeatures);
      return true;
    case kLocalFrameHost_SendLegacyTechEvent_Name:
      var params = reader.decodeStruct(LocalFrameHost_SendLegacyTechEvent_Params);
      this.sendLegacyTechEvent(params.type, params.codeLocation);
      return true;
    case kLocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Name:
      var params = reader.decodeStruct(LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params);
      this.setFencedFrameAutomaticBeaconReportEventData(params.eventData, params.destinations, params.attributionReportingRuntimeFeatures, params.once);
      return true;
    case kLocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Name:
      var params = reader.decodeStruct(LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params);
      this.sendPrivateAggregationRequestsForFencedFrameEvent(params.eventType);
      return true;
    case kLocalFrameHost_CreateFencedFrame_Name:
      var params = reader.decodeStruct(LocalFrameHost_CreateFencedFrame_Params);
      this.createFencedFrame(params.fencedFrame, params.remoteFrameInterfaces, params.frameToken, params.devtoolsFrameToken);
      return true;
    case kLocalFrameHost_OnViewTransitionOptInChanged_Name:
      var params = reader.decodeStruct(LocalFrameHost_OnViewTransitionOptInChanged_Params);
      this.onViewTransitionOptInChanged(params.viewTransitionOptIn);
      return true;
    case kLocalFrameHost_StartDragging_Name:
      var params = reader.decodeStruct(LocalFrameHost_StartDragging_Params);
      this.startDragging(params.dragData, params.operationsAllowed, params.image, params.cursorOffsetInDip, params.dragObjRectInDip, params.eventInfo);
      return true;
    default:
      return false;
    }
  };

  LocalFrameHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalFrameHost_EnterFullscreen_Name:
      var params = reader.decodeStruct(LocalFrameHost_EnterFullscreen_Params);
      this.enterFullscreen(params.options).then(function(response) {
        var responseParams =
            new LocalFrameHost_EnterFullscreen_ResponseParams();
        responseParams.granted = response.granted;
        var builder = new codec.MessageV1Builder(
            kLocalFrameHost_EnterFullscreen_Name,
            codec.align(LocalFrameHost_EnterFullscreen_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrameHost_EnterFullscreen_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_RunModalAlertDialog_Name:
      var params = reader.decodeStruct(LocalFrameHost_RunModalAlertDialog_Params);
      this.runModalAlertDialog(params.alertMessage, params.disableThirdPartySubframeSuppresion).then(function(response) {
        var responseParams =
            new LocalFrameHost_RunModalAlertDialog_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kLocalFrameHost_RunModalAlertDialog_Name,
            codec.align(LocalFrameHost_RunModalAlertDialog_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrameHost_RunModalAlertDialog_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_RunModalConfirmDialog_Name:
      var params = reader.decodeStruct(LocalFrameHost_RunModalConfirmDialog_Params);
      this.runModalConfirmDialog(params.alertMessage, params.disableThirdPartySubframeSuppresion).then(function(response) {
        var responseParams =
            new LocalFrameHost_RunModalConfirmDialog_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kLocalFrameHost_RunModalConfirmDialog_Name,
            codec.align(LocalFrameHost_RunModalConfirmDialog_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrameHost_RunModalConfirmDialog_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_RunModalPromptDialog_Name:
      var params = reader.decodeStruct(LocalFrameHost_RunModalPromptDialog_Params);
      this.runModalPromptDialog(params.alertMessage, params.defaultValue, params.disableThirdPartySubframeSuppresion).then(function(response) {
        var responseParams =
            new LocalFrameHost_RunModalPromptDialog_ResponseParams();
        responseParams.success = response.success;
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kLocalFrameHost_RunModalPromptDialog_Name,
            codec.align(LocalFrameHost_RunModalPromptDialog_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrameHost_RunModalPromptDialog_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_RunBeforeUnloadConfirm_Name:
      var params = reader.decodeStruct(LocalFrameHost_RunBeforeUnloadConfirm_Params);
      this.runBeforeUnloadConfirm(params.isReload).then(function(response) {
        var responseParams =
            new LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kLocalFrameHost_RunBeforeUnloadConfirm_Name,
            codec.align(LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_CreatePortal_Name:
      var params = reader.decodeStruct(LocalFrameHost_CreatePortal_Params);
      this.createPortal(params.portal, params.client, params.remoteFrameInterfaces).then(function(response) {
        var responseParams =
            new LocalFrameHost_CreatePortal_ResponseParams();
        responseParams.initialReplicatedState = response.initialReplicatedState;
        responseParams.portalToken = response.portalToken;
        responseParams.frameToken = response.frameToken;
        responseParams.devtoolsFrameToken = response.devtoolsFrameToken;
        var builder = new codec.MessageV2Builder(
            kLocalFrameHost_CreatePortal_Name,
            codec.align(LocalFrameHost_CreatePortal_ResponseParams
                .encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.setPayload(LocalFrameHost_CreatePortal_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrameHost_AdoptPortal_Name:
      var params = reader.decodeStruct(LocalFrameHost_AdoptPortal_Params);
      this.adoptPortal(params.portalToken, params.remoteFrameInterfaces).then(function(response) {
        var responseParams =
            new LocalFrameHost_AdoptPortal_ResponseParams();
        responseParams.replicatedState = response.replicatedState;
        responseParams.frameToken = response.frameToken;
        responseParams.devtoolsFrameToken = response.devtoolsFrameToken;
        var builder = new codec.MessageV2Builder(
            kLocalFrameHost_AdoptPortal_Name,
            codec.align(LocalFrameHost_AdoptPortal_ResponseParams
                .encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.setPayload(LocalFrameHost_AdoptPortal_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateLocalFrameHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kLocalFrameHost_EnterFullscreen_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_EnterFullscreen_Params;
      break;
      case kLocalFrameHost_ExitFullscreen_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ExitFullscreen_Params;
      break;
      case kLocalFrameHost_FullscreenStateChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_FullscreenStateChanged_Params;
      break;
      case kLocalFrameHost_Maximize_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_Maximize_Params;
      break;
      case kLocalFrameHost_Minimize_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_Minimize_Params;
      break;
      case kLocalFrameHost_Restore_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_Restore_Params;
      break;
      case kLocalFrameHost_RegisterProtocolHandler_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_RegisterProtocolHandler_Params;
      break;
      case kLocalFrameHost_UnregisterProtocolHandler_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_UnregisterProtocolHandler_Params;
      break;
      case kLocalFrameHost_DidDisplayInsecureContent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidDisplayInsecureContent_Params;
      break;
      case kLocalFrameHost_DidContainInsecureFormAction_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidContainInsecureFormAction_Params;
      break;
      case kLocalFrameHost_MainDocumentElementAvailable_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_MainDocumentElementAvailable_Params;
      break;
      case kLocalFrameHost_SetNeedsOcclusionTracking_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SetNeedsOcclusionTracking_Params;
      break;
      case kLocalFrameHost_SetVirtualKeyboardMode_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SetVirtualKeyboardMode_Params;
      break;
      case kLocalFrameHost_VisibilityChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_VisibilityChanged_Params;
      break;
      case kLocalFrameHost_DidChangeThemeColor_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeThemeColor_Params;
      break;
      case kLocalFrameHost_DidChangeBackgroundColor_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeBackgroundColor_Params;
      break;
      case kLocalFrameHost_DidFailLoadWithError_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidFailLoadWithError_Params;
      break;
      case kLocalFrameHost_DidFocusFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidFocusFrame_Params;
      break;
      case kLocalFrameHost_DidCallFocus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidCallFocus_Params;
      break;
      case kLocalFrameHost_EnforceInsecureRequestPolicy_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_EnforceInsecureRequestPolicy_Params;
      break;
      case kLocalFrameHost_EnforceInsecureNavigationsSet_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_EnforceInsecureNavigationsSet_Params;
      break;
      case kLocalFrameHost_SuddenTerminationDisablerChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SuddenTerminationDisablerChanged_Params;
      break;
      case kLocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_HadStickyUserActivationBeforeNavigationChanged_Params;
      break;
      case kLocalFrameHost_ScrollRectToVisibleInParentFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ScrollRectToVisibleInParentFrame_Params;
      break;
      case kLocalFrameHost_BubbleLogicalScrollInParentFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_BubbleLogicalScrollInParentFrame_Params;
      break;
      case kLocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_StartLoadingForAsyncNavigationApiCommit_Params;
      break;
      case kLocalFrameHost_DidBlockNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidBlockNavigation_Params;
      break;
      case kLocalFrameHost_DidChangeLoadProgress_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeLoadProgress_Params;
      break;
      case kLocalFrameHost_DidFinishLoad_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidFinishLoad_Params;
      break;
      case kLocalFrameHost_DispatchLoad_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DispatchLoad_Params;
      break;
      case kLocalFrameHost_GoToEntryAtOffset_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_GoToEntryAtOffset_Params;
      break;
      case kLocalFrameHost_NavigateToNavigationApiKey_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_NavigateToNavigationApiKey_Params;
      break;
      case kLocalFrameHost_NavigateEventHandlerPresenceChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_NavigateEventHandlerPresenceChanged_Params;
      break;
      case kLocalFrameHost_UpdateTitle_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_UpdateTitle_Params;
      break;
      case kLocalFrameHost_UpdateUserActivationState_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_UpdateUserActivationState_Params;
      break;
      case kLocalFrameHost_DidConsumeHistoryUserActivation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidConsumeHistoryUserActivation_Params;
      break;
      case kLocalFrameHost_HandleAccessibilityFindInPageResult_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_HandleAccessibilityFindInPageResult_Params;
      break;
      case kLocalFrameHost_HandleAccessibilityFindInPageTermination_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_HandleAccessibilityFindInPageTermination_Params;
      break;
      case kLocalFrameHost_DocumentOnLoadCompleted_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DocumentOnLoadCompleted_Params;
      break;
      case kLocalFrameHost_ForwardResourceTimingToParent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ForwardResourceTimingToParent_Params;
      break;
      case kLocalFrameHost_DidDispatchDOMContentLoadedEvent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidDispatchDOMContentLoadedEvent_Params;
      break;
      case kLocalFrameHost_RunModalAlertDialog_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_RunModalAlertDialog_Params;
      break;
      case kLocalFrameHost_RunModalConfirmDialog_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_RunModalConfirmDialog_Params;
      break;
      case kLocalFrameHost_RunModalPromptDialog_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_RunModalPromptDialog_Params;
      break;
      case kLocalFrameHost_RunBeforeUnloadConfirm_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_RunBeforeUnloadConfirm_Params;
      break;
      case kLocalFrameHost_UpdateFaviconURL_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_UpdateFaviconURL_Params;
      break;
      case kLocalFrameHost_DownloadURL_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DownloadURL_Params;
      break;
      case kLocalFrameHost_FocusedElementChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_FocusedElementChanged_Params;
      break;
      case kLocalFrameHost_TextSelectionChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_TextSelectionChanged_Params;
      break;
      case kLocalFrameHost_ShowPopupMenu_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ShowPopupMenu_Params;
      break;
      case kLocalFrameHost_CreateNewPopupWidget_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_CreateNewPopupWidget_Params;
      break;
      case kLocalFrameHost_ShowContextMenu_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ShowContextMenu_Params;
      break;
      case kLocalFrameHost_DidLoadResourceFromMemoryCache_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidLoadResourceFromMemoryCache_Params;
      break;
      case kLocalFrameHost_DidChangeFrameOwnerProperties_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeFrameOwnerProperties_Params;
      break;
      case kLocalFrameHost_DidChangeOpener_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeOpener_Params;
      break;
      case kLocalFrameHost_DidChangeFramePolicy_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeFramePolicy_Params;
      break;
      case kLocalFrameHost_DidChangeIframeAttributes_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeIframeAttributes_Params;
      break;
      case kLocalFrameHost_CapturePaintPreviewOfSubframe_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_CapturePaintPreviewOfSubframe_Params;
      break;
      case kLocalFrameHost_SetCloseListener_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SetCloseListener_Params;
      break;
      case kLocalFrameHost_Detach_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_Detach_Params;
      break;
      case kLocalFrameHost_GetKeepAliveHandleFactory_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_GetKeepAliveHandleFactory_Params;
      break;
      case kLocalFrameHost_DidAddMessageToConsole_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidAddMessageToConsole_Params;
      break;
      case kLocalFrameHost_FrameSizeChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_FrameSizeChanged_Params;
      break;
      case kLocalFrameHost_DidInferColorScheme_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidInferColorScheme_Params;
      break;
      case kLocalFrameHost_DidChangeSrcDoc_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_DidChangeSrcDoc_Params;
      break;
      case kLocalFrameHost_ReceivedDelegatedCapability_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_ReceivedDelegatedCapability_Params;
      break;
      case kLocalFrameHost_SendFencedFrameReportingBeacon_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SendFencedFrameReportingBeacon_Params;
      break;
      case kLocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SendFencedFrameReportingBeaconToCustomURL_Params;
      break;
      case kLocalFrameHost_SendLegacyTechEvent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SendLegacyTechEvent_Params;
      break;
      case kLocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SetFencedFrameAutomaticBeaconReportEventData_Params;
      break;
      case kLocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_SendPrivateAggregationRequestsForFencedFrameEvent_Params;
      break;
      case kLocalFrameHost_CreatePortal_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_CreatePortal_Params;
      break;
      case kLocalFrameHost_AdoptPortal_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrameHost_AdoptPortal_Params;
      break;
      case kLocalFrameHost_CreateFencedFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_CreateFencedFrame_Params;
      break;
      case kLocalFrameHost_OnViewTransitionOptInChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_OnViewTransitionOptInChanged_Params;
      break;
      case kLocalFrameHost_StartDragging_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrameHost_StartDragging_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateLocalFrameHostResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kLocalFrameHost_EnterFullscreen_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_EnterFullscreen_ResponseParams;
        break;
      case kLocalFrameHost_RunModalAlertDialog_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_RunModalAlertDialog_ResponseParams;
        break;
      case kLocalFrameHost_RunModalConfirmDialog_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_RunModalConfirmDialog_ResponseParams;
        break;
      case kLocalFrameHost_RunModalPromptDialog_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_RunModalPromptDialog_ResponseParams;
        break;
      case kLocalFrameHost_RunBeforeUnloadConfirm_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_RunBeforeUnloadConfirm_ResponseParams;
        break;
      case kLocalFrameHost_CreatePortal_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_CreatePortal_ResponseParams;
        break;
      case kLocalFrameHost_AdoptPortal_Name:
        if (message.isResponse())
          paramsClass = LocalFrameHost_AdoptPortal_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var LocalFrameHost = {
    name: 'blink.mojom.LocalFrameHost',
    kVersion: 0,
    ptrClass: LocalFrameHostPtr,
    proxyClass: LocalFrameHostProxy,
    stubClass: LocalFrameHostStub,
    validateRequest: validateLocalFrameHostRequest,
    validateResponse: validateLocalFrameHostResponse,
  };
  LocalFrameHostStub.prototype.validator = validateLocalFrameHostRequest;
  LocalFrameHostProxy.prototype.validator = validateLocalFrameHostResponse;
  var kNonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Name = 1099068549;

  function NonAssociatedLocalFrameHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(NonAssociatedLocalFrameHost,
                                                   handleOrPtrInfo);
  }

  function NonAssociatedLocalFrameHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        NonAssociatedLocalFrameHost, associatedInterfacePtrInfo);
  }

  NonAssociatedLocalFrameHostAssociatedPtr.prototype =
      Object.create(NonAssociatedLocalFrameHostPtr.prototype);
  NonAssociatedLocalFrameHostAssociatedPtr.prototype.constructor =
      NonAssociatedLocalFrameHostAssociatedPtr;

  function NonAssociatedLocalFrameHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  NonAssociatedLocalFrameHostPtr.prototype.maybeStartOutermostMainFrameNavigation = function() {
    return NonAssociatedLocalFrameHostProxy.prototype.maybeStartOutermostMainFrameNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  NonAssociatedLocalFrameHostProxy.prototype.maybeStartOutermostMainFrameNavigation = function(urls) {
    var params_ = new NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params();
    params_.urls = urls;
    var builder = new codec.MessageV0Builder(
        kNonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Name,
        codec.align(NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params.encodedSize));
    builder.encodeStruct(NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function NonAssociatedLocalFrameHostStub(delegate) {
    this.delegate_ = delegate;
  }
  NonAssociatedLocalFrameHostStub.prototype.maybeStartOutermostMainFrameNavigation = function(urls) {
    return this.delegate_ && this.delegate_.maybeStartOutermostMainFrameNavigation && this.delegate_.maybeStartOutermostMainFrameNavigation(urls);
  }

  NonAssociatedLocalFrameHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kNonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Name:
      var params = reader.decodeStruct(NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params);
      this.maybeStartOutermostMainFrameNavigation(params.urls);
      return true;
    default:
      return false;
    }
  };

  NonAssociatedLocalFrameHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateNonAssociatedLocalFrameHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kNonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NonAssociatedLocalFrameHost_MaybeStartOutermostMainFrameNavigation_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateNonAssociatedLocalFrameHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var NonAssociatedLocalFrameHost = {
    name: 'blink.mojom.NonAssociatedLocalFrameHost',
    kVersion: 0,
    ptrClass: NonAssociatedLocalFrameHostPtr,
    proxyClass: NonAssociatedLocalFrameHostProxy,
    stubClass: NonAssociatedLocalFrameHostStub,
    validateRequest: validateNonAssociatedLocalFrameHostRequest,
    validateResponse: null,
  };
  NonAssociatedLocalFrameHostStub.prototype.validator = validateNonAssociatedLocalFrameHostRequest;
  NonAssociatedLocalFrameHostProxy.prototype.validator = null;
  var kLocalFrame_GetTextSurroundingSelection_Name = 1093960596;
  var kLocalFrame_SendInterventionReport_Name = 1270590688;
  var kLocalFrame_SetFrameOwnerProperties_Name = 1354011749;
  var kLocalFrame_NotifyUserActivation_Name = 718056985;
  var kLocalFrame_NotifyVirtualKeyboardOverlayRect_Name = 725678909;
  var kLocalFrame_AddMessageToConsole_Name = 577331211;
  var kLocalFrame_AddInspectorIssue_Name = 1151490469;
  var kLocalFrame_SwapInImmediately_Name = 571763545;
  var kLocalFrame_CheckCompleted_Name = 1264850220;
  var kLocalFrame_StopLoading_Name = 191267302;
  var kLocalFrame_Collapse_Name = 1807958164;
  var kLocalFrame_EnableViewSourceMode_Name = 1584491162;
  var kLocalFrame_Focus_Name = 1099552633;
  var kLocalFrame_ClearFocusedElement_Name = 1241354303;
  var kLocalFrame_CopyImageAt_Name = 946556283;
  var kLocalFrame_SaveImageAt_Name = 121306252;
  var kLocalFrame_ReportBlinkFeatureUsage_Name = 206851455;
  var kLocalFrame_RenderFallbackContent_Name = 1904768048;
  var kLocalFrame_BeforeUnload_Name = 749872242;
  var kLocalFrame_MediaPlayerActionAt_Name = 1376753714;
  var kLocalFrame_PluginActionAt_Name = 65147210;
  var kLocalFrame_AdvanceFocusInFrame_Name = 634389169;
  var kLocalFrame_AdvanceFocusForIME_Name = 1826169752;
  var kLocalFrame_ReportContentSecurityPolicyViolation_Name = 1501619195;
  var kLocalFrame_DidUpdateFramePolicy_Name = 1508319706;
  var kLocalFrame_PostMessageEvent_Name = 352069388;
  var kLocalFrame_JavaScriptMethodExecuteRequest_Name = 1695777323;
  var kLocalFrame_JavaScriptExecuteRequest_Name = 45551941;
  var kLocalFrame_JavaScriptExecuteRequestForTests_Name = 877743134;
  var kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name = 437597892;
  var kLocalFrame_BindReportingObserver_Name = 1563371133;
  var kLocalFrame_UpdateOpener_Name = 314289723;
  var kLocalFrame_GetSavableResourceLinks_Name = 1628107370;
  var kLocalFrame_MixedContentFound_Name = 181814989;
  var kLocalFrame_BindDevToolsAgent_Name = 178144079;
  var kLocalFrame_HandleRendererDebugURL_Name = 1489282342;
  var kLocalFrame_GetCanonicalUrlForSharing_Name = 1163088992;
  var kLocalFrame_GetOpenGraphMetadata_Name = 1173901564;
  var kLocalFrame_SetNavigationApiHistoryEntriesForRestore_Name = 1281270960;
  var kLocalFrame_NotifyNavigationApiOfDisposedEntries_Name = 568583661;
  var kLocalFrame_TraverseCancelled_Name = 976783340;
  var kLocalFrame_SnapshotDocumentForViewTransition_Name = 2009393814;
  var kLocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Name = 1608730651;
  var kLocalFrame_RequestFullscreenDocumentElement_Name = 1829129015;

  function LocalFramePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(LocalFrame,
                                                   handleOrPtrInfo);
  }

  function LocalFrameAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        LocalFrame, associatedInterfacePtrInfo);
  }

  LocalFrameAssociatedPtr.prototype =
      Object.create(LocalFramePtr.prototype);
  LocalFrameAssociatedPtr.prototype.constructor =
      LocalFrameAssociatedPtr;

  function LocalFrameProxy(receiver) {
    this.receiver_ = receiver;
  }
  LocalFramePtr.prototype.getTextSurroundingSelection = function() {
    return LocalFrameProxy.prototype.getTextSurroundingSelection
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.getTextSurroundingSelection = function(maxLength) {
    var params_ = new LocalFrame_GetTextSurroundingSelection_Params();
    params_.maxLength = maxLength;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_GetTextSurroundingSelection_Name,
          codec.align(LocalFrame_GetTextSurroundingSelection_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_GetTextSurroundingSelection_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_GetTextSurroundingSelection_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.sendInterventionReport = function() {
    return LocalFrameProxy.prototype.sendInterventionReport
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.sendInterventionReport = function(id, message) {
    var params_ = new LocalFrame_SendInterventionReport_Params();
    params_.id = id;
    params_.message = message;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_SendInterventionReport_Name,
        codec.align(LocalFrame_SendInterventionReport_Params.encodedSize));
    builder.encodeStruct(LocalFrame_SendInterventionReport_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.setFrameOwnerProperties = function() {
    return LocalFrameProxy.prototype.setFrameOwnerProperties
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.setFrameOwnerProperties = function(properties) {
    var params_ = new LocalFrame_SetFrameOwnerProperties_Params();
    params_.properties = properties;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_SetFrameOwnerProperties_Name,
        codec.align(LocalFrame_SetFrameOwnerProperties_Params.encodedSize));
    builder.encodeStruct(LocalFrame_SetFrameOwnerProperties_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.notifyUserActivation = function() {
    return LocalFrameProxy.prototype.notifyUserActivation
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.notifyUserActivation = function(notificationType) {
    var params_ = new LocalFrame_NotifyUserActivation_Params();
    params_.notificationType = notificationType;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_NotifyUserActivation_Name,
        codec.align(LocalFrame_NotifyUserActivation_Params.encodedSize));
    builder.encodeStruct(LocalFrame_NotifyUserActivation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.notifyVirtualKeyboardOverlayRect = function() {
    return LocalFrameProxy.prototype.notifyVirtualKeyboardOverlayRect
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.notifyVirtualKeyboardOverlayRect = function(keyboardRect) {
    var params_ = new LocalFrame_NotifyVirtualKeyboardOverlayRect_Params();
    params_.keyboardRect = keyboardRect;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_NotifyVirtualKeyboardOverlayRect_Name,
        codec.align(LocalFrame_NotifyVirtualKeyboardOverlayRect_Params.encodedSize));
    builder.encodeStruct(LocalFrame_NotifyVirtualKeyboardOverlayRect_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.addMessageToConsole = function() {
    return LocalFrameProxy.prototype.addMessageToConsole
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.addMessageToConsole = function(level, message, discardDuplicates) {
    var params_ = new LocalFrame_AddMessageToConsole_Params();
    params_.level = level;
    params_.message = message;
    params_.discardDuplicates = discardDuplicates;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_AddMessageToConsole_Name,
        codec.align(LocalFrame_AddMessageToConsole_Params.encodedSize));
    builder.encodeStruct(LocalFrame_AddMessageToConsole_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.addInspectorIssue = function() {
    return LocalFrameProxy.prototype.addInspectorIssue
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.addInspectorIssue = function(info) {
    var params_ = new LocalFrame_AddInspectorIssue_Params();
    params_.info = info;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_AddInspectorIssue_Name,
        codec.align(LocalFrame_AddInspectorIssue_Params.encodedSize));
    builder.encodeStruct(LocalFrame_AddInspectorIssue_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.swapInImmediately = function() {
    return LocalFrameProxy.prototype.swapInImmediately
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.swapInImmediately = function() {
    var params_ = new LocalFrame_SwapInImmediately_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_SwapInImmediately_Name,
        codec.align(LocalFrame_SwapInImmediately_Params.encodedSize));
    builder.encodeStruct(LocalFrame_SwapInImmediately_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.checkCompleted = function() {
    return LocalFrameProxy.prototype.checkCompleted
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.checkCompleted = function() {
    var params_ = new LocalFrame_CheckCompleted_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_CheckCompleted_Name,
        codec.align(LocalFrame_CheckCompleted_Params.encodedSize));
    builder.encodeStruct(LocalFrame_CheckCompleted_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.stopLoading = function() {
    return LocalFrameProxy.prototype.stopLoading
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.stopLoading = function() {
    var params_ = new LocalFrame_StopLoading_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_StopLoading_Name,
        codec.align(LocalFrame_StopLoading_Params.encodedSize));
    builder.encodeStruct(LocalFrame_StopLoading_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.collapse = function() {
    return LocalFrameProxy.prototype.collapse
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.collapse = function(collapsed) {
    var params_ = new LocalFrame_Collapse_Params();
    params_.collapsed = collapsed;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_Collapse_Name,
        codec.align(LocalFrame_Collapse_Params.encodedSize));
    builder.encodeStruct(LocalFrame_Collapse_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.enableViewSourceMode = function() {
    return LocalFrameProxy.prototype.enableViewSourceMode
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.enableViewSourceMode = function() {
    var params_ = new LocalFrame_EnableViewSourceMode_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_EnableViewSourceMode_Name,
        codec.align(LocalFrame_EnableViewSourceMode_Params.encodedSize));
    builder.encodeStruct(LocalFrame_EnableViewSourceMode_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.focus = function() {
    return LocalFrameProxy.prototype.focus
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.focus = function() {
    var params_ = new LocalFrame_Focus_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_Focus_Name,
        codec.align(LocalFrame_Focus_Params.encodedSize));
    builder.encodeStruct(LocalFrame_Focus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.clearFocusedElement = function() {
    return LocalFrameProxy.prototype.clearFocusedElement
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.clearFocusedElement = function() {
    var params_ = new LocalFrame_ClearFocusedElement_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_ClearFocusedElement_Name,
        codec.align(LocalFrame_ClearFocusedElement_Params.encodedSize));
    builder.encodeStruct(LocalFrame_ClearFocusedElement_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.copyImageAt = function() {
    return LocalFrameProxy.prototype.copyImageAt
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.copyImageAt = function(windowPoint) {
    var params_ = new LocalFrame_CopyImageAt_Params();
    params_.windowPoint = windowPoint;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_CopyImageAt_Name,
        codec.align(LocalFrame_CopyImageAt_Params.encodedSize));
    builder.encodeStruct(LocalFrame_CopyImageAt_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.saveImageAt = function() {
    return LocalFrameProxy.prototype.saveImageAt
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.saveImageAt = function(windowPoint) {
    var params_ = new LocalFrame_SaveImageAt_Params();
    params_.windowPoint = windowPoint;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_SaveImageAt_Name,
        codec.align(LocalFrame_SaveImageAt_Params.encodedSize));
    builder.encodeStruct(LocalFrame_SaveImageAt_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.reportBlinkFeatureUsage = function() {
    return LocalFrameProxy.prototype.reportBlinkFeatureUsage
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.reportBlinkFeatureUsage = function(features) {
    var params_ = new LocalFrame_ReportBlinkFeatureUsage_Params();
    params_.features = features;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_ReportBlinkFeatureUsage_Name,
        codec.align(LocalFrame_ReportBlinkFeatureUsage_Params.encodedSize));
    builder.encodeStruct(LocalFrame_ReportBlinkFeatureUsage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.renderFallbackContent = function() {
    return LocalFrameProxy.prototype.renderFallbackContent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.renderFallbackContent = function() {
    var params_ = new LocalFrame_RenderFallbackContent_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_RenderFallbackContent_Name,
        codec.align(LocalFrame_RenderFallbackContent_Params.encodedSize));
    builder.encodeStruct(LocalFrame_RenderFallbackContent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.beforeUnload = function() {
    return LocalFrameProxy.prototype.beforeUnload
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.beforeUnload = function(isReload) {
    var params_ = new LocalFrame_BeforeUnload_Params();
    params_.isReload = isReload;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_BeforeUnload_Name,
          codec.align(LocalFrame_BeforeUnload_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_BeforeUnload_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_BeforeUnload_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.mediaPlayerActionAt = function() {
    return LocalFrameProxy.prototype.mediaPlayerActionAt
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.mediaPlayerActionAt = function(location, action) {
    var params_ = new LocalFrame_MediaPlayerActionAt_Params();
    params_.location = location;
    params_.action = action;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_MediaPlayerActionAt_Name,
        codec.align(LocalFrame_MediaPlayerActionAt_Params.encodedSize));
    builder.encodeStruct(LocalFrame_MediaPlayerActionAt_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.pluginActionAt = function() {
    return LocalFrameProxy.prototype.pluginActionAt
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.pluginActionAt = function(location, action) {
    var params_ = new LocalFrame_PluginActionAt_Params();
    params_.location = location;
    params_.action = action;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_PluginActionAt_Name,
        codec.align(LocalFrame_PluginActionAt_Params.encodedSize));
    builder.encodeStruct(LocalFrame_PluginActionAt_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.advanceFocusInFrame = function() {
    return LocalFrameProxy.prototype.advanceFocusInFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.advanceFocusInFrame = function(focusType, sourceFrameToken) {
    var params_ = new LocalFrame_AdvanceFocusInFrame_Params();
    params_.focusType = focusType;
    params_.sourceFrameToken = sourceFrameToken;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_AdvanceFocusInFrame_Name,
        codec.align(LocalFrame_AdvanceFocusInFrame_Params.encodedSize));
    builder.encodeStruct(LocalFrame_AdvanceFocusInFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.advanceFocusForIME = function() {
    return LocalFrameProxy.prototype.advanceFocusForIME
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.advanceFocusForIME = function(focusType) {
    var params_ = new LocalFrame_AdvanceFocusForIME_Params();
    params_.focusType = focusType;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_AdvanceFocusForIME_Name,
        codec.align(LocalFrame_AdvanceFocusForIME_Params.encodedSize));
    builder.encodeStruct(LocalFrame_AdvanceFocusForIME_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.reportContentSecurityPolicyViolation = function() {
    return LocalFrameProxy.prototype.reportContentSecurityPolicyViolation
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.reportContentSecurityPolicyViolation = function(violation) {
    var params_ = new LocalFrame_ReportContentSecurityPolicyViolation_Params();
    params_.violation = violation;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_ReportContentSecurityPolicyViolation_Name,
        codec.align(LocalFrame_ReportContentSecurityPolicyViolation_Params.encodedSize));
    builder.encodeStruct(LocalFrame_ReportContentSecurityPolicyViolation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.didUpdateFramePolicy = function() {
    return LocalFrameProxy.prototype.didUpdateFramePolicy
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.didUpdateFramePolicy = function(framePolicy) {
    var params_ = new LocalFrame_DidUpdateFramePolicy_Params();
    params_.framePolicy = framePolicy;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_DidUpdateFramePolicy_Name,
        codec.align(LocalFrame_DidUpdateFramePolicy_Params.encodedSize));
    builder.encodeStruct(LocalFrame_DidUpdateFramePolicy_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.postMessageEvent = function() {
    return LocalFrameProxy.prototype.postMessageEvent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.postMessageEvent = function(sourceFrameToken, sourceOrigin, targetOrigin, message) {
    var params_ = new LocalFrame_PostMessageEvent_Params();
    params_.sourceFrameToken = sourceFrameToken;
    params_.sourceOrigin = sourceOrigin;
    params_.targetOrigin = targetOrigin;
    params_.message = message;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_PostMessageEvent_Name,
        codec.align(LocalFrame_PostMessageEvent_Params.encodedSize));
    builder.encodeStruct(LocalFrame_PostMessageEvent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.javaScriptMethodExecuteRequest = function() {
    return LocalFrameProxy.prototype.javaScriptMethodExecuteRequest
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.javaScriptMethodExecuteRequest = function(objectName, methodName, arguments_, wantsResult) {
    var params_ = new LocalFrame_JavaScriptMethodExecuteRequest_Params();
    params_.objectName = objectName;
    params_.methodName = methodName;
    params_.arguments = arguments_;
    params_.wantsResult = wantsResult;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_JavaScriptMethodExecuteRequest_Name,
          codec.align(LocalFrame_JavaScriptMethodExecuteRequest_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_JavaScriptMethodExecuteRequest_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.javaScriptExecuteRequest = function() {
    return LocalFrameProxy.prototype.javaScriptExecuteRequest
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.javaScriptExecuteRequest = function(javascript, wantsResult) {
    var params_ = new LocalFrame_JavaScriptExecuteRequest_Params();
    params_.javascript = javascript;
    params_.wantsResult = wantsResult;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_JavaScriptExecuteRequest_Name,
          codec.align(LocalFrame_JavaScriptExecuteRequest_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_JavaScriptExecuteRequest_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_JavaScriptExecuteRequest_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.javaScriptExecuteRequestForTests = function() {
    return LocalFrameProxy.prototype.javaScriptExecuteRequestForTests
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.javaScriptExecuteRequestForTests = function(javascript, hasUserGesture, resolvePromises, worldId) {
    var params_ = new LocalFrame_JavaScriptExecuteRequestForTests_Params();
    params_.javascript = javascript;
    params_.hasUserGesture = hasUserGesture;
    params_.resolvePromises = resolvePromises;
    params_.worldId = worldId;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_JavaScriptExecuteRequestForTests_Name,
          codec.align(LocalFrame_JavaScriptExecuteRequestForTests_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_JavaScriptExecuteRequestForTests_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.javaScriptExecuteRequestInIsolatedWorld = function() {
    return LocalFrameProxy.prototype.javaScriptExecuteRequestInIsolatedWorld
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.javaScriptExecuteRequestInIsolatedWorld = function(javascript, wantsResult, worldId) {
    var params_ = new LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params();
    params_.javascript = javascript;
    params_.wantsResult = wantsResult;
    params_.worldId = worldId;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name,
          codec.align(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.bindReportingObserver = function() {
    return LocalFrameProxy.prototype.bindReportingObserver
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.bindReportingObserver = function(receiver) {
    var params_ = new LocalFrame_BindReportingObserver_Params();
    params_.receiver = receiver;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_BindReportingObserver_Name,
        codec.align(LocalFrame_BindReportingObserver_Params.encodedSize));
    builder.encodeStruct(LocalFrame_BindReportingObserver_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.updateOpener = function() {
    return LocalFrameProxy.prototype.updateOpener
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.updateOpener = function(openerFrameToken) {
    var params_ = new LocalFrame_UpdateOpener_Params();
    params_.openerFrameToken = openerFrameToken;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_UpdateOpener_Name,
        codec.align(LocalFrame_UpdateOpener_Params.encodedSize));
    builder.encodeStruct(LocalFrame_UpdateOpener_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.getSavableResourceLinks = function() {
    return LocalFrameProxy.prototype.getSavableResourceLinks
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.getSavableResourceLinks = function() {
    var params_ = new LocalFrame_GetSavableResourceLinks_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_GetSavableResourceLinks_Name,
          codec.align(LocalFrame_GetSavableResourceLinks_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_GetSavableResourceLinks_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_GetSavableResourceLinks_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.mixedContentFound = function() {
    return LocalFrameProxy.prototype.mixedContentFound
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.mixedContentFound = function(mainResourceUrl, mixedContentUrl, requestContext, wasAllowed, urlBeforeRedirects, hadRedirect, sourceLocation) {
    var params_ = new LocalFrame_MixedContentFound_Params();
    params_.mainResourceUrl = mainResourceUrl;
    params_.mixedContentUrl = mixedContentUrl;
    params_.requestContext = requestContext;
    params_.wasAllowed = wasAllowed;
    params_.urlBeforeRedirects = urlBeforeRedirects;
    params_.hadRedirect = hadRedirect;
    params_.sourceLocation = sourceLocation;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_MixedContentFound_Name,
        codec.align(LocalFrame_MixedContentFound_Params.encodedSize));
    builder.encodeStruct(LocalFrame_MixedContentFound_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.bindDevToolsAgent = function() {
    return LocalFrameProxy.prototype.bindDevToolsAgent
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.bindDevToolsAgent = function(agentHost, agent) {
    var params_ = new LocalFrame_BindDevToolsAgent_Params();
    params_.agentHost = agentHost;
    params_.agent = agent;
    var builder = new codec.MessageV2Builder(
        kLocalFrame_BindDevToolsAgent_Name,
        codec.align(LocalFrame_BindDevToolsAgent_Params.encodedSize));
    builder.setPayload(LocalFrame_BindDevToolsAgent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.handleRendererDebugURL = function() {
    return LocalFrameProxy.prototype.handleRendererDebugURL
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.handleRendererDebugURL = function(url) {
    var params_ = new LocalFrame_HandleRendererDebugURL_Params();
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_HandleRendererDebugURL_Name,
        codec.align(LocalFrame_HandleRendererDebugURL_Params.encodedSize));
    builder.encodeStruct(LocalFrame_HandleRendererDebugURL_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.getCanonicalUrlForSharing = function() {
    return LocalFrameProxy.prototype.getCanonicalUrlForSharing
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.getCanonicalUrlForSharing = function() {
    var params_ = new LocalFrame_GetCanonicalUrlForSharing_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_GetCanonicalUrlForSharing_Name,
          codec.align(LocalFrame_GetCanonicalUrlForSharing_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_GetCanonicalUrlForSharing_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_GetCanonicalUrlForSharing_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.getOpenGraphMetadata = function() {
    return LocalFrameProxy.prototype.getOpenGraphMetadata
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.getOpenGraphMetadata = function() {
    var params_ = new LocalFrame_GetOpenGraphMetadata_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_GetOpenGraphMetadata_Name,
          codec.align(LocalFrame_GetOpenGraphMetadata_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_GetOpenGraphMetadata_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_GetOpenGraphMetadata_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.setNavigationApiHistoryEntriesForRestore = function() {
    return LocalFrameProxy.prototype.setNavigationApiHistoryEntriesForRestore
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.setNavigationApiHistoryEntriesForRestore = function(entryArrays) {
    var params_ = new LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params();
    params_.entryArrays = entryArrays;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_SetNavigationApiHistoryEntriesForRestore_Name,
        codec.align(LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params.encodedSize));
    builder.encodeStruct(LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.notifyNavigationApiOfDisposedEntries = function() {
    return LocalFrameProxy.prototype.notifyNavigationApiOfDisposedEntries
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.notifyNavigationApiOfDisposedEntries = function(keys) {
    var params_ = new LocalFrame_NotifyNavigationApiOfDisposedEntries_Params();
    params_.keys = keys;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_NotifyNavigationApiOfDisposedEntries_Name,
        codec.align(LocalFrame_NotifyNavigationApiOfDisposedEntries_Params.encodedSize));
    builder.encodeStruct(LocalFrame_NotifyNavigationApiOfDisposedEntries_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.traverseCancelled = function() {
    return LocalFrameProxy.prototype.traverseCancelled
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.traverseCancelled = function(navigationApiKey, reason) {
    var params_ = new LocalFrame_TraverseCancelled_Params();
    params_.navigationApiKey = navigationApiKey;
    params_.reason = reason;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_TraverseCancelled_Name,
        codec.align(LocalFrame_TraverseCancelled_Params.encodedSize));
    builder.encodeStruct(LocalFrame_TraverseCancelled_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.snapshotDocumentForViewTransition = function() {
    return LocalFrameProxy.prototype.snapshotDocumentForViewTransition
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.snapshotDocumentForViewTransition = function() {
    var params_ = new LocalFrame_SnapshotDocumentForViewTransition_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalFrame_SnapshotDocumentForViewTransition_Name,
          codec.align(LocalFrame_SnapshotDocumentForViewTransition_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalFrame_SnapshotDocumentForViewTransition_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalFrame_SnapshotDocumentForViewTransition_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalFramePtr.prototype.addResourceTimingEntryForFailedSubframeNavigation = function() {
    return LocalFrameProxy.prototype.addResourceTimingEntryForFailedSubframeNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.addResourceTimingEntryForFailedSubframeNavigation = function(subframeToken, initialUrl, startTime, redirectTime, requestStart, responseStart, responseCode, mimeType, loadTimingInfo, connectionInfo, alpnNegotiatedProtocol, isSecureTransport, isValidated, normalizedServerTiming, completionStatus) {
    var params_ = new LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params();
    params_.subframeToken = subframeToken;
    params_.initialUrl = initialUrl;
    params_.startTime = startTime;
    params_.redirectTime = redirectTime;
    params_.requestStart = requestStart;
    params_.responseStart = responseStart;
    params_.responseCode = responseCode;
    params_.mimeType = mimeType;
    params_.loadTimingInfo = loadTimingInfo;
    params_.connectionInfo = connectionInfo;
    params_.alpnNegotiatedProtocol = alpnNegotiatedProtocol;
    params_.isSecureTransport = isSecureTransport;
    params_.isValidated = isValidated;
    params_.normalizedServerTiming = normalizedServerTiming;
    params_.completionStatus = completionStatus;
    var builder = new codec.MessageV0Builder(
        kLocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Name,
        codec.align(LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params.encodedSize));
    builder.encodeStruct(LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalFramePtr.prototype.requestFullscreenDocumentElement = function() {
    return LocalFrameProxy.prototype.requestFullscreenDocumentElement
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalFrameProxy.prototype.requestFullscreenDocumentElement = function() {
    var params_ = new LocalFrame_RequestFullscreenDocumentElement_Params();
    var builder = new codec.MessageV0Builder(
        kLocalFrame_RequestFullscreenDocumentElement_Name,
        codec.align(LocalFrame_RequestFullscreenDocumentElement_Params.encodedSize));
    builder.encodeStruct(LocalFrame_RequestFullscreenDocumentElement_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function LocalFrameStub(delegate) {
    this.delegate_ = delegate;
  }
  LocalFrameStub.prototype.getTextSurroundingSelection = function(maxLength) {
    return this.delegate_ && this.delegate_.getTextSurroundingSelection && this.delegate_.getTextSurroundingSelection(maxLength);
  }
  LocalFrameStub.prototype.sendInterventionReport = function(id, message) {
    return this.delegate_ && this.delegate_.sendInterventionReport && this.delegate_.sendInterventionReport(id, message);
  }
  LocalFrameStub.prototype.setFrameOwnerProperties = function(properties) {
    return this.delegate_ && this.delegate_.setFrameOwnerProperties && this.delegate_.setFrameOwnerProperties(properties);
  }
  LocalFrameStub.prototype.notifyUserActivation = function(notificationType) {
    return this.delegate_ && this.delegate_.notifyUserActivation && this.delegate_.notifyUserActivation(notificationType);
  }
  LocalFrameStub.prototype.notifyVirtualKeyboardOverlayRect = function(keyboardRect) {
    return this.delegate_ && this.delegate_.notifyVirtualKeyboardOverlayRect && this.delegate_.notifyVirtualKeyboardOverlayRect(keyboardRect);
  }
  LocalFrameStub.prototype.addMessageToConsole = function(level, message, discardDuplicates) {
    return this.delegate_ && this.delegate_.addMessageToConsole && this.delegate_.addMessageToConsole(level, message, discardDuplicates);
  }
  LocalFrameStub.prototype.addInspectorIssue = function(info) {
    return this.delegate_ && this.delegate_.addInspectorIssue && this.delegate_.addInspectorIssue(info);
  }
  LocalFrameStub.prototype.swapInImmediately = function() {
    return this.delegate_ && this.delegate_.swapInImmediately && this.delegate_.swapInImmediately();
  }
  LocalFrameStub.prototype.checkCompleted = function() {
    return this.delegate_ && this.delegate_.checkCompleted && this.delegate_.checkCompleted();
  }
  LocalFrameStub.prototype.stopLoading = function() {
    return this.delegate_ && this.delegate_.stopLoading && this.delegate_.stopLoading();
  }
  LocalFrameStub.prototype.collapse = function(collapsed) {
    return this.delegate_ && this.delegate_.collapse && this.delegate_.collapse(collapsed);
  }
  LocalFrameStub.prototype.enableViewSourceMode = function() {
    return this.delegate_ && this.delegate_.enableViewSourceMode && this.delegate_.enableViewSourceMode();
  }
  LocalFrameStub.prototype.focus = function() {
    return this.delegate_ && this.delegate_.focus && this.delegate_.focus();
  }
  LocalFrameStub.prototype.clearFocusedElement = function() {
    return this.delegate_ && this.delegate_.clearFocusedElement && this.delegate_.clearFocusedElement();
  }
  LocalFrameStub.prototype.copyImageAt = function(windowPoint) {
    return this.delegate_ && this.delegate_.copyImageAt && this.delegate_.copyImageAt(windowPoint);
  }
  LocalFrameStub.prototype.saveImageAt = function(windowPoint) {
    return this.delegate_ && this.delegate_.saveImageAt && this.delegate_.saveImageAt(windowPoint);
  }
  LocalFrameStub.prototype.reportBlinkFeatureUsage = function(features) {
    return this.delegate_ && this.delegate_.reportBlinkFeatureUsage && this.delegate_.reportBlinkFeatureUsage(features);
  }
  LocalFrameStub.prototype.renderFallbackContent = function() {
    return this.delegate_ && this.delegate_.renderFallbackContent && this.delegate_.renderFallbackContent();
  }
  LocalFrameStub.prototype.beforeUnload = function(isReload) {
    return this.delegate_ && this.delegate_.beforeUnload && this.delegate_.beforeUnload(isReload);
  }
  LocalFrameStub.prototype.mediaPlayerActionAt = function(location, action) {
    return this.delegate_ && this.delegate_.mediaPlayerActionAt && this.delegate_.mediaPlayerActionAt(location, action);
  }
  LocalFrameStub.prototype.pluginActionAt = function(location, action) {
    return this.delegate_ && this.delegate_.pluginActionAt && this.delegate_.pluginActionAt(location, action);
  }
  LocalFrameStub.prototype.advanceFocusInFrame = function(focusType, sourceFrameToken) {
    return this.delegate_ && this.delegate_.advanceFocusInFrame && this.delegate_.advanceFocusInFrame(focusType, sourceFrameToken);
  }
  LocalFrameStub.prototype.advanceFocusForIME = function(focusType) {
    return this.delegate_ && this.delegate_.advanceFocusForIME && this.delegate_.advanceFocusForIME(focusType);
  }
  LocalFrameStub.prototype.reportContentSecurityPolicyViolation = function(violation) {
    return this.delegate_ && this.delegate_.reportContentSecurityPolicyViolation && this.delegate_.reportContentSecurityPolicyViolation(violation);
  }
  LocalFrameStub.prototype.didUpdateFramePolicy = function(framePolicy) {
    return this.delegate_ && this.delegate_.didUpdateFramePolicy && this.delegate_.didUpdateFramePolicy(framePolicy);
  }
  LocalFrameStub.prototype.postMessageEvent = function(sourceFrameToken, sourceOrigin, targetOrigin, message) {
    return this.delegate_ && this.delegate_.postMessageEvent && this.delegate_.postMessageEvent(sourceFrameToken, sourceOrigin, targetOrigin, message);
  }
  LocalFrameStub.prototype.javaScriptMethodExecuteRequest = function(objectName, methodName, arguments_, wantsResult) {
    return this.delegate_ && this.delegate_.javaScriptMethodExecuteRequest && this.delegate_.javaScriptMethodExecuteRequest(objectName, methodName, arguments_, wantsResult);
  }
  LocalFrameStub.prototype.javaScriptExecuteRequest = function(javascript, wantsResult) {
    return this.delegate_ && this.delegate_.javaScriptExecuteRequest && this.delegate_.javaScriptExecuteRequest(javascript, wantsResult);
  }
  LocalFrameStub.prototype.javaScriptExecuteRequestForTests = function(javascript, hasUserGesture, resolvePromises, worldId) {
    return this.delegate_ && this.delegate_.javaScriptExecuteRequestForTests && this.delegate_.javaScriptExecuteRequestForTests(javascript, hasUserGesture, resolvePromises, worldId);
  }
  LocalFrameStub.prototype.javaScriptExecuteRequestInIsolatedWorld = function(javascript, wantsResult, worldId) {
    return this.delegate_ && this.delegate_.javaScriptExecuteRequestInIsolatedWorld && this.delegate_.javaScriptExecuteRequestInIsolatedWorld(javascript, wantsResult, worldId);
  }
  LocalFrameStub.prototype.bindReportingObserver = function(receiver) {
    return this.delegate_ && this.delegate_.bindReportingObserver && this.delegate_.bindReportingObserver(receiver);
  }
  LocalFrameStub.prototype.updateOpener = function(openerFrameToken) {
    return this.delegate_ && this.delegate_.updateOpener && this.delegate_.updateOpener(openerFrameToken);
  }
  LocalFrameStub.prototype.getSavableResourceLinks = function() {
    return this.delegate_ && this.delegate_.getSavableResourceLinks && this.delegate_.getSavableResourceLinks();
  }
  LocalFrameStub.prototype.mixedContentFound = function(mainResourceUrl, mixedContentUrl, requestContext, wasAllowed, urlBeforeRedirects, hadRedirect, sourceLocation) {
    return this.delegate_ && this.delegate_.mixedContentFound && this.delegate_.mixedContentFound(mainResourceUrl, mixedContentUrl, requestContext, wasAllowed, urlBeforeRedirects, hadRedirect, sourceLocation);
  }
  LocalFrameStub.prototype.bindDevToolsAgent = function(agentHost, agent) {
    return this.delegate_ && this.delegate_.bindDevToolsAgent && this.delegate_.bindDevToolsAgent(agentHost, agent);
  }
  LocalFrameStub.prototype.handleRendererDebugURL = function(url) {
    return this.delegate_ && this.delegate_.handleRendererDebugURL && this.delegate_.handleRendererDebugURL(url);
  }
  LocalFrameStub.prototype.getCanonicalUrlForSharing = function() {
    return this.delegate_ && this.delegate_.getCanonicalUrlForSharing && this.delegate_.getCanonicalUrlForSharing();
  }
  LocalFrameStub.prototype.getOpenGraphMetadata = function() {
    return this.delegate_ && this.delegate_.getOpenGraphMetadata && this.delegate_.getOpenGraphMetadata();
  }
  LocalFrameStub.prototype.setNavigationApiHistoryEntriesForRestore = function(entryArrays) {
    return this.delegate_ && this.delegate_.setNavigationApiHistoryEntriesForRestore && this.delegate_.setNavigationApiHistoryEntriesForRestore(entryArrays);
  }
  LocalFrameStub.prototype.notifyNavigationApiOfDisposedEntries = function(keys) {
    return this.delegate_ && this.delegate_.notifyNavigationApiOfDisposedEntries && this.delegate_.notifyNavigationApiOfDisposedEntries(keys);
  }
  LocalFrameStub.prototype.traverseCancelled = function(navigationApiKey, reason) {
    return this.delegate_ && this.delegate_.traverseCancelled && this.delegate_.traverseCancelled(navigationApiKey, reason);
  }
  LocalFrameStub.prototype.snapshotDocumentForViewTransition = function() {
    return this.delegate_ && this.delegate_.snapshotDocumentForViewTransition && this.delegate_.snapshotDocumentForViewTransition();
  }
  LocalFrameStub.prototype.addResourceTimingEntryForFailedSubframeNavigation = function(subframeToken, initialUrl, startTime, redirectTime, requestStart, responseStart, responseCode, mimeType, loadTimingInfo, connectionInfo, alpnNegotiatedProtocol, isSecureTransport, isValidated, normalizedServerTiming, completionStatus) {
    return this.delegate_ && this.delegate_.addResourceTimingEntryForFailedSubframeNavigation && this.delegate_.addResourceTimingEntryForFailedSubframeNavigation(subframeToken, initialUrl, startTime, redirectTime, requestStart, responseStart, responseCode, mimeType, loadTimingInfo, connectionInfo, alpnNegotiatedProtocol, isSecureTransport, isValidated, normalizedServerTiming, completionStatus);
  }
  LocalFrameStub.prototype.requestFullscreenDocumentElement = function() {
    return this.delegate_ && this.delegate_.requestFullscreenDocumentElement && this.delegate_.requestFullscreenDocumentElement();
  }

  LocalFrameStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalFrame_SendInterventionReport_Name:
      var params = reader.decodeStruct(LocalFrame_SendInterventionReport_Params);
      this.sendInterventionReport(params.id, params.message);
      return true;
    case kLocalFrame_SetFrameOwnerProperties_Name:
      var params = reader.decodeStruct(LocalFrame_SetFrameOwnerProperties_Params);
      this.setFrameOwnerProperties(params.properties);
      return true;
    case kLocalFrame_NotifyUserActivation_Name:
      var params = reader.decodeStruct(LocalFrame_NotifyUserActivation_Params);
      this.notifyUserActivation(params.notificationType);
      return true;
    case kLocalFrame_NotifyVirtualKeyboardOverlayRect_Name:
      var params = reader.decodeStruct(LocalFrame_NotifyVirtualKeyboardOverlayRect_Params);
      this.notifyVirtualKeyboardOverlayRect(params.keyboardRect);
      return true;
    case kLocalFrame_AddMessageToConsole_Name:
      var params = reader.decodeStruct(LocalFrame_AddMessageToConsole_Params);
      this.addMessageToConsole(params.level, params.message, params.discardDuplicates);
      return true;
    case kLocalFrame_AddInspectorIssue_Name:
      var params = reader.decodeStruct(LocalFrame_AddInspectorIssue_Params);
      this.addInspectorIssue(params.info);
      return true;
    case kLocalFrame_SwapInImmediately_Name:
      var params = reader.decodeStruct(LocalFrame_SwapInImmediately_Params);
      this.swapInImmediately();
      return true;
    case kLocalFrame_CheckCompleted_Name:
      var params = reader.decodeStruct(LocalFrame_CheckCompleted_Params);
      this.checkCompleted();
      return true;
    case kLocalFrame_StopLoading_Name:
      var params = reader.decodeStruct(LocalFrame_StopLoading_Params);
      this.stopLoading();
      return true;
    case kLocalFrame_Collapse_Name:
      var params = reader.decodeStruct(LocalFrame_Collapse_Params);
      this.collapse(params.collapsed);
      return true;
    case kLocalFrame_EnableViewSourceMode_Name:
      var params = reader.decodeStruct(LocalFrame_EnableViewSourceMode_Params);
      this.enableViewSourceMode();
      return true;
    case kLocalFrame_Focus_Name:
      var params = reader.decodeStruct(LocalFrame_Focus_Params);
      this.focus();
      return true;
    case kLocalFrame_ClearFocusedElement_Name:
      var params = reader.decodeStruct(LocalFrame_ClearFocusedElement_Params);
      this.clearFocusedElement();
      return true;
    case kLocalFrame_CopyImageAt_Name:
      var params = reader.decodeStruct(LocalFrame_CopyImageAt_Params);
      this.copyImageAt(params.windowPoint);
      return true;
    case kLocalFrame_SaveImageAt_Name:
      var params = reader.decodeStruct(LocalFrame_SaveImageAt_Params);
      this.saveImageAt(params.windowPoint);
      return true;
    case kLocalFrame_ReportBlinkFeatureUsage_Name:
      var params = reader.decodeStruct(LocalFrame_ReportBlinkFeatureUsage_Params);
      this.reportBlinkFeatureUsage(params.features);
      return true;
    case kLocalFrame_RenderFallbackContent_Name:
      var params = reader.decodeStruct(LocalFrame_RenderFallbackContent_Params);
      this.renderFallbackContent();
      return true;
    case kLocalFrame_MediaPlayerActionAt_Name:
      var params = reader.decodeStruct(LocalFrame_MediaPlayerActionAt_Params);
      this.mediaPlayerActionAt(params.location, params.action);
      return true;
    case kLocalFrame_PluginActionAt_Name:
      var params = reader.decodeStruct(LocalFrame_PluginActionAt_Params);
      this.pluginActionAt(params.location, params.action);
      return true;
    case kLocalFrame_AdvanceFocusInFrame_Name:
      var params = reader.decodeStruct(LocalFrame_AdvanceFocusInFrame_Params);
      this.advanceFocusInFrame(params.focusType, params.sourceFrameToken);
      return true;
    case kLocalFrame_AdvanceFocusForIME_Name:
      var params = reader.decodeStruct(LocalFrame_AdvanceFocusForIME_Params);
      this.advanceFocusForIME(params.focusType);
      return true;
    case kLocalFrame_ReportContentSecurityPolicyViolation_Name:
      var params = reader.decodeStruct(LocalFrame_ReportContentSecurityPolicyViolation_Params);
      this.reportContentSecurityPolicyViolation(params.violation);
      return true;
    case kLocalFrame_DidUpdateFramePolicy_Name:
      var params = reader.decodeStruct(LocalFrame_DidUpdateFramePolicy_Params);
      this.didUpdateFramePolicy(params.framePolicy);
      return true;
    case kLocalFrame_PostMessageEvent_Name:
      var params = reader.decodeStruct(LocalFrame_PostMessageEvent_Params);
      this.postMessageEvent(params.sourceFrameToken, params.sourceOrigin, params.targetOrigin, params.message);
      return true;
    case kLocalFrame_BindReportingObserver_Name:
      var params = reader.decodeStruct(LocalFrame_BindReportingObserver_Params);
      this.bindReportingObserver(params.receiver);
      return true;
    case kLocalFrame_UpdateOpener_Name:
      var params = reader.decodeStruct(LocalFrame_UpdateOpener_Params);
      this.updateOpener(params.openerFrameToken);
      return true;
    case kLocalFrame_MixedContentFound_Name:
      var params = reader.decodeStruct(LocalFrame_MixedContentFound_Params);
      this.mixedContentFound(params.mainResourceUrl, params.mixedContentUrl, params.requestContext, params.wasAllowed, params.urlBeforeRedirects, params.hadRedirect, params.sourceLocation);
      return true;
    case kLocalFrame_BindDevToolsAgent_Name:
      var params = reader.decodeStruct(LocalFrame_BindDevToolsAgent_Params);
      this.bindDevToolsAgent(params.agentHost, params.agent);
      return true;
    case kLocalFrame_HandleRendererDebugURL_Name:
      var params = reader.decodeStruct(LocalFrame_HandleRendererDebugURL_Params);
      this.handleRendererDebugURL(params.url);
      return true;
    case kLocalFrame_SetNavigationApiHistoryEntriesForRestore_Name:
      var params = reader.decodeStruct(LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params);
      this.setNavigationApiHistoryEntriesForRestore(params.entryArrays);
      return true;
    case kLocalFrame_NotifyNavigationApiOfDisposedEntries_Name:
      var params = reader.decodeStruct(LocalFrame_NotifyNavigationApiOfDisposedEntries_Params);
      this.notifyNavigationApiOfDisposedEntries(params.keys);
      return true;
    case kLocalFrame_TraverseCancelled_Name:
      var params = reader.decodeStruct(LocalFrame_TraverseCancelled_Params);
      this.traverseCancelled(params.navigationApiKey, params.reason);
      return true;
    case kLocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Name:
      var params = reader.decodeStruct(LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params);
      this.addResourceTimingEntryForFailedSubframeNavigation(params.subframeToken, params.initialUrl, params.startTime, params.redirectTime, params.requestStart, params.responseStart, params.responseCode, params.mimeType, params.loadTimingInfo, params.connectionInfo, params.alpnNegotiatedProtocol, params.isSecureTransport, params.isValidated, params.normalizedServerTiming, params.completionStatus);
      return true;
    case kLocalFrame_RequestFullscreenDocumentElement_Name:
      var params = reader.decodeStruct(LocalFrame_RequestFullscreenDocumentElement_Params);
      this.requestFullscreenDocumentElement();
      return true;
    default:
      return false;
    }
  };

  LocalFrameStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalFrame_GetTextSurroundingSelection_Name:
      var params = reader.decodeStruct(LocalFrame_GetTextSurroundingSelection_Params);
      this.getTextSurroundingSelection(params.maxLength).then(function(response) {
        var responseParams =
            new LocalFrame_GetTextSurroundingSelection_ResponseParams();
        responseParams.content = response.content;
        responseParams.startOffset = response.startOffset;
        responseParams.endOffset = response.endOffset;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_GetTextSurroundingSelection_Name,
            codec.align(LocalFrame_GetTextSurroundingSelection_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_GetTextSurroundingSelection_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_BeforeUnload_Name:
      var params = reader.decodeStruct(LocalFrame_BeforeUnload_Params);
      this.beforeUnload(params.isReload).then(function(response) {
        var responseParams =
            new LocalFrame_BeforeUnload_ResponseParams();
        responseParams.proceed = response.proceed;
        responseParams.beforeUnloadStartTime = response.beforeUnloadStartTime;
        responseParams.beforeUnloadEndTime = response.beforeUnloadEndTime;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_BeforeUnload_Name,
            codec.align(LocalFrame_BeforeUnload_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_BeforeUnload_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_JavaScriptMethodExecuteRequest_Name:
      var params = reader.decodeStruct(LocalFrame_JavaScriptMethodExecuteRequest_Params);
      this.javaScriptMethodExecuteRequest(params.objectName, params.methodName, params.arguments, params.wantsResult).then(function(response) {
        var responseParams =
            new LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams();
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_JavaScriptMethodExecuteRequest_Name,
            codec.align(LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_JavaScriptExecuteRequest_Name:
      var params = reader.decodeStruct(LocalFrame_JavaScriptExecuteRequest_Params);
      this.javaScriptExecuteRequest(params.javascript, params.wantsResult).then(function(response) {
        var responseParams =
            new LocalFrame_JavaScriptExecuteRequest_ResponseParams();
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_JavaScriptExecuteRequest_Name,
            codec.align(LocalFrame_JavaScriptExecuteRequest_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_JavaScriptExecuteRequest_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_JavaScriptExecuteRequestForTests_Name:
      var params = reader.decodeStruct(LocalFrame_JavaScriptExecuteRequestForTests_Params);
      this.javaScriptExecuteRequestForTests(params.javascript, params.hasUserGesture, params.resolvePromises, params.worldId).then(function(response) {
        var responseParams =
            new LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams();
        responseParams.resultType = response.resultType;
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_JavaScriptExecuteRequestForTests_Name,
            codec.align(LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name:
      var params = reader.decodeStruct(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params);
      this.javaScriptExecuteRequestInIsolatedWorld(params.javascript, params.wantsResult, params.worldId).then(function(response) {
        var responseParams =
            new LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams();
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name,
            codec.align(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_GetSavableResourceLinks_Name:
      var params = reader.decodeStruct(LocalFrame_GetSavableResourceLinks_Params);
      this.getSavableResourceLinks().then(function(response) {
        var responseParams =
            new LocalFrame_GetSavableResourceLinks_ResponseParams();
        responseParams.reply = response.reply;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_GetSavableResourceLinks_Name,
            codec.align(LocalFrame_GetSavableResourceLinks_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_GetSavableResourceLinks_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_GetCanonicalUrlForSharing_Name:
      var params = reader.decodeStruct(LocalFrame_GetCanonicalUrlForSharing_Params);
      this.getCanonicalUrlForSharing().then(function(response) {
        var responseParams =
            new LocalFrame_GetCanonicalUrlForSharing_ResponseParams();
        responseParams.canonicalUrl = response.canonicalUrl;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_GetCanonicalUrlForSharing_Name,
            codec.align(LocalFrame_GetCanonicalUrlForSharing_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_GetCanonicalUrlForSharing_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_GetOpenGraphMetadata_Name:
      var params = reader.decodeStruct(LocalFrame_GetOpenGraphMetadata_Params);
      this.getOpenGraphMetadata().then(function(response) {
        var responseParams =
            new LocalFrame_GetOpenGraphMetadata_ResponseParams();
        responseParams.metadata = response.metadata;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_GetOpenGraphMetadata_Name,
            codec.align(LocalFrame_GetOpenGraphMetadata_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_GetOpenGraphMetadata_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalFrame_SnapshotDocumentForViewTransition_Name:
      var params = reader.decodeStruct(LocalFrame_SnapshotDocumentForViewTransition_Params);
      this.snapshotDocumentForViewTransition().then(function(response) {
        var responseParams =
            new LocalFrame_SnapshotDocumentForViewTransition_ResponseParams();
        responseParams.viewTransitionState = response.viewTransitionState;
        var builder = new codec.MessageV1Builder(
            kLocalFrame_SnapshotDocumentForViewTransition_Name,
            codec.align(LocalFrame_SnapshotDocumentForViewTransition_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalFrame_SnapshotDocumentForViewTransition_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateLocalFrameRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kLocalFrame_GetTextSurroundingSelection_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_GetTextSurroundingSelection_Params;
      break;
      case kLocalFrame_SendInterventionReport_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_SendInterventionReport_Params;
      break;
      case kLocalFrame_SetFrameOwnerProperties_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_SetFrameOwnerProperties_Params;
      break;
      case kLocalFrame_NotifyUserActivation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_NotifyUserActivation_Params;
      break;
      case kLocalFrame_NotifyVirtualKeyboardOverlayRect_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_NotifyVirtualKeyboardOverlayRect_Params;
      break;
      case kLocalFrame_AddMessageToConsole_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_AddMessageToConsole_Params;
      break;
      case kLocalFrame_AddInspectorIssue_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_AddInspectorIssue_Params;
      break;
      case kLocalFrame_SwapInImmediately_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_SwapInImmediately_Params;
      break;
      case kLocalFrame_CheckCompleted_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_CheckCompleted_Params;
      break;
      case kLocalFrame_StopLoading_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_StopLoading_Params;
      break;
      case kLocalFrame_Collapse_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_Collapse_Params;
      break;
      case kLocalFrame_EnableViewSourceMode_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_EnableViewSourceMode_Params;
      break;
      case kLocalFrame_Focus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_Focus_Params;
      break;
      case kLocalFrame_ClearFocusedElement_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_ClearFocusedElement_Params;
      break;
      case kLocalFrame_CopyImageAt_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_CopyImageAt_Params;
      break;
      case kLocalFrame_SaveImageAt_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_SaveImageAt_Params;
      break;
      case kLocalFrame_ReportBlinkFeatureUsage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_ReportBlinkFeatureUsage_Params;
      break;
      case kLocalFrame_RenderFallbackContent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_RenderFallbackContent_Params;
      break;
      case kLocalFrame_BeforeUnload_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_BeforeUnload_Params;
      break;
      case kLocalFrame_MediaPlayerActionAt_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_MediaPlayerActionAt_Params;
      break;
      case kLocalFrame_PluginActionAt_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_PluginActionAt_Params;
      break;
      case kLocalFrame_AdvanceFocusInFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_AdvanceFocusInFrame_Params;
      break;
      case kLocalFrame_AdvanceFocusForIME_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_AdvanceFocusForIME_Params;
      break;
      case kLocalFrame_ReportContentSecurityPolicyViolation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_ReportContentSecurityPolicyViolation_Params;
      break;
      case kLocalFrame_DidUpdateFramePolicy_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_DidUpdateFramePolicy_Params;
      break;
      case kLocalFrame_PostMessageEvent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_PostMessageEvent_Params;
      break;
      case kLocalFrame_JavaScriptMethodExecuteRequest_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_JavaScriptMethodExecuteRequest_Params;
      break;
      case kLocalFrame_JavaScriptExecuteRequest_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequest_Params;
      break;
      case kLocalFrame_JavaScriptExecuteRequestForTests_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequestForTests_Params;
      break;
      case kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Params;
      break;
      case kLocalFrame_BindReportingObserver_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_BindReportingObserver_Params;
      break;
      case kLocalFrame_UpdateOpener_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_UpdateOpener_Params;
      break;
      case kLocalFrame_GetSavableResourceLinks_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_GetSavableResourceLinks_Params;
      break;
      case kLocalFrame_MixedContentFound_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_MixedContentFound_Params;
      break;
      case kLocalFrame_BindDevToolsAgent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_BindDevToolsAgent_Params;
      break;
      case kLocalFrame_HandleRendererDebugURL_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_HandleRendererDebugURL_Params;
      break;
      case kLocalFrame_GetCanonicalUrlForSharing_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_GetCanonicalUrlForSharing_Params;
      break;
      case kLocalFrame_GetOpenGraphMetadata_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_GetOpenGraphMetadata_Params;
      break;
      case kLocalFrame_SetNavigationApiHistoryEntriesForRestore_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_SetNavigationApiHistoryEntriesForRestore_Params;
      break;
      case kLocalFrame_NotifyNavigationApiOfDisposedEntries_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_NotifyNavigationApiOfDisposedEntries_Params;
      break;
      case kLocalFrame_TraverseCancelled_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_TraverseCancelled_Params;
      break;
      case kLocalFrame_SnapshotDocumentForViewTransition_Name:
        if (message.expectsResponse())
          paramsClass = LocalFrame_SnapshotDocumentForViewTransition_Params;
      break;
      case kLocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_AddResourceTimingEntryForFailedSubframeNavigation_Params;
      break;
      case kLocalFrame_RequestFullscreenDocumentElement_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalFrame_RequestFullscreenDocumentElement_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateLocalFrameResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kLocalFrame_GetTextSurroundingSelection_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_GetTextSurroundingSelection_ResponseParams;
        break;
      case kLocalFrame_BeforeUnload_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_BeforeUnload_ResponseParams;
        break;
      case kLocalFrame_JavaScriptMethodExecuteRequest_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_JavaScriptMethodExecuteRequest_ResponseParams;
        break;
      case kLocalFrame_JavaScriptExecuteRequest_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequest_ResponseParams;
        break;
      case kLocalFrame_JavaScriptExecuteRequestForTests_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequestForTests_ResponseParams;
        break;
      case kLocalFrame_JavaScriptExecuteRequestInIsolatedWorld_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_JavaScriptExecuteRequestInIsolatedWorld_ResponseParams;
        break;
      case kLocalFrame_GetSavableResourceLinks_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_GetSavableResourceLinks_ResponseParams;
        break;
      case kLocalFrame_GetCanonicalUrlForSharing_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_GetCanonicalUrlForSharing_ResponseParams;
        break;
      case kLocalFrame_GetOpenGraphMetadata_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_GetOpenGraphMetadata_ResponseParams;
        break;
      case kLocalFrame_SnapshotDocumentForViewTransition_Name:
        if (message.isResponse())
          paramsClass = LocalFrame_SnapshotDocumentForViewTransition_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var LocalFrame = {
    name: 'blink.mojom.LocalFrame',
    kVersion: 0,
    ptrClass: LocalFramePtr,
    proxyClass: LocalFrameProxy,
    stubClass: LocalFrameStub,
    validateRequest: validateLocalFrameRequest,
    validateResponse: validateLocalFrameResponse,
  };
  LocalFrameStub.prototype.validator = validateLocalFrameRequest;
  LocalFrameProxy.prototype.validator = validateLocalFrameResponse;
  var kHighPriorityLocalFrame_DispatchBeforeUnload_Name = 1926792483;

  function HighPriorityLocalFramePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(HighPriorityLocalFrame,
                                                   handleOrPtrInfo);
  }

  function HighPriorityLocalFrameAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        HighPriorityLocalFrame, associatedInterfacePtrInfo);
  }

  HighPriorityLocalFrameAssociatedPtr.prototype =
      Object.create(HighPriorityLocalFramePtr.prototype);
  HighPriorityLocalFrameAssociatedPtr.prototype.constructor =
      HighPriorityLocalFrameAssociatedPtr;

  function HighPriorityLocalFrameProxy(receiver) {
    this.receiver_ = receiver;
  }
  HighPriorityLocalFramePtr.prototype.dispatchBeforeUnload = function() {
    return HighPriorityLocalFrameProxy.prototype.dispatchBeforeUnload
        .apply(this.ptr.getProxy(), arguments);
  };

  HighPriorityLocalFrameProxy.prototype.dispatchBeforeUnload = function(isReload) {
    var params_ = new HighPriorityLocalFrame_DispatchBeforeUnload_Params();
    params_.isReload = isReload;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kHighPriorityLocalFrame_DispatchBeforeUnload_Name,
          codec.align(HighPriorityLocalFrame_DispatchBeforeUnload_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(HighPriorityLocalFrame_DispatchBeforeUnload_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function HighPriorityLocalFrameStub(delegate) {
    this.delegate_ = delegate;
  }
  HighPriorityLocalFrameStub.prototype.dispatchBeforeUnload = function(isReload) {
    return this.delegate_ && this.delegate_.dispatchBeforeUnload && this.delegate_.dispatchBeforeUnload(isReload);
  }

  HighPriorityLocalFrameStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  HighPriorityLocalFrameStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kHighPriorityLocalFrame_DispatchBeforeUnload_Name:
      var params = reader.decodeStruct(HighPriorityLocalFrame_DispatchBeforeUnload_Params);
      this.dispatchBeforeUnload(params.isReload).then(function(response) {
        var responseParams =
            new HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams();
        responseParams.proceed = response.proceed;
        responseParams.beforeUnloadStartTime = response.beforeUnloadStartTime;
        responseParams.beforeUnloadEndTime = response.beforeUnloadEndTime;
        var builder = new codec.MessageV1Builder(
            kHighPriorityLocalFrame_DispatchBeforeUnload_Name,
            codec.align(HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateHighPriorityLocalFrameRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kHighPriorityLocalFrame_DispatchBeforeUnload_Name:
        if (message.expectsResponse())
          paramsClass = HighPriorityLocalFrame_DispatchBeforeUnload_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateHighPriorityLocalFrameResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kHighPriorityLocalFrame_DispatchBeforeUnload_Name:
        if (message.isResponse())
          paramsClass = HighPriorityLocalFrame_DispatchBeforeUnload_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var HighPriorityLocalFrame = {
    name: 'blink.mojom.HighPriorityLocalFrame',
    kVersion: 0,
    ptrClass: HighPriorityLocalFramePtr,
    proxyClass: HighPriorityLocalFrameProxy,
    stubClass: HighPriorityLocalFrameStub,
    validateRequest: validateHighPriorityLocalFrameRequest,
    validateResponse: validateHighPriorityLocalFrameResponse,
  };
  HighPriorityLocalFrameStub.prototype.validator = validateHighPriorityLocalFrameRequest;
  HighPriorityLocalFrameProxy.prototype.validator = validateHighPriorityLocalFrameResponse;
  var kLocalMainFrame_AnimateDoubleTapZoom_Name = 1494939577;
  var kLocalMainFrame_SetScaleFactor_Name = 961345097;
  var kLocalMainFrame_ClosePage_Name = 1582411975;
  var kLocalMainFrame_GetFullPageSize_Name = 1641914443;
  var kLocalMainFrame_SetInitialFocus_Name = 1438247119;
  var kLocalMainFrame_EnablePreferredSizeChangedMode_Name = 223733907;
  var kLocalMainFrame_ZoomToFindInPageRect_Name = 1234689293;
  var kLocalMainFrame_InstallCoopAccessMonitor_Name = 212425091;
  var kLocalMainFrame_OnPortalActivated_Name = 970785091;
  var kLocalMainFrame_ForwardMessageFromHost_Name = 1675430276;
  var kLocalMainFrame_UpdateBrowserControlsState_Name = 1800179658;
  var kLocalMainFrame_SetV8CompileHints_Name = 1790803958;

  function LocalMainFramePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(LocalMainFrame,
                                                   handleOrPtrInfo);
  }

  function LocalMainFrameAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        LocalMainFrame, associatedInterfacePtrInfo);
  }

  LocalMainFrameAssociatedPtr.prototype =
      Object.create(LocalMainFramePtr.prototype);
  LocalMainFrameAssociatedPtr.prototype.constructor =
      LocalMainFrameAssociatedPtr;

  function LocalMainFrameProxy(receiver) {
    this.receiver_ = receiver;
  }
  LocalMainFramePtr.prototype.animateDoubleTapZoom = function() {
    return LocalMainFrameProxy.prototype.animateDoubleTapZoom
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.animateDoubleTapZoom = function(point, rect) {
    var params_ = new LocalMainFrame_AnimateDoubleTapZoom_Params();
    params_.point = point;
    params_.rect = rect;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_AnimateDoubleTapZoom_Name,
        codec.align(LocalMainFrame_AnimateDoubleTapZoom_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_AnimateDoubleTapZoom_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.setScaleFactor = function() {
    return LocalMainFrameProxy.prototype.setScaleFactor
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.setScaleFactor = function(scale) {
    var params_ = new LocalMainFrame_SetScaleFactor_Params();
    params_.scale = scale;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_SetScaleFactor_Name,
        codec.align(LocalMainFrame_SetScaleFactor_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_SetScaleFactor_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.closePage = function() {
    return LocalMainFrameProxy.prototype.closePage
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.closePage = function() {
    var params_ = new LocalMainFrame_ClosePage_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalMainFrame_ClosePage_Name,
          codec.align(LocalMainFrame_ClosePage_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalMainFrame_ClosePage_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrame_ClosePage_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFramePtr.prototype.getFullPageSize = function() {
    return LocalMainFrameProxy.prototype.getFullPageSize
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.getFullPageSize = function() {
    var params_ = new LocalMainFrame_GetFullPageSize_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalMainFrame_GetFullPageSize_Name,
          codec.align(LocalMainFrame_GetFullPageSize_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalMainFrame_GetFullPageSize_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrame_GetFullPageSize_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFramePtr.prototype.setInitialFocus = function() {
    return LocalMainFrameProxy.prototype.setInitialFocus
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.setInitialFocus = function(reverse) {
    var params_ = new LocalMainFrame_SetInitialFocus_Params();
    params_.reverse = reverse;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_SetInitialFocus_Name,
        codec.align(LocalMainFrame_SetInitialFocus_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_SetInitialFocus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.enablePreferredSizeChangedMode = function() {
    return LocalMainFrameProxy.prototype.enablePreferredSizeChangedMode
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.enablePreferredSizeChangedMode = function() {
    var params_ = new LocalMainFrame_EnablePreferredSizeChangedMode_Params();
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_EnablePreferredSizeChangedMode_Name,
        codec.align(LocalMainFrame_EnablePreferredSizeChangedMode_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_EnablePreferredSizeChangedMode_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.zoomToFindInPageRect = function() {
    return LocalMainFrameProxy.prototype.zoomToFindInPageRect
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.zoomToFindInPageRect = function(rectInRootFrame) {
    var params_ = new LocalMainFrame_ZoomToFindInPageRect_Params();
    params_.rectInRootFrame = rectInRootFrame;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_ZoomToFindInPageRect_Name,
        codec.align(LocalMainFrame_ZoomToFindInPageRect_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_ZoomToFindInPageRect_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.installCoopAccessMonitor = function() {
    return LocalMainFrameProxy.prototype.installCoopAccessMonitor
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.installCoopAccessMonitor = function(accessedWindow, coopReporterInfo, isInSameVirtualCoopRelatedGroup) {
    var params_ = new LocalMainFrame_InstallCoopAccessMonitor_Params();
    params_.accessedWindow = accessedWindow;
    params_.coopReporterInfo = coopReporterInfo;
    params_.isInSameVirtualCoopRelatedGroup = isInSameVirtualCoopRelatedGroup;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_InstallCoopAccessMonitor_Name,
        codec.align(LocalMainFrame_InstallCoopAccessMonitor_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_InstallCoopAccessMonitor_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.onPortalActivated = function() {
    return LocalMainFrameProxy.prototype.onPortalActivated
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.onPortalActivated = function(portalToken, portal, portalClient, data, traceId) {
    var params_ = new LocalMainFrame_OnPortalActivated_Params();
    params_.portalToken = portalToken;
    params_.portal = portal;
    params_.portalClient = portalClient;
    params_.data = data;
    params_.traceId = traceId;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV2Builder(
          kLocalMainFrame_OnPortalActivated_Name,
          codec.align(LocalMainFrame_OnPortalActivated_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.setPayload(LocalMainFrame_OnPortalActivated_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrame_OnPortalActivated_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFramePtr.prototype.forwardMessageFromHost = function() {
    return LocalMainFrameProxy.prototype.forwardMessageFromHost
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.forwardMessageFromHost = function(message, sourceOrigin) {
    var params_ = new LocalMainFrame_ForwardMessageFromHost_Params();
    params_.message = message;
    params_.sourceOrigin = sourceOrigin;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_ForwardMessageFromHost_Name,
        codec.align(LocalMainFrame_ForwardMessageFromHost_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_ForwardMessageFromHost_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.updateBrowserControlsState = function() {
    return LocalMainFrameProxy.prototype.updateBrowserControlsState
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.updateBrowserControlsState = function(constraints, current, animate) {
    var params_ = new LocalMainFrame_UpdateBrowserControlsState_Params();
    params_.constraints = constraints;
    params_.current = current;
    params_.animate = animate;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_UpdateBrowserControlsState_Name,
        codec.align(LocalMainFrame_UpdateBrowserControlsState_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_UpdateBrowserControlsState_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFramePtr.prototype.setV8CompileHints = function() {
    return LocalMainFrameProxy.prototype.setV8CompileHints
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameProxy.prototype.setV8CompileHints = function(data) {
    var params_ = new LocalMainFrame_SetV8CompileHints_Params();
    params_.data = data;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrame_SetV8CompileHints_Name,
        codec.align(LocalMainFrame_SetV8CompileHints_Params.encodedSize));
    builder.encodeStruct(LocalMainFrame_SetV8CompileHints_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function LocalMainFrameStub(delegate) {
    this.delegate_ = delegate;
  }
  LocalMainFrameStub.prototype.animateDoubleTapZoom = function(point, rect) {
    return this.delegate_ && this.delegate_.animateDoubleTapZoom && this.delegate_.animateDoubleTapZoom(point, rect);
  }
  LocalMainFrameStub.prototype.setScaleFactor = function(scale) {
    return this.delegate_ && this.delegate_.setScaleFactor && this.delegate_.setScaleFactor(scale);
  }
  LocalMainFrameStub.prototype.closePage = function() {
    return this.delegate_ && this.delegate_.closePage && this.delegate_.closePage();
  }
  LocalMainFrameStub.prototype.getFullPageSize = function() {
    return this.delegate_ && this.delegate_.getFullPageSize && this.delegate_.getFullPageSize();
  }
  LocalMainFrameStub.prototype.setInitialFocus = function(reverse) {
    return this.delegate_ && this.delegate_.setInitialFocus && this.delegate_.setInitialFocus(reverse);
  }
  LocalMainFrameStub.prototype.enablePreferredSizeChangedMode = function() {
    return this.delegate_ && this.delegate_.enablePreferredSizeChangedMode && this.delegate_.enablePreferredSizeChangedMode();
  }
  LocalMainFrameStub.prototype.zoomToFindInPageRect = function(rectInRootFrame) {
    return this.delegate_ && this.delegate_.zoomToFindInPageRect && this.delegate_.zoomToFindInPageRect(rectInRootFrame);
  }
  LocalMainFrameStub.prototype.installCoopAccessMonitor = function(accessedWindow, coopReporterInfo, isInSameVirtualCoopRelatedGroup) {
    return this.delegate_ && this.delegate_.installCoopAccessMonitor && this.delegate_.installCoopAccessMonitor(accessedWindow, coopReporterInfo, isInSameVirtualCoopRelatedGroup);
  }
  LocalMainFrameStub.prototype.onPortalActivated = function(portalToken, portal, portalClient, data, traceId) {
    return this.delegate_ && this.delegate_.onPortalActivated && this.delegate_.onPortalActivated(portalToken, portal, portalClient, data, traceId);
  }
  LocalMainFrameStub.prototype.forwardMessageFromHost = function(message, sourceOrigin) {
    return this.delegate_ && this.delegate_.forwardMessageFromHost && this.delegate_.forwardMessageFromHost(message, sourceOrigin);
  }
  LocalMainFrameStub.prototype.updateBrowserControlsState = function(constraints, current, animate) {
    return this.delegate_ && this.delegate_.updateBrowserControlsState && this.delegate_.updateBrowserControlsState(constraints, current, animate);
  }
  LocalMainFrameStub.prototype.setV8CompileHints = function(data) {
    return this.delegate_ && this.delegate_.setV8CompileHints && this.delegate_.setV8CompileHints(data);
  }

  LocalMainFrameStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalMainFrame_AnimateDoubleTapZoom_Name:
      var params = reader.decodeStruct(LocalMainFrame_AnimateDoubleTapZoom_Params);
      this.animateDoubleTapZoom(params.point, params.rect);
      return true;
    case kLocalMainFrame_SetScaleFactor_Name:
      var params = reader.decodeStruct(LocalMainFrame_SetScaleFactor_Params);
      this.setScaleFactor(params.scale);
      return true;
    case kLocalMainFrame_SetInitialFocus_Name:
      var params = reader.decodeStruct(LocalMainFrame_SetInitialFocus_Params);
      this.setInitialFocus(params.reverse);
      return true;
    case kLocalMainFrame_EnablePreferredSizeChangedMode_Name:
      var params = reader.decodeStruct(LocalMainFrame_EnablePreferredSizeChangedMode_Params);
      this.enablePreferredSizeChangedMode();
      return true;
    case kLocalMainFrame_ZoomToFindInPageRect_Name:
      var params = reader.decodeStruct(LocalMainFrame_ZoomToFindInPageRect_Params);
      this.zoomToFindInPageRect(params.rectInRootFrame);
      return true;
    case kLocalMainFrame_InstallCoopAccessMonitor_Name:
      var params = reader.decodeStruct(LocalMainFrame_InstallCoopAccessMonitor_Params);
      this.installCoopAccessMonitor(params.accessedWindow, params.coopReporterInfo, params.isInSameVirtualCoopRelatedGroup);
      return true;
    case kLocalMainFrame_ForwardMessageFromHost_Name:
      var params = reader.decodeStruct(LocalMainFrame_ForwardMessageFromHost_Params);
      this.forwardMessageFromHost(params.message, params.sourceOrigin);
      return true;
    case kLocalMainFrame_UpdateBrowserControlsState_Name:
      var params = reader.decodeStruct(LocalMainFrame_UpdateBrowserControlsState_Params);
      this.updateBrowserControlsState(params.constraints, params.current, params.animate);
      return true;
    case kLocalMainFrame_SetV8CompileHints_Name:
      var params = reader.decodeStruct(LocalMainFrame_SetV8CompileHints_Params);
      this.setV8CompileHints(params.data);
      return true;
    default:
      return false;
    }
  };

  LocalMainFrameStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalMainFrame_ClosePage_Name:
      var params = reader.decodeStruct(LocalMainFrame_ClosePage_Params);
      this.closePage().then(function(response) {
        var responseParams =
            new LocalMainFrame_ClosePage_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kLocalMainFrame_ClosePage_Name,
            codec.align(LocalMainFrame_ClosePage_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalMainFrame_ClosePage_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalMainFrame_GetFullPageSize_Name:
      var params = reader.decodeStruct(LocalMainFrame_GetFullPageSize_Params);
      this.getFullPageSize().then(function(response) {
        var responseParams =
            new LocalMainFrame_GetFullPageSize_ResponseParams();
        responseParams.fullPageSize = response.fullPageSize;
        var builder = new codec.MessageV1Builder(
            kLocalMainFrame_GetFullPageSize_Name,
            codec.align(LocalMainFrame_GetFullPageSize_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalMainFrame_GetFullPageSize_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalMainFrame_OnPortalActivated_Name:
      var params = reader.decodeStruct(LocalMainFrame_OnPortalActivated_Params);
      this.onPortalActivated(params.portalToken, params.portal, params.portalClient, params.data, params.traceId).then(function(response) {
        var responseParams =
            new LocalMainFrame_OnPortalActivated_ResponseParams();
        responseParams.result = response.result;
        var builder = new codec.MessageV2Builder(
            kLocalMainFrame_OnPortalActivated_Name,
            codec.align(LocalMainFrame_OnPortalActivated_ResponseParams
                .encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.setPayload(LocalMainFrame_OnPortalActivated_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateLocalMainFrameRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kLocalMainFrame_AnimateDoubleTapZoom_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_AnimateDoubleTapZoom_Params;
      break;
      case kLocalMainFrame_SetScaleFactor_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_SetScaleFactor_Params;
      break;
      case kLocalMainFrame_ClosePage_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrame_ClosePage_Params;
      break;
      case kLocalMainFrame_GetFullPageSize_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrame_GetFullPageSize_Params;
      break;
      case kLocalMainFrame_SetInitialFocus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_SetInitialFocus_Params;
      break;
      case kLocalMainFrame_EnablePreferredSizeChangedMode_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_EnablePreferredSizeChangedMode_Params;
      break;
      case kLocalMainFrame_ZoomToFindInPageRect_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_ZoomToFindInPageRect_Params;
      break;
      case kLocalMainFrame_InstallCoopAccessMonitor_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_InstallCoopAccessMonitor_Params;
      break;
      case kLocalMainFrame_OnPortalActivated_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrame_OnPortalActivated_Params;
      break;
      case kLocalMainFrame_ForwardMessageFromHost_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_ForwardMessageFromHost_Params;
      break;
      case kLocalMainFrame_UpdateBrowserControlsState_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_UpdateBrowserControlsState_Params;
      break;
      case kLocalMainFrame_SetV8CompileHints_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrame_SetV8CompileHints_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateLocalMainFrameResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kLocalMainFrame_ClosePage_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrame_ClosePage_ResponseParams;
        break;
      case kLocalMainFrame_GetFullPageSize_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrame_GetFullPageSize_ResponseParams;
        break;
      case kLocalMainFrame_OnPortalActivated_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrame_OnPortalActivated_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var LocalMainFrame = {
    name: 'blink.mojom.LocalMainFrame',
    kVersion: 0,
    ptrClass: LocalMainFramePtr,
    proxyClass: LocalMainFrameProxy,
    stubClass: LocalMainFrameStub,
    validateRequest: validateLocalMainFrameRequest,
    validateResponse: validateLocalMainFrameResponse,
  };
  LocalMainFrameStub.prototype.validator = validateLocalMainFrameRequest;
  LocalMainFrameProxy.prototype.validator = validateLocalMainFrameResponse;
  var kLocalMainFrameHost_ScaleFactorChanged_Name = 1087071232;
  var kLocalMainFrameHost_ContentsPreferredSizeChanged_Name = 1661718040;
  var kLocalMainFrameHost_TextAutosizerPageInfoChanged_Name = 1897757557;
  var kLocalMainFrameHost_FocusPage_Name = 1832225146;
  var kLocalMainFrameHost_TakeFocus_Name = 1992557315;
  var kLocalMainFrameHost_UpdateTargetURL_Name = 316320106;
  var kLocalMainFrameHost_RequestClose_Name = 1312916663;
  var kLocalMainFrameHost_ShowCreatedWindow_Name = 835025277;
  var kLocalMainFrameHost_SetWindowRect_Name = 1599126947;
  var kLocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Name = 1330921881;
  var kLocalMainFrameHost_DidAccessInitialMainDocument_Name = 1252890328;

  function LocalMainFrameHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(LocalMainFrameHost,
                                                   handleOrPtrInfo);
  }

  function LocalMainFrameHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        LocalMainFrameHost, associatedInterfacePtrInfo);
  }

  LocalMainFrameHostAssociatedPtr.prototype =
      Object.create(LocalMainFrameHostPtr.prototype);
  LocalMainFrameHostAssociatedPtr.prototype.constructor =
      LocalMainFrameHostAssociatedPtr;

  function LocalMainFrameHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  LocalMainFrameHostPtr.prototype.scaleFactorChanged = function() {
    return LocalMainFrameHostProxy.prototype.scaleFactorChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.scaleFactorChanged = function(scale) {
    var params_ = new LocalMainFrameHost_ScaleFactorChanged_Params();
    params_.scale = scale;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_ScaleFactorChanged_Name,
        codec.align(LocalMainFrameHost_ScaleFactorChanged_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_ScaleFactorChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.contentsPreferredSizeChanged = function() {
    return LocalMainFrameHostProxy.prototype.contentsPreferredSizeChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.contentsPreferredSizeChanged = function(prefSize) {
    var params_ = new LocalMainFrameHost_ContentsPreferredSizeChanged_Params();
    params_.prefSize = prefSize;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_ContentsPreferredSizeChanged_Name,
        codec.align(LocalMainFrameHost_ContentsPreferredSizeChanged_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_ContentsPreferredSizeChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.textAutosizerPageInfoChanged = function() {
    return LocalMainFrameHostProxy.prototype.textAutosizerPageInfoChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.textAutosizerPageInfoChanged = function(pageInfo) {
    var params_ = new LocalMainFrameHost_TextAutosizerPageInfoChanged_Params();
    params_.pageInfo = pageInfo;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_TextAutosizerPageInfoChanged_Name,
        codec.align(LocalMainFrameHost_TextAutosizerPageInfoChanged_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_TextAutosizerPageInfoChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.focusPage = function() {
    return LocalMainFrameHostProxy.prototype.focusPage
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.focusPage = function() {
    var params_ = new LocalMainFrameHost_FocusPage_Params();
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_FocusPage_Name,
        codec.align(LocalMainFrameHost_FocusPage_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_FocusPage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.takeFocus = function() {
    return LocalMainFrameHostProxy.prototype.takeFocus
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.takeFocus = function(reverse) {
    var params_ = new LocalMainFrameHost_TakeFocus_Params();
    params_.reverse = reverse;
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_TakeFocus_Name,
        codec.align(LocalMainFrameHost_TakeFocus_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_TakeFocus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.updateTargetURL = function() {
    return LocalMainFrameHostProxy.prototype.updateTargetURL
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.updateTargetURL = function(url) {
    var params_ = new LocalMainFrameHost_UpdateTargetURL_Params();
    params_.url = url;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalMainFrameHost_UpdateTargetURL_Name,
          codec.align(LocalMainFrameHost_UpdateTargetURL_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalMainFrameHost_UpdateTargetURL_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrameHost_UpdateTargetURL_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFrameHostPtr.prototype.requestClose = function() {
    return LocalMainFrameHostProxy.prototype.requestClose
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.requestClose = function() {
    var params_ = new LocalMainFrameHost_RequestClose_Params();
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_RequestClose_Name,
        codec.align(LocalMainFrameHost_RequestClose_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_RequestClose_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.showCreatedWindow = function() {
    return LocalMainFrameHostProxy.prototype.showCreatedWindow
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.showCreatedWindow = function(openerFrameToken, disposition, windowFeatures, openedByUserGesture) {
    var params_ = new LocalMainFrameHost_ShowCreatedWindow_Params();
    params_.openerFrameToken = openerFrameToken;
    params_.disposition = disposition;
    params_.windowFeatures = windowFeatures;
    params_.openedByUserGesture = openedByUserGesture;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalMainFrameHost_ShowCreatedWindow_Name,
          codec.align(LocalMainFrameHost_ShowCreatedWindow_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalMainFrameHost_ShowCreatedWindow_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrameHost_ShowCreatedWindow_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFrameHostPtr.prototype.setWindowRect = function() {
    return LocalMainFrameHostProxy.prototype.setWindowRect
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.setWindowRect = function(bounds) {
    var params_ = new LocalMainFrameHost_SetWindowRect_Params();
    params_.bounds = bounds;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kLocalMainFrameHost_SetWindowRect_Name,
          codec.align(LocalMainFrameHost_SetWindowRect_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(LocalMainFrameHost_SetWindowRect_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(LocalMainFrameHost_SetWindowRect_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  LocalMainFrameHostPtr.prototype.didFirstVisuallyNonEmptyPaint = function() {
    return LocalMainFrameHostProxy.prototype.didFirstVisuallyNonEmptyPaint
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.didFirstVisuallyNonEmptyPaint = function() {
    var params_ = new LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params();
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Name,
        codec.align(LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  LocalMainFrameHostPtr.prototype.didAccessInitialMainDocument = function() {
    return LocalMainFrameHostProxy.prototype.didAccessInitialMainDocument
        .apply(this.ptr.getProxy(), arguments);
  };

  LocalMainFrameHostProxy.prototype.didAccessInitialMainDocument = function() {
    var params_ = new LocalMainFrameHost_DidAccessInitialMainDocument_Params();
    var builder = new codec.MessageV0Builder(
        kLocalMainFrameHost_DidAccessInitialMainDocument_Name,
        codec.align(LocalMainFrameHost_DidAccessInitialMainDocument_Params.encodedSize));
    builder.encodeStruct(LocalMainFrameHost_DidAccessInitialMainDocument_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function LocalMainFrameHostStub(delegate) {
    this.delegate_ = delegate;
  }
  LocalMainFrameHostStub.prototype.scaleFactorChanged = function(scale) {
    return this.delegate_ && this.delegate_.scaleFactorChanged && this.delegate_.scaleFactorChanged(scale);
  }
  LocalMainFrameHostStub.prototype.contentsPreferredSizeChanged = function(prefSize) {
    return this.delegate_ && this.delegate_.contentsPreferredSizeChanged && this.delegate_.contentsPreferredSizeChanged(prefSize);
  }
  LocalMainFrameHostStub.prototype.textAutosizerPageInfoChanged = function(pageInfo) {
    return this.delegate_ && this.delegate_.textAutosizerPageInfoChanged && this.delegate_.textAutosizerPageInfoChanged(pageInfo);
  }
  LocalMainFrameHostStub.prototype.focusPage = function() {
    return this.delegate_ && this.delegate_.focusPage && this.delegate_.focusPage();
  }
  LocalMainFrameHostStub.prototype.takeFocus = function(reverse) {
    return this.delegate_ && this.delegate_.takeFocus && this.delegate_.takeFocus(reverse);
  }
  LocalMainFrameHostStub.prototype.updateTargetURL = function(url) {
    return this.delegate_ && this.delegate_.updateTargetURL && this.delegate_.updateTargetURL(url);
  }
  LocalMainFrameHostStub.prototype.requestClose = function() {
    return this.delegate_ && this.delegate_.requestClose && this.delegate_.requestClose();
  }
  LocalMainFrameHostStub.prototype.showCreatedWindow = function(openerFrameToken, disposition, windowFeatures, openedByUserGesture) {
    return this.delegate_ && this.delegate_.showCreatedWindow && this.delegate_.showCreatedWindow(openerFrameToken, disposition, windowFeatures, openedByUserGesture);
  }
  LocalMainFrameHostStub.prototype.setWindowRect = function(bounds) {
    return this.delegate_ && this.delegate_.setWindowRect && this.delegate_.setWindowRect(bounds);
  }
  LocalMainFrameHostStub.prototype.didFirstVisuallyNonEmptyPaint = function() {
    return this.delegate_ && this.delegate_.didFirstVisuallyNonEmptyPaint && this.delegate_.didFirstVisuallyNonEmptyPaint();
  }
  LocalMainFrameHostStub.prototype.didAccessInitialMainDocument = function() {
    return this.delegate_ && this.delegate_.didAccessInitialMainDocument && this.delegate_.didAccessInitialMainDocument();
  }

  LocalMainFrameHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalMainFrameHost_ScaleFactorChanged_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_ScaleFactorChanged_Params);
      this.scaleFactorChanged(params.scale);
      return true;
    case kLocalMainFrameHost_ContentsPreferredSizeChanged_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_ContentsPreferredSizeChanged_Params);
      this.contentsPreferredSizeChanged(params.prefSize);
      return true;
    case kLocalMainFrameHost_TextAutosizerPageInfoChanged_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_TextAutosizerPageInfoChanged_Params);
      this.textAutosizerPageInfoChanged(params.pageInfo);
      return true;
    case kLocalMainFrameHost_FocusPage_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_FocusPage_Params);
      this.focusPage();
      return true;
    case kLocalMainFrameHost_TakeFocus_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_TakeFocus_Params);
      this.takeFocus(params.reverse);
      return true;
    case kLocalMainFrameHost_RequestClose_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_RequestClose_Params);
      this.requestClose();
      return true;
    case kLocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params);
      this.didFirstVisuallyNonEmptyPaint();
      return true;
    case kLocalMainFrameHost_DidAccessInitialMainDocument_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_DidAccessInitialMainDocument_Params);
      this.didAccessInitialMainDocument();
      return true;
    default:
      return false;
    }
  };

  LocalMainFrameHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kLocalMainFrameHost_UpdateTargetURL_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_UpdateTargetURL_Params);
      this.updateTargetURL(params.url).then(function(response) {
        var responseParams =
            new LocalMainFrameHost_UpdateTargetURL_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kLocalMainFrameHost_UpdateTargetURL_Name,
            codec.align(LocalMainFrameHost_UpdateTargetURL_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalMainFrameHost_UpdateTargetURL_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalMainFrameHost_ShowCreatedWindow_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_ShowCreatedWindow_Params);
      this.showCreatedWindow(params.openerFrameToken, params.disposition, params.windowFeatures, params.openedByUserGesture).then(function(response) {
        var responseParams =
            new LocalMainFrameHost_ShowCreatedWindow_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kLocalMainFrameHost_ShowCreatedWindow_Name,
            codec.align(LocalMainFrameHost_ShowCreatedWindow_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalMainFrameHost_ShowCreatedWindow_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kLocalMainFrameHost_SetWindowRect_Name:
      var params = reader.decodeStruct(LocalMainFrameHost_SetWindowRect_Params);
      this.setWindowRect(params.bounds).then(function(response) {
        var responseParams =
            new LocalMainFrameHost_SetWindowRect_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kLocalMainFrameHost_SetWindowRect_Name,
            codec.align(LocalMainFrameHost_SetWindowRect_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(LocalMainFrameHost_SetWindowRect_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateLocalMainFrameHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kLocalMainFrameHost_ScaleFactorChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_ScaleFactorChanged_Params;
      break;
      case kLocalMainFrameHost_ContentsPreferredSizeChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_ContentsPreferredSizeChanged_Params;
      break;
      case kLocalMainFrameHost_TextAutosizerPageInfoChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_TextAutosizerPageInfoChanged_Params;
      break;
      case kLocalMainFrameHost_FocusPage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_FocusPage_Params;
      break;
      case kLocalMainFrameHost_TakeFocus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_TakeFocus_Params;
      break;
      case kLocalMainFrameHost_UpdateTargetURL_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrameHost_UpdateTargetURL_Params;
      break;
      case kLocalMainFrameHost_RequestClose_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_RequestClose_Params;
      break;
      case kLocalMainFrameHost_ShowCreatedWindow_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrameHost_ShowCreatedWindow_Params;
      break;
      case kLocalMainFrameHost_SetWindowRect_Name:
        if (message.expectsResponse())
          paramsClass = LocalMainFrameHost_SetWindowRect_Params;
      break;
      case kLocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_DidFirstVisuallyNonEmptyPaint_Params;
      break;
      case kLocalMainFrameHost_DidAccessInitialMainDocument_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = LocalMainFrameHost_DidAccessInitialMainDocument_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateLocalMainFrameHostResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kLocalMainFrameHost_UpdateTargetURL_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrameHost_UpdateTargetURL_ResponseParams;
        break;
      case kLocalMainFrameHost_ShowCreatedWindow_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrameHost_ShowCreatedWindow_ResponseParams;
        break;
      case kLocalMainFrameHost_SetWindowRect_Name:
        if (message.isResponse())
          paramsClass = LocalMainFrameHost_SetWindowRect_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var LocalMainFrameHost = {
    name: 'blink.mojom.LocalMainFrameHost',
    kVersion: 0,
    ptrClass: LocalMainFrameHostPtr,
    proxyClass: LocalMainFrameHostProxy,
    stubClass: LocalMainFrameHostStub,
    validateRequest: validateLocalMainFrameHostRequest,
    validateResponse: validateLocalMainFrameHostResponse,
  };
  LocalMainFrameHostStub.prototype.validator = validateLocalMainFrameHostRequest;
  LocalMainFrameHostProxy.prototype.validator = validateLocalMainFrameHostResponse;
  exports.MAX_TITLE_CHARS = MAX_TITLE_CHARS;
  exports.PluginActionType = PluginActionType;
  exports.JavaScriptExecutionResultType = JavaScriptExecutionResultType;
  exports.TraverseCancelledReason = TraverseCancelledReason;
  exports.ViewTransitionSameOriginOptIn = ViewTransitionSameOriginOptIn;
  exports.FrameOwnerElementType = FrameOwnerElementType;
  exports.SavableSubframe = SavableSubframe;
  exports.GetSavableResourceLinksReply = GetSavableResourceLinksReply;
  exports.FindInPageResultAXParams = FindInPageResultAXParams;
  exports.DownloadURLParams = DownloadURLParams;
  exports.IframeAttributes = IframeAttributes;
  exports.LegacyTechEventCodeLocation = LegacyTechEventCodeLocation;
  exports.LocalFrameHost = LocalFrameHost;
  exports.LocalFrameHostPtr = LocalFrameHostPtr;
  exports.LocalFrameHostAssociatedPtr = LocalFrameHostAssociatedPtr;
  exports.NonAssociatedLocalFrameHost = NonAssociatedLocalFrameHost;
  exports.NonAssociatedLocalFrameHostPtr = NonAssociatedLocalFrameHostPtr;
  exports.NonAssociatedLocalFrameHostAssociatedPtr = NonAssociatedLocalFrameHostAssociatedPtr;
  exports.LocalFrame = LocalFrame;
  exports.LocalFramePtr = LocalFramePtr;
  exports.LocalFrameAssociatedPtr = LocalFrameAssociatedPtr;
  exports.HighPriorityLocalFrame = HighPriorityLocalFrame;
  exports.HighPriorityLocalFramePtr = HighPriorityLocalFramePtr;
  exports.HighPriorityLocalFrameAssociatedPtr = HighPriorityLocalFrameAssociatedPtr;
  exports.LocalMainFrame = LocalMainFrame;
  exports.LocalMainFramePtr = LocalMainFramePtr;
  exports.LocalMainFrameAssociatedPtr = LocalMainFrameAssociatedPtr;
  exports.LocalMainFrameHost = LocalMainFrameHost;
  exports.LocalMainFrameHostPtr = LocalMainFrameHostPtr;
  exports.LocalMainFrameHostAssociatedPtr = LocalMainFrameHostAssociatedPtr;
})();