// third_party/blink/public/mojom/frame/pending_beacon.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/frame/pending_beacon.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var url_request$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/url_request.mojom', '../../../../../services/network/public/mojom/url_request.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }


  var BeaconMethod = {};
  BeaconMethod.kPost = 0;
  BeaconMethod.kGet = 1;
  BeaconMethod.MIN_VALUE = 0;
  BeaconMethod.MAX_VALUE = 1;

  BeaconMethod.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  BeaconMethod.toKnownEnumValue = function(value) {
    return value;
  };

  BeaconMethod.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function PendingBeaconHost_CreateBeacon_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PendingBeaconHost_CreateBeacon_Params.prototype.initDefaults_ = function() {
    this.receiver = new bindings.InterfaceRequest();
    this.method = 0;
    this.url = null;
  };
  PendingBeaconHost_CreateBeacon_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PendingBeaconHost_CreateBeacon_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeaconHost_CreateBeacon_Params.receiver
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeaconHost_CreateBeacon_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeaconHost_CreateBeacon_Params.method
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, BeaconMethod);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PendingBeaconHost_CreateBeacon_Params.encodedSize = codec.kStructHeaderSize + 16;

  PendingBeaconHost_CreateBeacon_Params.decode = function(decoder) {
    var packed;
    var val = new PendingBeaconHost_CreateBeacon_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.receiver =
        decoder.decodeStruct(codec.InterfaceRequest);
    val.method =
        decoder.decodeStruct(new codec.Enum(BeaconMethod));
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PendingBeaconHost_CreateBeacon_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PendingBeaconHost_CreateBeacon_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.InterfaceRequest, val.receiver);
    encoder.encodeStruct(codec.Int32, val.method);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function PendingBeacon_Deactivate_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PendingBeacon_Deactivate_Params.prototype.initDefaults_ = function() {
  };
  PendingBeacon_Deactivate_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PendingBeacon_Deactivate_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PendingBeacon_Deactivate_Params.encodedSize = codec.kStructHeaderSize + 0;

  PendingBeacon_Deactivate_Params.decode = function(decoder) {
    var packed;
    var val = new PendingBeacon_Deactivate_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PendingBeacon_Deactivate_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PendingBeacon_Deactivate_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PendingBeacon_SetRequestData_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PendingBeacon_SetRequestData_Params.prototype.initDefaults_ = function() {
    this.requestBody = null;
    this.contentType = null;
  };
  PendingBeacon_SetRequestData_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PendingBeacon_SetRequestData_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeacon_SetRequestData_Params.requestBody
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url_request$.URLRequestBody, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeacon_SetRequestData_Params.contentType
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PendingBeacon_SetRequestData_Params.encodedSize = codec.kStructHeaderSize + 16;

  PendingBeacon_SetRequestData_Params.decode = function(decoder) {
    var packed;
    var val = new PendingBeacon_SetRequestData_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.requestBody =
        decoder.decodeStructPointer(url_request$.URLRequestBody);
    val.contentType =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PendingBeacon_SetRequestData_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PendingBeacon_SetRequestData_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url_request$.URLRequestBody, val.requestBody);
    encoder.encodeStruct(codec.String, val.contentType);
  };
  function PendingBeacon_SetRequestURL_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PendingBeacon_SetRequestURL_Params.prototype.initDefaults_ = function() {
    this.url = null;
  };
  PendingBeacon_SetRequestURL_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PendingBeacon_SetRequestURL_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PendingBeacon_SetRequestURL_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PendingBeacon_SetRequestURL_Params.encodedSize = codec.kStructHeaderSize + 8;

  PendingBeacon_SetRequestURL_Params.decode = function(decoder) {
    var packed;
    var val = new PendingBeacon_SetRequestURL_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PendingBeacon_SetRequestURL_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PendingBeacon_SetRequestURL_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function PendingBeacon_SendNow_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PendingBeacon_SendNow_Params.prototype.initDefaults_ = function() {
  };
  PendingBeacon_SendNow_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PendingBeacon_SendNow_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PendingBeacon_SendNow_Params.encodedSize = codec.kStructHeaderSize + 0;

  PendingBeacon_SendNow_Params.decode = function(decoder) {
    var packed;
    var val = new PendingBeacon_SendNow_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PendingBeacon_SendNow_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PendingBeacon_SendNow_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kPendingBeaconHost_CreateBeacon_Name = 968410248;

  function PendingBeaconHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PendingBeaconHost,
                                                   handleOrPtrInfo);
  }

  function PendingBeaconHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PendingBeaconHost, associatedInterfacePtrInfo);
  }

  PendingBeaconHostAssociatedPtr.prototype =
      Object.create(PendingBeaconHostPtr.prototype);
  PendingBeaconHostAssociatedPtr.prototype.constructor =
      PendingBeaconHostAssociatedPtr;

  function PendingBeaconHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  PendingBeaconHostPtr.prototype.createBeacon = function() {
    return PendingBeaconHostProxy.prototype.createBeacon
        .apply(this.ptr.getProxy(), arguments);
  };

  PendingBeaconHostProxy.prototype.createBeacon = function(receiver, url, method) {
    var params_ = new PendingBeaconHost_CreateBeacon_Params();
    params_.receiver = receiver;
    params_.url = url;
    params_.method = method;
    var builder = new codec.MessageV0Builder(
        kPendingBeaconHost_CreateBeacon_Name,
        codec.align(PendingBeaconHost_CreateBeacon_Params.encodedSize));
    builder.encodeStruct(PendingBeaconHost_CreateBeacon_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PendingBeaconHostStub(delegate) {
    this.delegate_ = delegate;
  }
  PendingBeaconHostStub.prototype.createBeacon = function(receiver, url, method) {
    return this.delegate_ && this.delegate_.createBeacon && this.delegate_.createBeacon(receiver, url, method);
  }

  PendingBeaconHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPendingBeaconHost_CreateBeacon_Name:
      var params = reader.decodeStruct(PendingBeaconHost_CreateBeacon_Params);
      this.createBeacon(params.receiver, params.url, params.method);
      return true;
    default:
      return false;
    }
  };

  PendingBeaconHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePendingBeaconHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPendingBeaconHost_CreateBeacon_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PendingBeaconHost_CreateBeacon_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePendingBeaconHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PendingBeaconHost = {
    name: 'blink.mojom.PendingBeaconHost',
    kVersion: 0,
    ptrClass: PendingBeaconHostPtr,
    proxyClass: PendingBeaconHostProxy,
    stubClass: PendingBeaconHostStub,
    validateRequest: validatePendingBeaconHostRequest,
    validateResponse: null,
  };
  PendingBeaconHostStub.prototype.validator = validatePendingBeaconHostRequest;
  PendingBeaconHostProxy.prototype.validator = null;
  var kPendingBeacon_Deactivate_Name = 637195421;
  var kPendingBeacon_SetRequestData_Name = 1498488802;
  var kPendingBeacon_SetRequestURL_Name = 1540893726;
  var kPendingBeacon_SendNow_Name = 538324560;

  function PendingBeaconPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PendingBeacon,
                                                   handleOrPtrInfo);
  }

  function PendingBeaconAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PendingBeacon, associatedInterfacePtrInfo);
  }

  PendingBeaconAssociatedPtr.prototype =
      Object.create(PendingBeaconPtr.prototype);
  PendingBeaconAssociatedPtr.prototype.constructor =
      PendingBeaconAssociatedPtr;

  function PendingBeaconProxy(receiver) {
    this.receiver_ = receiver;
  }
  PendingBeaconPtr.prototype.deactivate = function() {
    return PendingBeaconProxy.prototype.deactivate
        .apply(this.ptr.getProxy(), arguments);
  };

  PendingBeaconProxy.prototype.deactivate = function() {
    var params_ = new PendingBeacon_Deactivate_Params();
    var builder = new codec.MessageV0Builder(
        kPendingBeacon_Deactivate_Name,
        codec.align(PendingBeacon_Deactivate_Params.encodedSize));
    builder.encodeStruct(PendingBeacon_Deactivate_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PendingBeaconPtr.prototype.setRequestData = function() {
    return PendingBeaconProxy.prototype.setRequestData
        .apply(this.ptr.getProxy(), arguments);
  };

  PendingBeaconProxy.prototype.setRequestData = function(requestBody, contentType) {
    var params_ = new PendingBeacon_SetRequestData_Params();
    params_.requestBody = requestBody;
    params_.contentType = contentType;
    var builder = new codec.MessageV0Builder(
        kPendingBeacon_SetRequestData_Name,
        codec.align(PendingBeacon_SetRequestData_Params.encodedSize));
    builder.encodeStruct(PendingBeacon_SetRequestData_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PendingBeaconPtr.prototype.setRequestURL = function() {
    return PendingBeaconProxy.prototype.setRequestURL
        .apply(this.ptr.getProxy(), arguments);
  };

  PendingBeaconProxy.prototype.setRequestURL = function(url) {
    var params_ = new PendingBeacon_SetRequestURL_Params();
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kPendingBeacon_SetRequestURL_Name,
        codec.align(PendingBeacon_SetRequestURL_Params.encodedSize));
    builder.encodeStruct(PendingBeacon_SetRequestURL_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PendingBeaconPtr.prototype.sendNow = function() {
    return PendingBeaconProxy.prototype.sendNow
        .apply(this.ptr.getProxy(), arguments);
  };

  PendingBeaconProxy.prototype.sendNow = function() {
    var params_ = new PendingBeacon_SendNow_Params();
    var builder = new codec.MessageV0Builder(
        kPendingBeacon_SendNow_Name,
        codec.align(PendingBeacon_SendNow_Params.encodedSize));
    builder.encodeStruct(PendingBeacon_SendNow_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PendingBeaconStub(delegate) {
    this.delegate_ = delegate;
  }
  PendingBeaconStub.prototype.deactivate = function() {
    return this.delegate_ && this.delegate_.deactivate && this.delegate_.deactivate();
  }
  PendingBeaconStub.prototype.setRequestData = function(requestBody, contentType) {
    return this.delegate_ && this.delegate_.setRequestData && this.delegate_.setRequestData(requestBody, contentType);
  }
  PendingBeaconStub.prototype.setRequestURL = function(url) {
    return this.delegate_ && this.delegate_.setRequestURL && this.delegate_.setRequestURL(url);
  }
  PendingBeaconStub.prototype.sendNow = function() {
    return this.delegate_ && this.delegate_.sendNow && this.delegate_.sendNow();
  }

  PendingBeaconStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPendingBeacon_Deactivate_Name:
      var params = reader.decodeStruct(PendingBeacon_Deactivate_Params);
      this.deactivate();
      return true;
    case kPendingBeacon_SetRequestData_Name:
      var params = reader.decodeStruct(PendingBeacon_SetRequestData_Params);
      this.setRequestData(params.requestBody, params.contentType);
      return true;
    case kPendingBeacon_SetRequestURL_Name:
      var params = reader.decodeStruct(PendingBeacon_SetRequestURL_Params);
      this.setRequestURL(params.url);
      return true;
    case kPendingBeacon_SendNow_Name:
      var params = reader.decodeStruct(PendingBeacon_SendNow_Params);
      this.sendNow();
      return true;
    default:
      return false;
    }
  };

  PendingBeaconStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePendingBeaconRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPendingBeacon_Deactivate_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PendingBeacon_Deactivate_Params;
      break;
      case kPendingBeacon_SetRequestData_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PendingBeacon_SetRequestData_Params;
      break;
      case kPendingBeacon_SetRequestURL_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PendingBeacon_SetRequestURL_Params;
      break;
      case kPendingBeacon_SendNow_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PendingBeacon_SendNow_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePendingBeaconResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PendingBeacon = {
    name: 'blink.mojom.PendingBeacon',
    kVersion: 0,
    ptrClass: PendingBeaconPtr,
    proxyClass: PendingBeaconProxy,
    stubClass: PendingBeaconStub,
    validateRequest: validatePendingBeaconRequest,
    validateResponse: null,
  };
  PendingBeaconStub.prototype.validator = validatePendingBeaconRequest;
  PendingBeaconProxy.prototype.validator = null;
  exports.BeaconMethod = BeaconMethod;
  exports.PendingBeaconHost = PendingBeaconHost;
  exports.PendingBeaconHostPtr = PendingBeaconHostPtr;
  exports.PendingBeaconHostAssociatedPtr = PendingBeaconHostAssociatedPtr;
  exports.PendingBeacon = PendingBeacon;
  exports.PendingBeaconPtr = PendingBeaconPtr;
  exports.PendingBeaconAssociatedPtr = PendingBeaconAssociatedPtr;
})();