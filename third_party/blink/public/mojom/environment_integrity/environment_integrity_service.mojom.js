// third_party/blink/public/mojom/environment_integrity/environment_integrity_service.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/environment_integrity/environment_integrity_service.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');


  var EnvironmentIntegrityResponseCode = {};
  EnvironmentIntegrityResponseCode.kSuccess = 0;
  EnvironmentIntegrityResponseCode.kInternalError = 1;
  EnvironmentIntegrityResponseCode.kTimeout = 2;
  EnvironmentIntegrityResponseCode.MIN_VALUE = 0;
  EnvironmentIntegrityResponseCode.MAX_VALUE = 2;

  EnvironmentIntegrityResponseCode.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    }
    return false;
  };

  EnvironmentIntegrityResponseCode.toKnownEnumValue = function(value) {
    return value;
  };

  EnvironmentIntegrityResponseCode.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function EnvironmentIntegrityService_GetEnvironmentIntegrity_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.prototype.initDefaults_ = function() {
    this.contentBinding = null;
  };
  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.contentBinding
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 1, codec.Uint8, false, [32], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.encodedSize = codec.kStructHeaderSize + 8;

  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.decode = function(decoder) {
    var packed;
    var val = new EnvironmentIntegrityService_GetEnvironmentIntegrity_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.contentBinding =
        decoder.decodeArrayPointer(codec.Uint8);
    return val;
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.Uint8, val.contentBinding);
  };
  function EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.prototype.initDefaults_ = function() {
    this.responseCode = 0;
    this.token = null;
  };
  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.responseCode
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, EnvironmentIntegrityResponseCode);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.token
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 1, codec.Uint8, false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.responseCode =
        decoder.decodeStruct(new codec.Enum(EnvironmentIntegrityResponseCode));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.token =
        decoder.decodeArrayPointer(codec.Uint8);
    return val;
  };

  EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.responseCode);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(codec.Uint8, val.token);
  };
  var kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name = 0;

  function EnvironmentIntegrityServicePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EnvironmentIntegrityService,
                                                   handleOrPtrInfo);
  }

  function EnvironmentIntegrityServiceAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EnvironmentIntegrityService, associatedInterfacePtrInfo);
  }

  EnvironmentIntegrityServiceAssociatedPtr.prototype =
      Object.create(EnvironmentIntegrityServicePtr.prototype);
  EnvironmentIntegrityServiceAssociatedPtr.prototype.constructor =
      EnvironmentIntegrityServiceAssociatedPtr;

  function EnvironmentIntegrityServiceProxy(receiver) {
    this.receiver_ = receiver;
  }
  EnvironmentIntegrityServicePtr.prototype.getEnvironmentIntegrity = function() {
    return EnvironmentIntegrityServiceProxy.prototype.getEnvironmentIntegrity
        .apply(this.ptr.getProxy(), arguments);
  };

  EnvironmentIntegrityServiceProxy.prototype.getEnvironmentIntegrity = function(contentBinding) {
    var params_ = new EnvironmentIntegrityService_GetEnvironmentIntegrity_Params();
    params_.contentBinding = contentBinding;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name,
          codec.align(EnvironmentIntegrityService_GetEnvironmentIntegrity_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(EnvironmentIntegrityService_GetEnvironmentIntegrity_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function EnvironmentIntegrityServiceStub(delegate) {
    this.delegate_ = delegate;
  }
  EnvironmentIntegrityServiceStub.prototype.getEnvironmentIntegrity = function(contentBinding) {
    return this.delegate_ && this.delegate_.getEnvironmentIntegrity && this.delegate_.getEnvironmentIntegrity(contentBinding);
  }

  EnvironmentIntegrityServiceStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  EnvironmentIntegrityServiceStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name:
      var params = reader.decodeStruct(EnvironmentIntegrityService_GetEnvironmentIntegrity_Params);
      this.getEnvironmentIntegrity(params.contentBinding).then(function(response) {
        var responseParams =
            new EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams();
        responseParams.responseCode = response.responseCode;
        responseParams.token = response.token;
        var builder = new codec.MessageV1Builder(
            kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name,
            codec.align(EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateEnvironmentIntegrityServiceRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name:
        if (message.expectsResponse())
          paramsClass = EnvironmentIntegrityService_GetEnvironmentIntegrity_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEnvironmentIntegrityServiceResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kEnvironmentIntegrityService_GetEnvironmentIntegrity_Name:
        if (message.isResponse())
          paramsClass = EnvironmentIntegrityService_GetEnvironmentIntegrity_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var EnvironmentIntegrityService = {
    name: 'blink.mojom.EnvironmentIntegrityService',
    kVersion: 0,
    ptrClass: EnvironmentIntegrityServicePtr,
    proxyClass: EnvironmentIntegrityServiceProxy,
    stubClass: EnvironmentIntegrityServiceStub,
    validateRequest: validateEnvironmentIntegrityServiceRequest,
    validateResponse: validateEnvironmentIntegrityServiceResponse,
  };
  EnvironmentIntegrityServiceStub.prototype.validator = validateEnvironmentIntegrityServiceRequest;
  EnvironmentIntegrityServiceProxy.prototype.validator = validateEnvironmentIntegrityServiceResponse;
  exports.EnvironmentIntegrityResponseCode = EnvironmentIntegrityResponseCode;
  exports.EnvironmentIntegrityService = EnvironmentIntegrityService;
  exports.EnvironmentIntegrityServicePtr = EnvironmentIntegrityServicePtr;
  exports.EnvironmentIntegrityServiceAssociatedPtr = EnvironmentIntegrityServiceAssociatedPtr;
})();