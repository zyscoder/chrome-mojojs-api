// ui/color/color_id.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'ui/color/color_id.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('color.mojom');


  var RendererColorId = {};
  RendererColorId.kColorMenuBackground = 0;
  RendererColorId.kColorMenuItemBackgroundSelected = 1;
  RendererColorId.kColorMenuSeparator = 2;
  RendererColorId.kColorOverlayScrollbarFill = 3;
  RendererColorId.kColorOverlayScrollbarFillDark = 4;
  RendererColorId.kColorOverlayScrollbarFillLight = 5;
  RendererColorId.kColorOverlayScrollbarFillHovered = 6;
  RendererColorId.kColorOverlayScrollbarFillHoveredDark = 7;
  RendererColorId.kColorOverlayScrollbarFillHoveredLight = 8;
  RendererColorId.kColorOverlayScrollbarStroke = 9;
  RendererColorId.kColorOverlayScrollbarStrokeDark = 10;
  RendererColorId.kColorOverlayScrollbarStrokeLight = 11;
  RendererColorId.kColorOverlayScrollbarStrokeHovered = 12;
  RendererColorId.kColorOverlayScrollbarStrokeHoveredDark = 13;
  RendererColorId.kColorOverlayScrollbarStrokeHoveredLight = 14;
  RendererColorId.kColorWebNativeControlAccent = 15;
  RendererColorId.kColorWebNativeControlAccentDisabled = 16;
  RendererColorId.kColorWebNativeControlAccentHovered = 17;
  RendererColorId.kColorWebNativeControlAccentPressed = 18;
  RendererColorId.kColorWebNativeControlAutoCompleteBackground = 19;
  RendererColorId.kColorWebNativeControlBackground = 20;
  RendererColorId.kColorWebNativeControlBackgroundDisabled = 21;
  RendererColorId.kColorWebNativeControlBorder = 22;
  RendererColorId.kColorWebNativeControlBorderDisabled = 23;
  RendererColorId.kColorWebNativeControlBorderHovered = 24;
  RendererColorId.kColorWebNativeControlBorderPressed = 25;
  RendererColorId.kColorWebNativeControlButtonBorder = 26;
  RendererColorId.kColorWebNativeControlButtonBorderDisabled = 27;
  RendererColorId.kColorWebNativeControlButtonBorderHovered = 28;
  RendererColorId.kColorWebNativeControlButtonBorderPressed = 29;
  RendererColorId.kColorWebNativeControlButtonFill = 30;
  RendererColorId.kColorWebNativeControlButtonFillDisabled = 31;
  RendererColorId.kColorWebNativeControlButtonFillHovered = 32;
  RendererColorId.kColorWebNativeControlButtonFillPressed = 33;
  RendererColorId.kColorWebNativeControlFill = 34;
  RendererColorId.kColorWebNativeControlFillDisabled = 35;
  RendererColorId.kColorWebNativeControlFillHovered = 36;
  RendererColorId.kColorWebNativeControlFillPressed = 37;
  RendererColorId.kColorWebNativeControlLightenLayer = 38;
  RendererColorId.kColorWebNativeControlProgressValue = 39;
  RendererColorId.kColorWebNativeControlScrollbarArrowBackgroundHovered = 40;
  RendererColorId.kColorWebNativeControlScrollbarArrowBackgroundPressed = 41;
  RendererColorId.kColorWebNativeControlScrollbarArrowForeground = 42;
  RendererColorId.kColorWebNativeControlScrollbarArrowForegroundPressed = 43;
  RendererColorId.kColorWebNativeControlScrollbarCorner = 44;
  RendererColorId.kColorWebNativeControlScrollbarThumb = 45;
  RendererColorId.kColorWebNativeControlScrollbarThumbHovered = 46;
  RendererColorId.kColorWebNativeControlScrollbarThumbInactive = 47;
  RendererColorId.kColorWebNativeControlScrollbarThumbPressed = 48;
  RendererColorId.kColorWebNativeControlScrollbarTrack = 49;
  RendererColorId.kColorWebNativeControlSlider = 50;
  RendererColorId.kColorWebNativeControlSliderDisabled = 51;
  RendererColorId.kColorWebNativeControlSliderHovered = 52;
  RendererColorId.kColorWebNativeControlSliderPressed = 53;
  RendererColorId.MIN_VALUE = 0;
  RendererColorId.MAX_VALUE = 53;

  RendererColorId.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
      return true;
    }
    return false;
  };

  RendererColorId.toKnownEnumValue = function(value) {
    return value;
  };

  RendererColorId.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.RendererColorId = RendererColorId;
})();