// content/web_test/common/mojo_echo.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'content/web_test/common/mojo_echo.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');



  function MojoEcho_EchoBoolFromUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolFromUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolFromUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolFromUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoBoolFromUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolFromUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolFromUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolFromUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolFromUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt32FromUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32FromUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt32FromUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32FromUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt32FromUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32FromUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt32FromUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32FromUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoInt32FromUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32FromUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoInt32FromUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32FromUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt32FromUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32FromUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32FromUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt32FromUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32FromUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt32FromUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32FromUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoStringFromUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringFromUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringFromUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoStringFromUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoStringFromUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringFromUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromUnion_ResponseParams.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringFromUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringFromUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoBoolAsUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsUnion_Params.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolAsUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolAsUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolAsUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsUnion_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolAsUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolAsUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolAsUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolAsUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoBoolAsUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoInt32AsUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32AsUnion_Params.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt32AsUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32AsUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32AsUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt32AsUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32AsUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt32AsUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32AsUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt32AsUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32AsUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt32AsUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32AsUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt32AsUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32AsUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt32AsUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32AsUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoInt32AsUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32AsUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoStringAsUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsUnion_Params.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringAsUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsUnion_Params.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringAsUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringAsUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoStringAsUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringAsUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringAsUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoStringAsUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoNullFromOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullFromOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoNullFromOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullFromOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoNullFromOptionalUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullFromOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoNullFromOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullFromOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoNullFromOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullFromOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoNullFromOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
  };
  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullFromOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  MojoEcho_EchoNullFromOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullFromOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function MojoEcho_EchoBoolFromOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolFromOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolFromOptionalUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolFromOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoBoolFromOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolFromOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt32FromOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32FromOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt32FromOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32FromOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt32FromOptionalUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32FromOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt32FromOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32FromOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoInt32FromOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32FromOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoInt32FromOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32FromOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoStringFromOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringFromOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromOptionalUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringFromOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoStringFromOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoStringFromOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromOptionalUnion_ResponseParams.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringFromOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoNullAsOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullAsOptionalUnion_Params.prototype.initDefaults_ = function() {
  };
  MojoEcho_EchoNullAsOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullAsOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullAsOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 0;

  MojoEcho_EchoNullAsOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullAsOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  MojoEcho_EchoNullAsOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullAsOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function MojoEcho_EchoNullAsOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoNullAsOptionalUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullAsOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoNullAsOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullAsOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolAsOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolAsOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolAsOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolAsOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolAsOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoInt32AsOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32AsOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt32AsOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32AsOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32AsOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt32AsOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32AsOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt32AsOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32AsOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt32AsOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt32AsOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoStringAsOptionalUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsOptionalUnion_Params.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringAsOptionalUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsOptionalUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsOptionalUnion_Params.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsOptionalUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringAsOptionalUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsOptionalUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringAsOptionalUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsOptionalUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoStringAsOptionalUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsOptionalUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, TestUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsOptionalUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(TestUnion);
    return val;
  };

  MojoEcho_EchoStringAsOptionalUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsOptionalUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(TestUnion, val.testUnion);
  };
  function MojoEcho_EchoInt8FromNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8FromNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt8FromNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8FromNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt8FromNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8FromNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt8FromNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8FromNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoInt8FromNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8FromNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoInt8FromNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8FromNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int8);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt8FromNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8FromNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int8, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolFromNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolFromNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolFromNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolFromNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoBoolFromNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolFromNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolFromNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoStringFromNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringFromNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringFromNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoStringFromNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoStringFromNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringFromNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromNestedUnion_ResponseParams.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringFromNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringFromNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoInt8AsNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8AsNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt8AsNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8AsNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8AsNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt8AsNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8AsNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int8);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt8AsNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8AsNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int8, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt8AsNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt8AsNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8AsNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoInt8AsNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8AsNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolAsNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolAsNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolAsNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolAsNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolAsNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolAsNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoBoolAsNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoStringAsNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringAsNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsNestedUnion_Params.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringAsNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringAsNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoStringAsNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringAsNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringAsNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoStringAsNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoNullFromOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullFromOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoNullFromOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoNullFromOptionalNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoNullFromOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullFromOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullFromOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
  };
  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function MojoEcho_EchoInt8FromOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt8FromOptionalNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8FromOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8FromOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int8);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int8, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolFromOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolFromOptionalNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoStringFromOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringFromOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromOptionalNestedUnion_Params.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringFromOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoNullAsOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullAsOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
  };
  MojoEcho_EchoNullAsOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 0;

  MojoEcho_EchoNullAsOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullAsOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullAsOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoInt8AsOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = 0;
  };
  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8AsOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.Int8);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8AsOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int8, val.value);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoBoolAsOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = false;
  };
  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.value = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.value & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };
  function MojoEcho_EchoStringAsOptionalNestedUnion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsOptionalNestedUnion_Params.prototype.initDefaults_ = function() {
    this.value = null;
  };
  MojoEcho_EchoStringAsOptionalNestedUnion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsOptionalNestedUnion_Params.value
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_Params.encodedSize = codec.kStructHeaderSize + 8;

  MojoEcho_EchoStringAsOptionalNestedUnion_Params.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsOptionalNestedUnion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.value =
        decoder.decodeStruct(codec.String);
    return val;
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsOptionalNestedUnion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.value);
  };
  function MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.prototype.initDefaults_ = function() {
    this.testUnion = null;
  };
  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.testUnion
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, NestedUnion, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.testUnion =
        decoder.decodeStruct(NestedUnion);
    return val;
  };

  MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(NestedUnion, val.testUnion);
  };

  function TestUnion(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  TestUnion.Tags = {
    boolValue: 0,
    int32Value: 1,
    stringValue: 2,
  };

  TestUnion.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  TestUnion.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "boolValue",
        "int32Value",
        "stringValue",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a TestUnion member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(TestUnion.prototype, "boolValue", {
    get: function() {
      if (this.$tag != TestUnion.Tags.boolValue) {
        throw new ReferenceError(
            "TestUnion.boolValue is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = TestUnion.Tags.boolValue;
      this.$data = value;
    }
  });
  Object.defineProperty(TestUnion.prototype, "int32Value", {
    get: function() {
      if (this.$tag != TestUnion.Tags.int32Value) {
        throw new ReferenceError(
            "TestUnion.int32Value is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = TestUnion.Tags.int32Value;
      this.$data = value;
    }
  });
  Object.defineProperty(TestUnion.prototype, "stringValue", {
    get: function() {
      if (this.$tag != TestUnion.Tags.stringValue) {
        throw new ReferenceError(
            "TestUnion.stringValue is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = TestUnion.Tags.stringValue;
      this.$data = value;
    }
  });


    TestUnion.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case TestUnion.Tags.boolValue:
          encoder.writeUint8(val.boolValue ? 1 : 0);
          break;
        case TestUnion.Tags.int32Value:
          encoder.encodeStruct(codec.Int32, val.int32Value);
          break;
        case TestUnion.Tags.stringValue:
          encoder.encodeStruct(codec.String, val.stringValue);
          break;
      }
      encoder.align();
    };


    TestUnion.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new TestUnion();
      var tag = decoder.readUint32();
      switch (tag) {
        case TestUnion.Tags.boolValue:
          result.boolValue = decoder.readUint8() ? true : false;
          break;
        case TestUnion.Tags.int32Value:
          result.int32Value = decoder.decodeStruct(codec.Int32);
          break;
        case TestUnion.Tags.stringValue:
          result.stringValue = decoder.decodeStruct(codec.String);
          break;
      }
      decoder.align();

      return result;
    };


    TestUnion.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case TestUnion.Tags.boolValue:
          

          break;
        case TestUnion.Tags.int32Value:
          

          break;
        case TestUnion.Tags.stringValue:
          

    // validate TestUnion.stringValue
    err = messageValidator.validateStringPointer(data_offset, false)
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  TestUnion.encodedSize = 16;

  function NestedUnion(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  NestedUnion.Tags = {
    int8Value: 0,
    unionValue: 1,
  };

  NestedUnion.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  NestedUnion.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "int8Value",
        "unionValue",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a NestedUnion member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(NestedUnion.prototype, "int8Value", {
    get: function() {
      if (this.$tag != NestedUnion.Tags.int8Value) {
        throw new ReferenceError(
            "NestedUnion.int8Value is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = NestedUnion.Tags.int8Value;
      this.$data = value;
    }
  });
  Object.defineProperty(NestedUnion.prototype, "unionValue", {
    get: function() {
      if (this.$tag != NestedUnion.Tags.unionValue) {
        throw new ReferenceError(
            "NestedUnion.unionValue is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = NestedUnion.Tags.unionValue;
      this.$data = value;
    }
  });


    NestedUnion.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case NestedUnion.Tags.int8Value:
          encoder.encodeStruct(codec.Int8, val.int8Value);
          break;
        case NestedUnion.Tags.unionValue:
          encoder.encodeStructPointer(TestUnion, val.unionValue);
          break;
      }
      encoder.align();
    };


    NestedUnion.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new NestedUnion();
      var tag = decoder.readUint32();
      switch (tag) {
        case NestedUnion.Tags.int8Value:
          result.int8Value = decoder.decodeStruct(codec.Int8);
          break;
        case NestedUnion.Tags.unionValue:
          result.unionValue = decoder.decodeStructPointer(TestUnion);
          break;
      }
      decoder.align();

      return result;
    };


    NestedUnion.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case NestedUnion.Tags.int8Value:
          

          break;
        case NestedUnion.Tags.unionValue:
          
    // validate NestedUnion.unionValue
    err = messageValidator.validateNestedUnion(data_offset, TestUnion, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  NestedUnion.encodedSize = 16;
  var kMojoEcho_EchoBoolFromUnion_Name = 715766408;
  var kMojoEcho_EchoInt32FromUnion_Name = 1057543701;
  var kMojoEcho_EchoStringFromUnion_Name = 1109250140;
  var kMojoEcho_EchoBoolAsUnion_Name = 1959348605;
  var kMojoEcho_EchoInt32AsUnion_Name = 784076323;
  var kMojoEcho_EchoStringAsUnion_Name = 1450047214;
  var kMojoEcho_EchoNullFromOptionalUnion_Name = 839770269;
  var kMojoEcho_EchoBoolFromOptionalUnion_Name = 618819065;
  var kMojoEcho_EchoInt32FromOptionalUnion_Name = 2009150286;
  var kMojoEcho_EchoStringFromOptionalUnion_Name = 1315487113;
  var kMojoEcho_EchoNullAsOptionalUnion_Name = 1865758832;
  var kMojoEcho_EchoBoolAsOptionalUnion_Name = 1230360559;
  var kMojoEcho_EchoInt32AsOptionalUnion_Name = 860978922;
  var kMojoEcho_EchoStringAsOptionalUnion_Name = 875822198;
  var kMojoEcho_EchoInt8FromNestedUnion_Name = 767811991;
  var kMojoEcho_EchoBoolFromNestedUnion_Name = 438961341;
  var kMojoEcho_EchoStringFromNestedUnion_Name = 2136198651;
  var kMojoEcho_EchoInt8AsNestedUnion_Name = 48636481;
  var kMojoEcho_EchoBoolAsNestedUnion_Name = 1728058796;
  var kMojoEcho_EchoStringAsNestedUnion_Name = 763819862;
  var kMojoEcho_EchoNullFromOptionalNestedUnion_Name = 1231742692;
  var kMojoEcho_EchoInt8FromOptionalNestedUnion_Name = 224622667;
  var kMojoEcho_EchoBoolFromOptionalNestedUnion_Name = 1338568144;
  var kMojoEcho_EchoStringFromOptionalNestedUnion_Name = 1155728596;
  var kMojoEcho_EchoNullAsOptionalNestedUnion_Name = 1159630165;
  var kMojoEcho_EchoInt8AsOptionalNestedUnion_Name = 1323467518;
  var kMojoEcho_EchoBoolAsOptionalNestedUnion_Name = 923765355;
  var kMojoEcho_EchoStringAsOptionalNestedUnion_Name = 1368951307;

  function MojoEchoPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(MojoEcho,
                                                   handleOrPtrInfo);
  }

  function MojoEchoAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        MojoEcho, associatedInterfacePtrInfo);
  }

  MojoEchoAssociatedPtr.prototype =
      Object.create(MojoEchoPtr.prototype);
  MojoEchoAssociatedPtr.prototype.constructor =
      MojoEchoAssociatedPtr;

  function MojoEchoProxy(receiver) {
    this.receiver_ = receiver;
  }
  MojoEchoPtr.prototype.echoBoolFromUnion = function() {
    return MojoEchoProxy.prototype.echoBoolFromUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolFromUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoBoolFromUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolFromUnion_Name,
          codec.align(MojoEcho_EchoBoolFromUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolFromUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolFromUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt32FromUnion = function() {
    return MojoEchoProxy.prototype.echoInt32FromUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt32FromUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoInt32FromUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt32FromUnion_Name,
          codec.align(MojoEcho_EchoInt32FromUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt32FromUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt32FromUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringFromUnion = function() {
    return MojoEchoProxy.prototype.echoStringFromUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringFromUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoStringFromUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringFromUnion_Name,
          codec.align(MojoEcho_EchoStringFromUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringFromUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringFromUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolAsUnion = function() {
    return MojoEchoProxy.prototype.echoBoolAsUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolAsUnion = function(value) {
    var params_ = new MojoEcho_EchoBoolAsUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolAsUnion_Name,
          codec.align(MojoEcho_EchoBoolAsUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolAsUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolAsUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt32AsUnion = function() {
    return MojoEchoProxy.prototype.echoInt32AsUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt32AsUnion = function(value) {
    var params_ = new MojoEcho_EchoInt32AsUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt32AsUnion_Name,
          codec.align(MojoEcho_EchoInt32AsUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt32AsUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt32AsUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringAsUnion = function() {
    return MojoEchoProxy.prototype.echoStringAsUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringAsUnion = function(value) {
    var params_ = new MojoEcho_EchoStringAsUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringAsUnion_Name,
          codec.align(MojoEcho_EchoStringAsUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringAsUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringAsUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoNullFromOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoNullFromOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoNullFromOptionalUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoNullFromOptionalUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoNullFromOptionalUnion_Name,
          codec.align(MojoEcho_EchoNullFromOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoNullFromOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoNullFromOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolFromOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoBoolFromOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolFromOptionalUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoBoolFromOptionalUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolFromOptionalUnion_Name,
          codec.align(MojoEcho_EchoBoolFromOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolFromOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolFromOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt32FromOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoInt32FromOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt32FromOptionalUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoInt32FromOptionalUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt32FromOptionalUnion_Name,
          codec.align(MojoEcho_EchoInt32FromOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt32FromOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt32FromOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringFromOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoStringFromOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringFromOptionalUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoStringFromOptionalUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringFromOptionalUnion_Name,
          codec.align(MojoEcho_EchoStringFromOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringFromOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringFromOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoNullAsOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoNullAsOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoNullAsOptionalUnion = function() {
    var params_ = new MojoEcho_EchoNullAsOptionalUnion_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoNullAsOptionalUnion_Name,
          codec.align(MojoEcho_EchoNullAsOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoNullAsOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoNullAsOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolAsOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoBoolAsOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolAsOptionalUnion = function(value) {
    var params_ = new MojoEcho_EchoBoolAsOptionalUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolAsOptionalUnion_Name,
          codec.align(MojoEcho_EchoBoolAsOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolAsOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolAsOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt32AsOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoInt32AsOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt32AsOptionalUnion = function(value) {
    var params_ = new MojoEcho_EchoInt32AsOptionalUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt32AsOptionalUnion_Name,
          codec.align(MojoEcho_EchoInt32AsOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt32AsOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt32AsOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringAsOptionalUnion = function() {
    return MojoEchoProxy.prototype.echoStringAsOptionalUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringAsOptionalUnion = function(value) {
    var params_ = new MojoEcho_EchoStringAsOptionalUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringAsOptionalUnion_Name,
          codec.align(MojoEcho_EchoStringAsOptionalUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringAsOptionalUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringAsOptionalUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt8FromNestedUnion = function() {
    return MojoEchoProxy.prototype.echoInt8FromNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt8FromNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoInt8FromNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt8FromNestedUnion_Name,
          codec.align(MojoEcho_EchoInt8FromNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt8FromNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt8FromNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolFromNestedUnion = function() {
    return MojoEchoProxy.prototype.echoBoolFromNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolFromNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoBoolFromNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolFromNestedUnion_Name,
          codec.align(MojoEcho_EchoBoolFromNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolFromNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolFromNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringFromNestedUnion = function() {
    return MojoEchoProxy.prototype.echoStringFromNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringFromNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoStringFromNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringFromNestedUnion_Name,
          codec.align(MojoEcho_EchoStringFromNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringFromNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringFromNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt8AsNestedUnion = function() {
    return MojoEchoProxy.prototype.echoInt8AsNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt8AsNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoInt8AsNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt8AsNestedUnion_Name,
          codec.align(MojoEcho_EchoInt8AsNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt8AsNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt8AsNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolAsNestedUnion = function() {
    return MojoEchoProxy.prototype.echoBoolAsNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolAsNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoBoolAsNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolAsNestedUnion_Name,
          codec.align(MojoEcho_EchoBoolAsNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolAsNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolAsNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringAsNestedUnion = function() {
    return MojoEchoProxy.prototype.echoStringAsNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringAsNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoStringAsNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringAsNestedUnion_Name,
          codec.align(MojoEcho_EchoStringAsNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringAsNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringAsNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoNullFromOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoNullFromOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoNullFromOptionalNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoNullFromOptionalNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoNullFromOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoNullFromOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoNullFromOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt8FromOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoInt8FromOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt8FromOptionalNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoInt8FromOptionalNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt8FromOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoInt8FromOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt8FromOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolFromOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoBoolFromOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolFromOptionalNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoBoolFromOptionalNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolFromOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoBoolFromOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolFromOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringFromOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoStringFromOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringFromOptionalNestedUnion = function(testUnion) {
    var params_ = new MojoEcho_EchoStringFromOptionalNestedUnion_Params();
    params_.testUnion = testUnion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringFromOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoStringFromOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringFromOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoNullAsOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoNullAsOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoNullAsOptionalNestedUnion = function() {
    var params_ = new MojoEcho_EchoNullAsOptionalNestedUnion_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoNullAsOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoNullAsOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoNullAsOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoInt8AsOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoInt8AsOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoInt8AsOptionalNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoInt8AsOptionalNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoInt8AsOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoInt8AsOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoInt8AsOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoBoolAsOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoBoolAsOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoBoolAsOptionalNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoBoolAsOptionalNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoBoolAsOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoBoolAsOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoBoolAsOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  MojoEchoPtr.prototype.echoStringAsOptionalNestedUnion = function() {
    return MojoEchoProxy.prototype.echoStringAsOptionalNestedUnion
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoEchoProxy.prototype.echoStringAsOptionalNestedUnion = function(value) {
    var params_ = new MojoEcho_EchoStringAsOptionalNestedUnion_Params();
    params_.value = value;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMojoEcho_EchoStringAsOptionalNestedUnion_Name,
          codec.align(MojoEcho_EchoStringAsOptionalNestedUnion_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MojoEcho_EchoStringAsOptionalNestedUnion_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function MojoEchoStub(delegate) {
    this.delegate_ = delegate;
  }
  MojoEchoStub.prototype.echoBoolFromUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoBoolFromUnion && this.delegate_.echoBoolFromUnion(testUnion);
  }
  MojoEchoStub.prototype.echoInt32FromUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoInt32FromUnion && this.delegate_.echoInt32FromUnion(testUnion);
  }
  MojoEchoStub.prototype.echoStringFromUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoStringFromUnion && this.delegate_.echoStringFromUnion(testUnion);
  }
  MojoEchoStub.prototype.echoBoolAsUnion = function(value) {
    return this.delegate_ && this.delegate_.echoBoolAsUnion && this.delegate_.echoBoolAsUnion(value);
  }
  MojoEchoStub.prototype.echoInt32AsUnion = function(value) {
    return this.delegate_ && this.delegate_.echoInt32AsUnion && this.delegate_.echoInt32AsUnion(value);
  }
  MojoEchoStub.prototype.echoStringAsUnion = function(value) {
    return this.delegate_ && this.delegate_.echoStringAsUnion && this.delegate_.echoStringAsUnion(value);
  }
  MojoEchoStub.prototype.echoNullFromOptionalUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoNullFromOptionalUnion && this.delegate_.echoNullFromOptionalUnion(testUnion);
  }
  MojoEchoStub.prototype.echoBoolFromOptionalUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoBoolFromOptionalUnion && this.delegate_.echoBoolFromOptionalUnion(testUnion);
  }
  MojoEchoStub.prototype.echoInt32FromOptionalUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoInt32FromOptionalUnion && this.delegate_.echoInt32FromOptionalUnion(testUnion);
  }
  MojoEchoStub.prototype.echoStringFromOptionalUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoStringFromOptionalUnion && this.delegate_.echoStringFromOptionalUnion(testUnion);
  }
  MojoEchoStub.prototype.echoNullAsOptionalUnion = function() {
    return this.delegate_ && this.delegate_.echoNullAsOptionalUnion && this.delegate_.echoNullAsOptionalUnion();
  }
  MojoEchoStub.prototype.echoBoolAsOptionalUnion = function(value) {
    return this.delegate_ && this.delegate_.echoBoolAsOptionalUnion && this.delegate_.echoBoolAsOptionalUnion(value);
  }
  MojoEchoStub.prototype.echoInt32AsOptionalUnion = function(value) {
    return this.delegate_ && this.delegate_.echoInt32AsOptionalUnion && this.delegate_.echoInt32AsOptionalUnion(value);
  }
  MojoEchoStub.prototype.echoStringAsOptionalUnion = function(value) {
    return this.delegate_ && this.delegate_.echoStringAsOptionalUnion && this.delegate_.echoStringAsOptionalUnion(value);
  }
  MojoEchoStub.prototype.echoInt8FromNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoInt8FromNestedUnion && this.delegate_.echoInt8FromNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoBoolFromNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoBoolFromNestedUnion && this.delegate_.echoBoolFromNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoStringFromNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoStringFromNestedUnion && this.delegate_.echoStringFromNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoInt8AsNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoInt8AsNestedUnion && this.delegate_.echoInt8AsNestedUnion(value);
  }
  MojoEchoStub.prototype.echoBoolAsNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoBoolAsNestedUnion && this.delegate_.echoBoolAsNestedUnion(value);
  }
  MojoEchoStub.prototype.echoStringAsNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoStringAsNestedUnion && this.delegate_.echoStringAsNestedUnion(value);
  }
  MojoEchoStub.prototype.echoNullFromOptionalNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoNullFromOptionalNestedUnion && this.delegate_.echoNullFromOptionalNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoInt8FromOptionalNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoInt8FromOptionalNestedUnion && this.delegate_.echoInt8FromOptionalNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoBoolFromOptionalNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoBoolFromOptionalNestedUnion && this.delegate_.echoBoolFromOptionalNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoStringFromOptionalNestedUnion = function(testUnion) {
    return this.delegate_ && this.delegate_.echoStringFromOptionalNestedUnion && this.delegate_.echoStringFromOptionalNestedUnion(testUnion);
  }
  MojoEchoStub.prototype.echoNullAsOptionalNestedUnion = function() {
    return this.delegate_ && this.delegate_.echoNullAsOptionalNestedUnion && this.delegate_.echoNullAsOptionalNestedUnion();
  }
  MojoEchoStub.prototype.echoInt8AsOptionalNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoInt8AsOptionalNestedUnion && this.delegate_.echoInt8AsOptionalNestedUnion(value);
  }
  MojoEchoStub.prototype.echoBoolAsOptionalNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoBoolAsOptionalNestedUnion && this.delegate_.echoBoolAsOptionalNestedUnion(value);
  }
  MojoEchoStub.prototype.echoStringAsOptionalNestedUnion = function(value) {
    return this.delegate_ && this.delegate_.echoStringAsOptionalNestedUnion && this.delegate_.echoStringAsOptionalNestedUnion(value);
  }

  MojoEchoStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  MojoEchoStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kMojoEcho_EchoBoolFromUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolFromUnion_Params);
      this.echoBoolFromUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolFromUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolFromUnion_Name,
            codec.align(MojoEcho_EchoBoolFromUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolFromUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt32FromUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt32FromUnion_Params);
      this.echoInt32FromUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt32FromUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt32FromUnion_Name,
            codec.align(MojoEcho_EchoInt32FromUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt32FromUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringFromUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringFromUnion_Params);
      this.echoStringFromUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringFromUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringFromUnion_Name,
            codec.align(MojoEcho_EchoStringFromUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringFromUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolAsUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolAsUnion_Params);
      this.echoBoolAsUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolAsUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolAsUnion_Name,
            codec.align(MojoEcho_EchoBoolAsUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolAsUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt32AsUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt32AsUnion_Params);
      this.echoInt32AsUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt32AsUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt32AsUnion_Name,
            codec.align(MojoEcho_EchoInt32AsUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt32AsUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringAsUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringAsUnion_Params);
      this.echoStringAsUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringAsUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringAsUnion_Name,
            codec.align(MojoEcho_EchoStringAsUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringAsUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoNullFromOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoNullFromOptionalUnion_Params);
      this.echoNullFromOptionalUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoNullFromOptionalUnion_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoNullFromOptionalUnion_Name,
            codec.align(MojoEcho_EchoNullFromOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoNullFromOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolFromOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolFromOptionalUnion_Params);
      this.echoBoolFromOptionalUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolFromOptionalUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolFromOptionalUnion_Name,
            codec.align(MojoEcho_EchoBoolFromOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolFromOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt32FromOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt32FromOptionalUnion_Params);
      this.echoInt32FromOptionalUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt32FromOptionalUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt32FromOptionalUnion_Name,
            codec.align(MojoEcho_EchoInt32FromOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt32FromOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringFromOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringFromOptionalUnion_Params);
      this.echoStringFromOptionalUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringFromOptionalUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringFromOptionalUnion_Name,
            codec.align(MojoEcho_EchoStringFromOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringFromOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoNullAsOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoNullAsOptionalUnion_Params);
      this.echoNullAsOptionalUnion().then(function(response) {
        var responseParams =
            new MojoEcho_EchoNullAsOptionalUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoNullAsOptionalUnion_Name,
            codec.align(MojoEcho_EchoNullAsOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoNullAsOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolAsOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolAsOptionalUnion_Params);
      this.echoBoolAsOptionalUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolAsOptionalUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolAsOptionalUnion_Name,
            codec.align(MojoEcho_EchoBoolAsOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolAsOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt32AsOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt32AsOptionalUnion_Params);
      this.echoInt32AsOptionalUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt32AsOptionalUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt32AsOptionalUnion_Name,
            codec.align(MojoEcho_EchoInt32AsOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt32AsOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringAsOptionalUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringAsOptionalUnion_Params);
      this.echoStringAsOptionalUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringAsOptionalUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringAsOptionalUnion_Name,
            codec.align(MojoEcho_EchoStringAsOptionalUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringAsOptionalUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt8FromNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt8FromNestedUnion_Params);
      this.echoInt8FromNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt8FromNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt8FromNestedUnion_Name,
            codec.align(MojoEcho_EchoInt8FromNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt8FromNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolFromNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolFromNestedUnion_Params);
      this.echoBoolFromNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolFromNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolFromNestedUnion_Name,
            codec.align(MojoEcho_EchoBoolFromNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolFromNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringFromNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringFromNestedUnion_Params);
      this.echoStringFromNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringFromNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringFromNestedUnion_Name,
            codec.align(MojoEcho_EchoStringFromNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringFromNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt8AsNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt8AsNestedUnion_Params);
      this.echoInt8AsNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt8AsNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt8AsNestedUnion_Name,
            codec.align(MojoEcho_EchoInt8AsNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt8AsNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolAsNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolAsNestedUnion_Params);
      this.echoBoolAsNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolAsNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolAsNestedUnion_Name,
            codec.align(MojoEcho_EchoBoolAsNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolAsNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringAsNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringAsNestedUnion_Params);
      this.echoStringAsNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringAsNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringAsNestedUnion_Name,
            codec.align(MojoEcho_EchoStringAsNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringAsNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoNullFromOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoNullFromOptionalNestedUnion_Params);
      this.echoNullFromOptionalNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoNullFromOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt8FromOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt8FromOptionalNestedUnion_Params);
      this.echoInt8FromOptionalNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt8FromOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolFromOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolFromOptionalNestedUnion_Params);
      this.echoBoolFromOptionalNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolFromOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringFromOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringFromOptionalNestedUnion_Params);
      this.echoStringFromOptionalNestedUnion(params.testUnion).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams();
        responseParams.value = response.value;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringFromOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoNullAsOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoNullAsOptionalNestedUnion_Params);
      this.echoNullAsOptionalNestedUnion().then(function(response) {
        var responseParams =
            new MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoNullAsOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoInt8AsOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoInt8AsOptionalNestedUnion_Params);
      this.echoInt8AsOptionalNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoInt8AsOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoBoolAsOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoBoolAsOptionalNestedUnion_Params);
      this.echoBoolAsOptionalNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoBoolAsOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kMojoEcho_EchoStringAsOptionalNestedUnion_Name:
      var params = reader.decodeStruct(MojoEcho_EchoStringAsOptionalNestedUnion_Params);
      this.echoStringAsOptionalNestedUnion(params.value).then(function(response) {
        var responseParams =
            new MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams();
        responseParams.testUnion = response.testUnion;
        var builder = new codec.MessageV1Builder(
            kMojoEcho_EchoStringAsOptionalNestedUnion_Name,
            codec.align(MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateMojoEchoRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kMojoEcho_EchoBoolFromUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolFromUnion_Params;
      break;
      case kMojoEcho_EchoInt32FromUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt32FromUnion_Params;
      break;
      case kMojoEcho_EchoStringFromUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringFromUnion_Params;
      break;
      case kMojoEcho_EchoBoolAsUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolAsUnion_Params;
      break;
      case kMojoEcho_EchoInt32AsUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt32AsUnion_Params;
      break;
      case kMojoEcho_EchoStringAsUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringAsUnion_Params;
      break;
      case kMojoEcho_EchoNullFromOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoNullFromOptionalUnion_Params;
      break;
      case kMojoEcho_EchoBoolFromOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolFromOptionalUnion_Params;
      break;
      case kMojoEcho_EchoInt32FromOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt32FromOptionalUnion_Params;
      break;
      case kMojoEcho_EchoStringFromOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringFromOptionalUnion_Params;
      break;
      case kMojoEcho_EchoNullAsOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoNullAsOptionalUnion_Params;
      break;
      case kMojoEcho_EchoBoolAsOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolAsOptionalUnion_Params;
      break;
      case kMojoEcho_EchoInt32AsOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt32AsOptionalUnion_Params;
      break;
      case kMojoEcho_EchoStringAsOptionalUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringAsOptionalUnion_Params;
      break;
      case kMojoEcho_EchoInt8FromNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt8FromNestedUnion_Params;
      break;
      case kMojoEcho_EchoBoolFromNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolFromNestedUnion_Params;
      break;
      case kMojoEcho_EchoStringFromNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringFromNestedUnion_Params;
      break;
      case kMojoEcho_EchoInt8AsNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt8AsNestedUnion_Params;
      break;
      case kMojoEcho_EchoBoolAsNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolAsNestedUnion_Params;
      break;
      case kMojoEcho_EchoStringAsNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringAsNestedUnion_Params;
      break;
      case kMojoEcho_EchoNullFromOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoNullFromOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoInt8FromOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt8FromOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoBoolFromOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolFromOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoStringFromOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringFromOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoNullAsOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoNullAsOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoInt8AsOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoInt8AsOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoBoolAsOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoBoolAsOptionalNestedUnion_Params;
      break;
      case kMojoEcho_EchoStringAsOptionalNestedUnion_Name:
        if (message.expectsResponse())
          paramsClass = MojoEcho_EchoStringAsOptionalNestedUnion_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateMojoEchoResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kMojoEcho_EchoBoolFromUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolFromUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt32FromUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt32FromUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringFromUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringFromUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolAsUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolAsUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt32AsUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt32AsUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringAsUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringAsUnion_ResponseParams;
        break;
      case kMojoEcho_EchoNullFromOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoNullFromOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolFromOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolFromOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt32FromOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt32FromOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringFromOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringFromOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoNullAsOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoNullAsOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolAsOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolAsOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt32AsOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt32AsOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringAsOptionalUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringAsOptionalUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt8FromNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt8FromNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolFromNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolFromNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringFromNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringFromNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt8AsNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt8AsNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolAsNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolAsNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringAsNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringAsNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoNullFromOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoNullFromOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt8FromOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt8FromOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolFromOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolFromOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringFromOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringFromOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoNullAsOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoNullAsOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoInt8AsOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoInt8AsOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoBoolAsOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoBoolAsOptionalNestedUnion_ResponseParams;
        break;
      case kMojoEcho_EchoStringAsOptionalNestedUnion_Name:
        if (message.isResponse())
          paramsClass = MojoEcho_EchoStringAsOptionalNestedUnion_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var MojoEcho = {
    name: 'content.mojom.MojoEcho',
    kVersion: 0,
    ptrClass: MojoEchoPtr,
    proxyClass: MojoEchoProxy,
    stubClass: MojoEchoStub,
    validateRequest: validateMojoEchoRequest,
    validateResponse: validateMojoEchoResponse,
  };
  MojoEchoStub.prototype.validator = validateMojoEchoRequest;
  MojoEchoProxy.prototype.validator = validateMojoEchoResponse;
  exports.TestUnion = TestUnion;
  exports.NestedUnion = NestedUnion;
  exports.MojoEcho = MojoEcho;
  exports.MojoEchoPtr = MojoEchoPtr;
  exports.MojoEchoAssociatedPtr = MojoEchoAssociatedPtr;
})();