// content/test/test_mojo_binder_policy_applier_unittest.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'content/test/test_mojo_binder_policy_applier_unittest.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');



  function TestInterfaceForDefer_Ping_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  TestInterfaceForDefer_Ping_Params.prototype.initDefaults_ = function() {
  };
  TestInterfaceForDefer_Ping_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  TestInterfaceForDefer_Ping_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  TestInterfaceForDefer_Ping_Params.encodedSize = codec.kStructHeaderSize + 0;

  TestInterfaceForDefer_Ping_Params.decode = function(decoder) {
    var packed;
    var val = new TestInterfaceForDefer_Ping_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  TestInterfaceForDefer_Ping_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(TestInterfaceForDefer_Ping_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function TestInterfaceForDefer_Ping_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  TestInterfaceForDefer_Ping_ResponseParams.prototype.initDefaults_ = function() {
  };
  TestInterfaceForDefer_Ping_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  TestInterfaceForDefer_Ping_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  TestInterfaceForDefer_Ping_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  TestInterfaceForDefer_Ping_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new TestInterfaceForDefer_Ping_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  TestInterfaceForDefer_Ping_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(TestInterfaceForDefer_Ping_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function MojoContextProvider_GrantAll_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MojoContextProvider_GrantAll_Params.prototype.initDefaults_ = function() {
  };
  MojoContextProvider_GrantAll_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MojoContextProvider_GrantAll_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MojoContextProvider_GrantAll_Params.encodedSize = codec.kStructHeaderSize + 0;

  MojoContextProvider_GrantAll_Params.decode = function(decoder) {
    var packed;
    var val = new MojoContextProvider_GrantAll_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  MojoContextProvider_GrantAll_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MojoContextProvider_GrantAll_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kTestInterfaceForDefer_Ping_Name = 1331235755;

  function TestInterfaceForDeferPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(TestInterfaceForDefer,
                                                   handleOrPtrInfo);
  }

  function TestInterfaceForDeferAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        TestInterfaceForDefer, associatedInterfacePtrInfo);
  }

  TestInterfaceForDeferAssociatedPtr.prototype =
      Object.create(TestInterfaceForDeferPtr.prototype);
  TestInterfaceForDeferAssociatedPtr.prototype.constructor =
      TestInterfaceForDeferAssociatedPtr;

  function TestInterfaceForDeferProxy(receiver) {
    this.receiver_ = receiver;
  }
  TestInterfaceForDeferPtr.prototype.ping = function() {
    return TestInterfaceForDeferProxy.prototype.ping
        .apply(this.ptr.getProxy(), arguments);
  };

  TestInterfaceForDeferProxy.prototype.ping = function() {
    var params_ = new TestInterfaceForDefer_Ping_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kTestInterfaceForDefer_Ping_Name,
          codec.align(TestInterfaceForDefer_Ping_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(TestInterfaceForDefer_Ping_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(TestInterfaceForDefer_Ping_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function TestInterfaceForDeferStub(delegate) {
    this.delegate_ = delegate;
  }
  TestInterfaceForDeferStub.prototype.ping = function() {
    return this.delegate_ && this.delegate_.ping && this.delegate_.ping();
  }

  TestInterfaceForDeferStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  TestInterfaceForDeferStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kTestInterfaceForDefer_Ping_Name:
      var params = reader.decodeStruct(TestInterfaceForDefer_Ping_Params);
      this.ping().then(function(response) {
        var responseParams =
            new TestInterfaceForDefer_Ping_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kTestInterfaceForDefer_Ping_Name,
            codec.align(TestInterfaceForDefer_Ping_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(TestInterfaceForDefer_Ping_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateTestInterfaceForDeferRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kTestInterfaceForDefer_Ping_Name:
        if (message.expectsResponse())
          paramsClass = TestInterfaceForDefer_Ping_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateTestInterfaceForDeferResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kTestInterfaceForDefer_Ping_Name:
        if (message.isResponse())
          paramsClass = TestInterfaceForDefer_Ping_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var TestInterfaceForDefer = {
    name: 'content.mojom.TestInterfaceForDefer',
    kVersion: 0,
    ptrClass: TestInterfaceForDeferPtr,
    proxyClass: TestInterfaceForDeferProxy,
    stubClass: TestInterfaceForDeferStub,
    validateRequest: validateTestInterfaceForDeferRequest,
    validateResponse: validateTestInterfaceForDeferResponse,
  };
  TestInterfaceForDeferStub.prototype.validator = validateTestInterfaceForDeferRequest;
  TestInterfaceForDeferProxy.prototype.validator = validateTestInterfaceForDeferResponse;

  function TestInterfaceForGrantPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(TestInterfaceForGrant,
                                                   handleOrPtrInfo);
  }

  function TestInterfaceForGrantAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        TestInterfaceForGrant, associatedInterfacePtrInfo);
  }

  TestInterfaceForGrantAssociatedPtr.prototype =
      Object.create(TestInterfaceForGrantPtr.prototype);
  TestInterfaceForGrantAssociatedPtr.prototype.constructor =
      TestInterfaceForGrantAssociatedPtr;

  function TestInterfaceForGrantProxy(receiver) {
    this.receiver_ = receiver;
  }

  function TestInterfaceForGrantStub(delegate) {
    this.delegate_ = delegate;
  }

  TestInterfaceForGrantStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  TestInterfaceForGrantStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateTestInterfaceForGrantRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateTestInterfaceForGrantResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var TestInterfaceForGrant = {
    name: 'content.mojom.TestInterfaceForGrant',
    kVersion: 0,
    ptrClass: TestInterfaceForGrantPtr,
    proxyClass: TestInterfaceForGrantProxy,
    stubClass: TestInterfaceForGrantStub,
    validateRequest: validateTestInterfaceForGrantRequest,
    validateResponse: null,
  };
  TestInterfaceForGrantStub.prototype.validator = validateTestInterfaceForGrantRequest;
  TestInterfaceForGrantProxy.prototype.validator = null;

  function TestInterfaceForCancelPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(TestInterfaceForCancel,
                                                   handleOrPtrInfo);
  }

  function TestInterfaceForCancelAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        TestInterfaceForCancel, associatedInterfacePtrInfo);
  }

  TestInterfaceForCancelAssociatedPtr.prototype =
      Object.create(TestInterfaceForCancelPtr.prototype);
  TestInterfaceForCancelAssociatedPtr.prototype.constructor =
      TestInterfaceForCancelAssociatedPtr;

  function TestInterfaceForCancelProxy(receiver) {
    this.receiver_ = receiver;
  }

  function TestInterfaceForCancelStub(delegate) {
    this.delegate_ = delegate;
  }

  TestInterfaceForCancelStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  TestInterfaceForCancelStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateTestInterfaceForCancelRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateTestInterfaceForCancelResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var TestInterfaceForCancel = {
    name: 'content.mojom.TestInterfaceForCancel',
    kVersion: 0,
    ptrClass: TestInterfaceForCancelPtr,
    proxyClass: TestInterfaceForCancelProxy,
    stubClass: TestInterfaceForCancelStub,
    validateRequest: validateTestInterfaceForCancelRequest,
    validateResponse: null,
  };
  TestInterfaceForCancelStub.prototype.validator = validateTestInterfaceForCancelRequest;
  TestInterfaceForCancelProxy.prototype.validator = null;

  function TestInterfaceForUnexpectedPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(TestInterfaceForUnexpected,
                                                   handleOrPtrInfo);
  }

  function TestInterfaceForUnexpectedAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        TestInterfaceForUnexpected, associatedInterfacePtrInfo);
  }

  TestInterfaceForUnexpectedAssociatedPtr.prototype =
      Object.create(TestInterfaceForUnexpectedPtr.prototype);
  TestInterfaceForUnexpectedAssociatedPtr.prototype.constructor =
      TestInterfaceForUnexpectedAssociatedPtr;

  function TestInterfaceForUnexpectedProxy(receiver) {
    this.receiver_ = receiver;
  }

  function TestInterfaceForUnexpectedStub(delegate) {
    this.delegate_ = delegate;
  }

  TestInterfaceForUnexpectedStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  TestInterfaceForUnexpectedStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateTestInterfaceForUnexpectedRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateTestInterfaceForUnexpectedResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var TestInterfaceForUnexpected = {
    name: 'content.mojom.TestInterfaceForUnexpected',
    kVersion: 0,
    ptrClass: TestInterfaceForUnexpectedPtr,
    proxyClass: TestInterfaceForUnexpectedProxy,
    stubClass: TestInterfaceForUnexpectedStub,
    validateRequest: validateTestInterfaceForUnexpectedRequest,
    validateResponse: null,
  };
  TestInterfaceForUnexpectedStub.prototype.validator = validateTestInterfaceForUnexpectedRequest;
  TestInterfaceForUnexpectedProxy.prototype.validator = null;
  var kMojoContextProvider_GrantAll_Name = 1055375158;

  function MojoContextProviderPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(MojoContextProvider,
                                                   handleOrPtrInfo);
  }

  function MojoContextProviderAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        MojoContextProvider, associatedInterfacePtrInfo);
  }

  MojoContextProviderAssociatedPtr.prototype =
      Object.create(MojoContextProviderPtr.prototype);
  MojoContextProviderAssociatedPtr.prototype.constructor =
      MojoContextProviderAssociatedPtr;

  function MojoContextProviderProxy(receiver) {
    this.receiver_ = receiver;
  }
  MojoContextProviderPtr.prototype.grantAll = function() {
    return MojoContextProviderProxy.prototype.grantAll
        .apply(this.ptr.getProxy(), arguments);
  };

  MojoContextProviderProxy.prototype.grantAll = function() {
    var params_ = new MojoContextProvider_GrantAll_Params();
    var builder = new codec.MessageV0Builder(
        kMojoContextProvider_GrantAll_Name,
        codec.align(MojoContextProvider_GrantAll_Params.encodedSize));
    builder.encodeStruct(MojoContextProvider_GrantAll_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function MojoContextProviderStub(delegate) {
    this.delegate_ = delegate;
  }
  MojoContextProviderStub.prototype.grantAll = function() {
    return this.delegate_ && this.delegate_.grantAll && this.delegate_.grantAll();
  }

  MojoContextProviderStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kMojoContextProvider_GrantAll_Name:
      var params = reader.decodeStruct(MojoContextProvider_GrantAll_Params);
      this.grantAll();
      return true;
    default:
      return false;
    }
  };

  MojoContextProviderStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateMojoContextProviderRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kMojoContextProvider_GrantAll_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = MojoContextProvider_GrantAll_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateMojoContextProviderResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var MojoContextProvider = {
    name: 'content.mojom.MojoContextProvider',
    kVersion: 0,
    ptrClass: MojoContextProviderPtr,
    proxyClass: MojoContextProviderProxy,
    stubClass: MojoContextProviderStub,
    validateRequest: validateMojoContextProviderRequest,
    validateResponse: null,
  };
  MojoContextProviderStub.prototype.validator = validateMojoContextProviderRequest;
  MojoContextProviderProxy.prototype.validator = null;
  exports.TestInterfaceForDefer = TestInterfaceForDefer;
  exports.TestInterfaceForDeferPtr = TestInterfaceForDeferPtr;
  exports.TestInterfaceForDeferAssociatedPtr = TestInterfaceForDeferAssociatedPtr;
  exports.TestInterfaceForGrant = TestInterfaceForGrant;
  exports.TestInterfaceForGrantPtr = TestInterfaceForGrantPtr;
  exports.TestInterfaceForGrantAssociatedPtr = TestInterfaceForGrantAssociatedPtr;
  exports.TestInterfaceForCancel = TestInterfaceForCancel;
  exports.TestInterfaceForCancelPtr = TestInterfaceForCancelPtr;
  exports.TestInterfaceForCancelAssociatedPtr = TestInterfaceForCancelAssociatedPtr;
  exports.TestInterfaceForUnexpected = TestInterfaceForUnexpected;
  exports.TestInterfaceForUnexpectedPtr = TestInterfaceForUnexpectedPtr;
  exports.TestInterfaceForUnexpectedAssociatedPtr = TestInterfaceForUnexpectedAssociatedPtr;
  exports.MojoContextProvider = MojoContextProvider;
  exports.MojoContextProviderPtr = MojoContextProviderPtr;
  exports.MojoContextProviderAssociatedPtr = MojoContextProviderAssociatedPtr;
})();