// content/common/agent_scheduling_group.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'content/common/agent_scheduling_group.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');
  var associated_interfaces$ =
      mojo.internal.exposeNamespace('content.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'content/common/associated_interfaces.mojom', 'associated_interfaces.mojom.js');
  }
  var frame$ =
      mojo.internal.exposeNamespace('content.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'content/common/frame.mojom', 'frame.mojom.js');
  }
  var frame1$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/frame.mojom', '../../third_party/blink/public/mojom/frame/frame.mojom.js');
  }
  var frame_replication_state$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/frame_replication_state.mojom', '../../third_party/blink/public/mojom/frame/frame_replication_state.mojom.js');
  }
  var tree_scope_type$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/tree_scope_type.mojom', '../../third_party/blink/public/mojom/frame/tree_scope_type.mojom.js');
  }
  var shared_storage_worklet_service$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/shared_storage/shared_storage_worklet_service.mojom', '../../third_party/blink/public/mojom/shared_storage/shared_storage_worklet_service.mojom.js');
  }
  var tokens$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/tokens/tokens.mojom', '../../third_party/blink/public/mojom/tokens/tokens.mojom.js');
  }
  var worklet_global_scope_creation_params$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/worker/worklet_global_scope_creation_params.mojom', '../../third_party/blink/public/mojom/worker/worklet_global_scope_creation_params.mojom.js');
  }



  function AgentSchedulingGroupHost_DidUnloadRenderFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.prototype.initDefaults_ = function() {
    this.frameToken = null;
  };
  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.frameToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.LocalFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.encodedSize = codec.kStructHeaderSize + 8;

  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.decode = function(decoder) {
    var packed;
    var val = new AgentSchedulingGroupHost_DidUnloadRenderFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.frameToken =
        decoder.decodeStructPointer(tokens$.LocalFrameToken);
    return val;
  };

  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.LocalFrameToken, val.frameToken);
  };
  function AgentSchedulingGroup_BindAssociatedInterfaces_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AgentSchedulingGroup_BindAssociatedInterfaces_Params.prototype.initDefaults_ = function() {
    this.remoteHost = new associatedBindings.AssociatedInterfacePtrInfo();
    this.routeProviderReceiver = new associatedBindings.AssociatedInterfaceRequest();
  };
  AgentSchedulingGroup_BindAssociatedInterfaces_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AgentSchedulingGroup_BindAssociatedInterfaces_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_BindAssociatedInterfaces_Params.remoteHost
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_BindAssociatedInterfaces_Params.routeProviderReceiver
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AgentSchedulingGroup_BindAssociatedInterfaces_Params.encodedSize = codec.kStructHeaderSize + 16;

  AgentSchedulingGroup_BindAssociatedInterfaces_Params.decode = function(decoder) {
    var packed;
    var val = new AgentSchedulingGroup_BindAssociatedInterfaces_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.remoteHost =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    val.routeProviderReceiver =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  AgentSchedulingGroup_BindAssociatedInterfaces_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AgentSchedulingGroup_BindAssociatedInterfaces_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.remoteHost);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.routeProviderReceiver);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function AgentSchedulingGroup_CreateView_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AgentSchedulingGroup_CreateView_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  AgentSchedulingGroup_CreateView_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AgentSchedulingGroup_CreateView_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_CreateView_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame$.CreateViewParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AgentSchedulingGroup_CreateView_Params.encodedSize = codec.kStructHeaderSize + 8;

  AgentSchedulingGroup_CreateView_Params.decode = function(decoder) {
    var packed;
    var val = new AgentSchedulingGroup_CreateView_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(frame$.CreateViewParams);
    return val;
  };

  AgentSchedulingGroup_CreateView_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AgentSchedulingGroup_CreateView_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame$.CreateViewParams, val.params);
  };
  function AgentSchedulingGroup_CreateFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AgentSchedulingGroup_CreateFrame_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  AgentSchedulingGroup_CreateFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AgentSchedulingGroup_CreateFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_CreateFrame_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, frame$.CreateFrameParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AgentSchedulingGroup_CreateFrame_Params.encodedSize = codec.kStructHeaderSize + 8;

  AgentSchedulingGroup_CreateFrame_Params.decode = function(decoder) {
    var packed;
    var val = new AgentSchedulingGroup_CreateFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(frame$.CreateFrameParams);
    return val;
  };

  AgentSchedulingGroup_CreateFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AgentSchedulingGroup_CreateFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(frame$.CreateFrameParams, val.params);
  };
  function AgentSchedulingGroup_CreateSharedStorageWorkletService_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.prototype.initDefaults_ = function() {
    this.receiver = new bindings.InterfaceRequest();
    this.globalScopeCreationParams = null;
  };
  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.receiver
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.globalScopeCreationParams
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, worklet_global_scope_creation_params$.WorkletGlobalScopeCreationParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.encodedSize = codec.kStructHeaderSize + 16;

  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.decode = function(decoder) {
    var packed;
    var val = new AgentSchedulingGroup_CreateSharedStorageWorkletService_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.receiver =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.globalScopeCreationParams =
        decoder.decodeStructPointer(worklet_global_scope_creation_params$.WorkletGlobalScopeCreationParams);
    return val;
  };

  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.InterfaceRequest, val.receiver);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(worklet_global_scope_creation_params$.WorkletGlobalScopeCreationParams, val.globalScopeCreationParams);
  };
  var kAgentSchedulingGroupHost_DidUnloadRenderFrame_Name = 1638878379;

  function AgentSchedulingGroupHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(AgentSchedulingGroupHost,
                                                   handleOrPtrInfo);
  }

  function AgentSchedulingGroupHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        AgentSchedulingGroupHost, associatedInterfacePtrInfo);
  }

  AgentSchedulingGroupHostAssociatedPtr.prototype =
      Object.create(AgentSchedulingGroupHostPtr.prototype);
  AgentSchedulingGroupHostAssociatedPtr.prototype.constructor =
      AgentSchedulingGroupHostAssociatedPtr;

  function AgentSchedulingGroupHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  AgentSchedulingGroupHostPtr.prototype.didUnloadRenderFrame = function() {
    return AgentSchedulingGroupHostProxy.prototype.didUnloadRenderFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  AgentSchedulingGroupHostProxy.prototype.didUnloadRenderFrame = function(frameToken) {
    var params_ = new AgentSchedulingGroupHost_DidUnloadRenderFrame_Params();
    params_.frameToken = frameToken;
    var builder = new codec.MessageV0Builder(
        kAgentSchedulingGroupHost_DidUnloadRenderFrame_Name,
        codec.align(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params.encodedSize));
    builder.encodeStruct(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function AgentSchedulingGroupHostStub(delegate) {
    this.delegate_ = delegate;
  }
  AgentSchedulingGroupHostStub.prototype.didUnloadRenderFrame = function(frameToken) {
    return this.delegate_ && this.delegate_.didUnloadRenderFrame && this.delegate_.didUnloadRenderFrame(frameToken);
  }

  AgentSchedulingGroupHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kAgentSchedulingGroupHost_DidUnloadRenderFrame_Name:
      var params = reader.decodeStruct(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params);
      this.didUnloadRenderFrame(params.frameToken);
      return true;
    default:
      return false;
    }
  };

  AgentSchedulingGroupHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateAgentSchedulingGroupHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kAgentSchedulingGroupHost_DidUnloadRenderFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AgentSchedulingGroupHost_DidUnloadRenderFrame_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateAgentSchedulingGroupHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var AgentSchedulingGroupHost = {
    name: 'content.mojom.AgentSchedulingGroupHost',
    kVersion: 0,
    ptrClass: AgentSchedulingGroupHostPtr,
    proxyClass: AgentSchedulingGroupHostProxy,
    stubClass: AgentSchedulingGroupHostStub,
    validateRequest: validateAgentSchedulingGroupHostRequest,
    validateResponse: null,
  };
  AgentSchedulingGroupHostStub.prototype.validator = validateAgentSchedulingGroupHostRequest;
  AgentSchedulingGroupHostProxy.prototype.validator = null;
  var kAgentSchedulingGroup_BindAssociatedInterfaces_Name = 1803924257;
  var kAgentSchedulingGroup_CreateView_Name = 780650694;
  var kAgentSchedulingGroup_CreateFrame_Name = 947339605;
  var kAgentSchedulingGroup_CreateSharedStorageWorkletService_Name = 1554650022;

  function AgentSchedulingGroupPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(AgentSchedulingGroup,
                                                   handleOrPtrInfo);
  }

  function AgentSchedulingGroupAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        AgentSchedulingGroup, associatedInterfacePtrInfo);
  }

  AgentSchedulingGroupAssociatedPtr.prototype =
      Object.create(AgentSchedulingGroupPtr.prototype);
  AgentSchedulingGroupAssociatedPtr.prototype.constructor =
      AgentSchedulingGroupAssociatedPtr;

  function AgentSchedulingGroupProxy(receiver) {
    this.receiver_ = receiver;
  }
  AgentSchedulingGroupPtr.prototype.bindAssociatedInterfaces = function() {
    return AgentSchedulingGroupProxy.prototype.bindAssociatedInterfaces
        .apply(this.ptr.getProxy(), arguments);
  };

  AgentSchedulingGroupProxy.prototype.bindAssociatedInterfaces = function(remoteHost, routeProviderReceiver) {
    var params_ = new AgentSchedulingGroup_BindAssociatedInterfaces_Params();
    params_.remoteHost = remoteHost;
    params_.routeProviderReceiver = routeProviderReceiver;
    var builder = new codec.MessageV2Builder(
        kAgentSchedulingGroup_BindAssociatedInterfaces_Name,
        codec.align(AgentSchedulingGroup_BindAssociatedInterfaces_Params.encodedSize));
    builder.setPayload(AgentSchedulingGroup_BindAssociatedInterfaces_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  AgentSchedulingGroupPtr.prototype.createView = function() {
    return AgentSchedulingGroupProxy.prototype.createView
        .apply(this.ptr.getProxy(), arguments);
  };

  AgentSchedulingGroupProxy.prototype.createView = function(params) {
    var params_ = new AgentSchedulingGroup_CreateView_Params();
    params_.params = params;
    var builder = new codec.MessageV2Builder(
        kAgentSchedulingGroup_CreateView_Name,
        codec.align(AgentSchedulingGroup_CreateView_Params.encodedSize));
    builder.setPayload(AgentSchedulingGroup_CreateView_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  AgentSchedulingGroupPtr.prototype.createFrame = function() {
    return AgentSchedulingGroupProxy.prototype.createFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  AgentSchedulingGroupProxy.prototype.createFrame = function(params) {
    var params_ = new AgentSchedulingGroup_CreateFrame_Params();
    params_.params = params;
    var builder = new codec.MessageV2Builder(
        kAgentSchedulingGroup_CreateFrame_Name,
        codec.align(AgentSchedulingGroup_CreateFrame_Params.encodedSize));
    builder.setPayload(AgentSchedulingGroup_CreateFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  AgentSchedulingGroupPtr.prototype.createSharedStorageWorkletService = function() {
    return AgentSchedulingGroupProxy.prototype.createSharedStorageWorkletService
        .apply(this.ptr.getProxy(), arguments);
  };

  AgentSchedulingGroupProxy.prototype.createSharedStorageWorkletService = function(receiver, globalScopeCreationParams) {
    var params_ = new AgentSchedulingGroup_CreateSharedStorageWorkletService_Params();
    params_.receiver = receiver;
    params_.globalScopeCreationParams = globalScopeCreationParams;
    var builder = new codec.MessageV0Builder(
        kAgentSchedulingGroup_CreateSharedStorageWorkletService_Name,
        codec.align(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params.encodedSize));
    builder.encodeStruct(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function AgentSchedulingGroupStub(delegate) {
    this.delegate_ = delegate;
  }
  AgentSchedulingGroupStub.prototype.bindAssociatedInterfaces = function(remoteHost, routeProviderReceiver) {
    return this.delegate_ && this.delegate_.bindAssociatedInterfaces && this.delegate_.bindAssociatedInterfaces(remoteHost, routeProviderReceiver);
  }
  AgentSchedulingGroupStub.prototype.createView = function(params) {
    return this.delegate_ && this.delegate_.createView && this.delegate_.createView(params);
  }
  AgentSchedulingGroupStub.prototype.createFrame = function(params) {
    return this.delegate_ && this.delegate_.createFrame && this.delegate_.createFrame(params);
  }
  AgentSchedulingGroupStub.prototype.createSharedStorageWorkletService = function(receiver, globalScopeCreationParams) {
    return this.delegate_ && this.delegate_.createSharedStorageWorkletService && this.delegate_.createSharedStorageWorkletService(receiver, globalScopeCreationParams);
  }

  AgentSchedulingGroupStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kAgentSchedulingGroup_BindAssociatedInterfaces_Name:
      var params = reader.decodeStruct(AgentSchedulingGroup_BindAssociatedInterfaces_Params);
      this.bindAssociatedInterfaces(params.remoteHost, params.routeProviderReceiver);
      return true;
    case kAgentSchedulingGroup_CreateView_Name:
      var params = reader.decodeStruct(AgentSchedulingGroup_CreateView_Params);
      this.createView(params.params);
      return true;
    case kAgentSchedulingGroup_CreateFrame_Name:
      var params = reader.decodeStruct(AgentSchedulingGroup_CreateFrame_Params);
      this.createFrame(params.params);
      return true;
    case kAgentSchedulingGroup_CreateSharedStorageWorkletService_Name:
      var params = reader.decodeStruct(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params);
      this.createSharedStorageWorkletService(params.receiver, params.globalScopeCreationParams);
      return true;
    default:
      return false;
    }
  };

  AgentSchedulingGroupStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateAgentSchedulingGroupRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kAgentSchedulingGroup_BindAssociatedInterfaces_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AgentSchedulingGroup_BindAssociatedInterfaces_Params;
      break;
      case kAgentSchedulingGroup_CreateView_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AgentSchedulingGroup_CreateView_Params;
      break;
      case kAgentSchedulingGroup_CreateFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AgentSchedulingGroup_CreateFrame_Params;
      break;
      case kAgentSchedulingGroup_CreateSharedStorageWorkletService_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AgentSchedulingGroup_CreateSharedStorageWorkletService_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateAgentSchedulingGroupResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var AgentSchedulingGroup = {
    name: 'content.mojom.AgentSchedulingGroup',
    kVersion: 0,
    ptrClass: AgentSchedulingGroupPtr,
    proxyClass: AgentSchedulingGroupProxy,
    stubClass: AgentSchedulingGroupStub,
    validateRequest: validateAgentSchedulingGroupRequest,
    validateResponse: null,
  };
  AgentSchedulingGroupStub.prototype.validator = validateAgentSchedulingGroupRequest;
  AgentSchedulingGroupProxy.prototype.validator = null;
  exports.AgentSchedulingGroupHost = AgentSchedulingGroupHost;
  exports.AgentSchedulingGroupHostPtr = AgentSchedulingGroupHostPtr;
  exports.AgentSchedulingGroupHostAssociatedPtr = AgentSchedulingGroupHostAssociatedPtr;
  exports.AgentSchedulingGroup = AgentSchedulingGroup;
  exports.AgentSchedulingGroupPtr = AgentSchedulingGroupPtr;
  exports.AgentSchedulingGroupAssociatedPtr = AgentSchedulingGroupAssociatedPtr;
})();