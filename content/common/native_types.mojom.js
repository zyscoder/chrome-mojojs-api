// content/common/native_types.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'content/common/native_types.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');


  var ScrollbarButtonsPlacement = {};

  ScrollbarButtonsPlacement.isKnownEnumValue = function(value) {
    return false;
  };

  ScrollbarButtonsPlacement.toKnownEnumValue = function(value) {
    return value;
  };

  ScrollbarButtonsPlacement.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var ScrollerStyle = {};

  ScrollerStyle.isKnownEnumValue = function(value) {
    return false;
  };

  ScrollerStyle.toKnownEnumValue = function(value) {
    return value;
  };

  ScrollerStyle.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var NetworkConnectionType = {};

  NetworkConnectionType.isKnownEnumValue = function(value) {
    return false;
  };

  NetworkConnectionType.toKnownEnumValue = function(value) {
    return value;
  };

  NetworkConnectionType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var SystemThemeColor = {};

  SystemThemeColor.isKnownEnumValue = function(value) {
    return false;
  };

  SystemThemeColor.toKnownEnumValue = function(value) {
    return value;
  };

  SystemThemeColor.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.ScrollbarButtonsPlacement = ScrollbarButtonsPlacement;
  exports.ScrollerStyle = ScrollerStyle;
  exports.NetworkConnectionType = NetworkConnectionType;
  exports.SystemThemeColor = SystemThemeColor;
})();