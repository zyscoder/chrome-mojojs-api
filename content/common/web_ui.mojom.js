// content/common/web_ui.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'content/common/web_ui.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');
  var values$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/values.mojom', '../../mojo/public/mojom/base/values.mojom.js');
  }



  function WebUIHost_Send_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebUIHost_Send_Params.prototype.initDefaults_ = function() {
    this.message = null;
    this.args = null;
  };
  WebUIHost_Send_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebUIHost_Send_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebUIHost_Send_Params.message
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebUIHost_Send_Params.args
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, values$.ListValue, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebUIHost_Send_Params.encodedSize = codec.kStructHeaderSize + 16;

  WebUIHost_Send_Params.decode = function(decoder) {
    var packed;
    var val = new WebUIHost_Send_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.message =
        decoder.decodeStruct(codec.String);
    val.args =
        decoder.decodeStructPointer(values$.ListValue);
    return val;
  };

  WebUIHost_Send_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebUIHost_Send_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.message);
    encoder.encodeStructPointer(values$.ListValue, val.args);
  };
  function WebUI_SetProperty_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WebUI_SetProperty_Params.prototype.initDefaults_ = function() {
    this.propertyName = null;
    this.propertyValueJson = null;
  };
  WebUI_SetProperty_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WebUI_SetProperty_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebUI_SetProperty_Params.propertyName
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WebUI_SetProperty_Params.propertyValueJson
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WebUI_SetProperty_Params.encodedSize = codec.kStructHeaderSize + 16;

  WebUI_SetProperty_Params.decode = function(decoder) {
    var packed;
    var val = new WebUI_SetProperty_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.propertyName =
        decoder.decodeStruct(codec.String);
    val.propertyValueJson =
        decoder.decodeStruct(codec.String);
    return val;
  };

  WebUI_SetProperty_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WebUI_SetProperty_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.propertyName);
    encoder.encodeStruct(codec.String, val.propertyValueJson);
  };
  var kWebUIHost_Send_Name = 1734160026;

  function WebUIHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WebUIHost,
                                                   handleOrPtrInfo);
  }

  function WebUIHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WebUIHost, associatedInterfacePtrInfo);
  }

  WebUIHostAssociatedPtr.prototype =
      Object.create(WebUIHostPtr.prototype);
  WebUIHostAssociatedPtr.prototype.constructor =
      WebUIHostAssociatedPtr;

  function WebUIHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  WebUIHostPtr.prototype.send = function() {
    return WebUIHostProxy.prototype.send
        .apply(this.ptr.getProxy(), arguments);
  };

  WebUIHostProxy.prototype.send = function(message, args) {
    var params_ = new WebUIHost_Send_Params();
    params_.message = message;
    params_.args = args;
    var builder = new codec.MessageV0Builder(
        kWebUIHost_Send_Name,
        codec.align(WebUIHost_Send_Params.encodedSize));
    builder.encodeStruct(WebUIHost_Send_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WebUIHostStub(delegate) {
    this.delegate_ = delegate;
  }
  WebUIHostStub.prototype.send = function(message, args) {
    return this.delegate_ && this.delegate_.send && this.delegate_.send(message, args);
  }

  WebUIHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWebUIHost_Send_Name:
      var params = reader.decodeStruct(WebUIHost_Send_Params);
      this.send(params.message, params.args);
      return true;
    default:
      return false;
    }
  };

  WebUIHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWebUIHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWebUIHost_Send_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = WebUIHost_Send_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWebUIHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var WebUIHost = {
    name: 'content.mojom.WebUIHost',
    kVersion: 0,
    ptrClass: WebUIHostPtr,
    proxyClass: WebUIHostProxy,
    stubClass: WebUIHostStub,
    validateRequest: validateWebUIHostRequest,
    validateResponse: null,
  };
  WebUIHostStub.prototype.validator = validateWebUIHostRequest;
  WebUIHostProxy.prototype.validator = null;
  var kWebUI_SetProperty_Name = 1684000651;

  function WebUIPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WebUI,
                                                   handleOrPtrInfo);
  }

  function WebUIAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WebUI, associatedInterfacePtrInfo);
  }

  WebUIAssociatedPtr.prototype =
      Object.create(WebUIPtr.prototype);
  WebUIAssociatedPtr.prototype.constructor =
      WebUIAssociatedPtr;

  function WebUIProxy(receiver) {
    this.receiver_ = receiver;
  }
  WebUIPtr.prototype.setProperty = function() {
    return WebUIProxy.prototype.setProperty
        .apply(this.ptr.getProxy(), arguments);
  };

  WebUIProxy.prototype.setProperty = function(propertyName, propertyValueJson) {
    var params_ = new WebUI_SetProperty_Params();
    params_.propertyName = propertyName;
    params_.propertyValueJson = propertyValueJson;
    var builder = new codec.MessageV0Builder(
        kWebUI_SetProperty_Name,
        codec.align(WebUI_SetProperty_Params.encodedSize));
    builder.encodeStruct(WebUI_SetProperty_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WebUIStub(delegate) {
    this.delegate_ = delegate;
  }
  WebUIStub.prototype.setProperty = function(propertyName, propertyValueJson) {
    return this.delegate_ && this.delegate_.setProperty && this.delegate_.setProperty(propertyName, propertyValueJson);
  }

  WebUIStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWebUI_SetProperty_Name:
      var params = reader.decodeStruct(WebUI_SetProperty_Params);
      this.setProperty(params.propertyName, params.propertyValueJson);
      return true;
    default:
      return false;
    }
  };

  WebUIStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWebUIRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWebUI_SetProperty_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = WebUI_SetProperty_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWebUIResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var WebUI = {
    name: 'content.mojom.WebUI',
    kVersion: 0,
    ptrClass: WebUIPtr,
    proxyClass: WebUIProxy,
    stubClass: WebUIStub,
    validateRequest: validateWebUIRequest,
    validateResponse: null,
  };
  WebUIStub.prototype.validator = validateWebUIRequest;
  WebUIProxy.prototype.validator = null;
  exports.WebUIHost = WebUIHost;
  exports.WebUIHostPtr = WebUIHostPtr;
  exports.WebUIHostAssociatedPtr = WebUIHostAssociatedPtr;
  exports.WebUI = WebUI;
  exports.WebUIPtr = WebUIPtr;
  exports.WebUIAssociatedPtr = WebUIAssociatedPtr;
})();