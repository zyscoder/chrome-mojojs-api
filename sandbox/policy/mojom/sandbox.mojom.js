// sandbox/policy/mojom/sandbox.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'sandbox/policy/mojom/sandbox.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('sandbox.mojom');


  var Sandbox = {};
  Sandbox.kService = 0;
  Sandbox.kServiceWithJit = 1;
  Sandbox.kUtility = 2;
  Sandbox.kAudio = 3;
  Sandbox.kCdm = 4;
  Sandbox.kNetwork = 5;
  Sandbox.kNoSandbox = 6;
  Sandbox.kGpu = 7;
  Sandbox.kPrintCompositor = 8;
  Sandbox.kRenderer = 9;
  Sandbox.kSpeechRecognition = 10;
  Sandbox.kScreenAI = 11;
  Sandbox.kPpapi = 12;
  Sandbox.kPrintBackend = 13;
  Sandbox.kHardwareVideoDecoding = 14;
  Sandbox.kHardwareVideoEncoding = 15;
  Sandbox.kZygoteIntermediateSandbox = 16;
  Sandbox.MIN_VALUE = 0;
  Sandbox.MAX_VALUE = 16;

  Sandbox.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    }
    return false;
  };

  Sandbox.toKnownEnumValue = function(value) {
    return value;
  };

  Sandbox.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.Sandbox = Sandbox;
})();