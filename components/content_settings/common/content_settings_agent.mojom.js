// components/content_settings/common/content_settings_agent.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'components/content_settings/common/content_settings_agent.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('contentSettings.mojom');
  var content_settings$ =
      mojo.internal.exposeNamespace('contentSettings.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'components/content_settings/core/common/content_settings.mojom', '../core/common/content_settings.mojom.js');
  }



  function ContentSettingsAgent_SetAllowRunningInsecureContent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.prototype.initDefaults_ = function() {
  };
  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.encodedSize = codec.kStructHeaderSize + 0;

  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.decode = function(decoder) {
    var packed;
    var val = new ContentSettingsAgent_SetAllowRunningInsecureContent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  ContentSettingsAgent_SetAllowRunningInsecureContent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(ContentSettingsAgent_SetAllowRunningInsecureContent_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.prototype.initDefaults_ = function() {
  };
  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.encodedSize = codec.kStructHeaderSize + 0;

  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.decode = function(decoder) {
    var packed;
    var val = new ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function ContentSettingsAgent_SendRendererContentSettingRules_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  ContentSettingsAgent_SendRendererContentSettingRules_Params.prototype.initDefaults_ = function() {
    this.rendererSettings = null;
  };
  ContentSettingsAgent_SendRendererContentSettingRules_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  ContentSettingsAgent_SendRendererContentSettingRules_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ContentSettingsAgent_SendRendererContentSettingRules_Params.rendererSettings
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, content_settings$.RendererContentSettingRules, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  ContentSettingsAgent_SendRendererContentSettingRules_Params.encodedSize = codec.kStructHeaderSize + 8;

  ContentSettingsAgent_SendRendererContentSettingRules_Params.decode = function(decoder) {
    var packed;
    var val = new ContentSettingsAgent_SendRendererContentSettingRules_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.rendererSettings =
        decoder.decodeStructPointer(content_settings$.RendererContentSettingRules);
    return val;
  };

  ContentSettingsAgent_SendRendererContentSettingRules_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(ContentSettingsAgent_SendRendererContentSettingRules_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(content_settings$.RendererContentSettingRules, val.rendererSettings);
  };
  var kContentSettingsAgent_SetAllowRunningInsecureContent_Name = 1984964216;
  var kContentSettingsAgent_SetDisabledMixedContentUpgrades_Name = 1903353629;
  var kContentSettingsAgent_SendRendererContentSettingRules_Name = 1308169984;

  function ContentSettingsAgentPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(ContentSettingsAgent,
                                                   handleOrPtrInfo);
  }

  function ContentSettingsAgentAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        ContentSettingsAgent, associatedInterfacePtrInfo);
  }

  ContentSettingsAgentAssociatedPtr.prototype =
      Object.create(ContentSettingsAgentPtr.prototype);
  ContentSettingsAgentAssociatedPtr.prototype.constructor =
      ContentSettingsAgentAssociatedPtr;

  function ContentSettingsAgentProxy(receiver) {
    this.receiver_ = receiver;
  }
  ContentSettingsAgentPtr.prototype.setAllowRunningInsecureContent = function() {
    return ContentSettingsAgentProxy.prototype.setAllowRunningInsecureContent
        .apply(this.ptr.getProxy(), arguments);
  };

  ContentSettingsAgentProxy.prototype.setAllowRunningInsecureContent = function() {
    var params_ = new ContentSettingsAgent_SetAllowRunningInsecureContent_Params();
    var builder = new codec.MessageV0Builder(
        kContentSettingsAgent_SetAllowRunningInsecureContent_Name,
        codec.align(ContentSettingsAgent_SetAllowRunningInsecureContent_Params.encodedSize));
    builder.encodeStruct(ContentSettingsAgent_SetAllowRunningInsecureContent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  ContentSettingsAgentPtr.prototype.setDisabledMixedContentUpgrades = function() {
    return ContentSettingsAgentProxy.prototype.setDisabledMixedContentUpgrades
        .apply(this.ptr.getProxy(), arguments);
  };

  ContentSettingsAgentProxy.prototype.setDisabledMixedContentUpgrades = function() {
    var params_ = new ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params();
    var builder = new codec.MessageV0Builder(
        kContentSettingsAgent_SetDisabledMixedContentUpgrades_Name,
        codec.align(ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params.encodedSize));
    builder.encodeStruct(ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  ContentSettingsAgentPtr.prototype.sendRendererContentSettingRules = function() {
    return ContentSettingsAgentProxy.prototype.sendRendererContentSettingRules
        .apply(this.ptr.getProxy(), arguments);
  };

  ContentSettingsAgentProxy.prototype.sendRendererContentSettingRules = function(rendererSettings) {
    var params_ = new ContentSettingsAgent_SendRendererContentSettingRules_Params();
    params_.rendererSettings = rendererSettings;
    var builder = new codec.MessageV0Builder(
        kContentSettingsAgent_SendRendererContentSettingRules_Name,
        codec.align(ContentSettingsAgent_SendRendererContentSettingRules_Params.encodedSize));
    builder.encodeStruct(ContentSettingsAgent_SendRendererContentSettingRules_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function ContentSettingsAgentStub(delegate) {
    this.delegate_ = delegate;
  }
  ContentSettingsAgentStub.prototype.setAllowRunningInsecureContent = function() {
    return this.delegate_ && this.delegate_.setAllowRunningInsecureContent && this.delegate_.setAllowRunningInsecureContent();
  }
  ContentSettingsAgentStub.prototype.setDisabledMixedContentUpgrades = function() {
    return this.delegate_ && this.delegate_.setDisabledMixedContentUpgrades && this.delegate_.setDisabledMixedContentUpgrades();
  }
  ContentSettingsAgentStub.prototype.sendRendererContentSettingRules = function(rendererSettings) {
    return this.delegate_ && this.delegate_.sendRendererContentSettingRules && this.delegate_.sendRendererContentSettingRules(rendererSettings);
  }

  ContentSettingsAgentStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kContentSettingsAgent_SetAllowRunningInsecureContent_Name:
      var params = reader.decodeStruct(ContentSettingsAgent_SetAllowRunningInsecureContent_Params);
      this.setAllowRunningInsecureContent();
      return true;
    case kContentSettingsAgent_SetDisabledMixedContentUpgrades_Name:
      var params = reader.decodeStruct(ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params);
      this.setDisabledMixedContentUpgrades();
      return true;
    case kContentSettingsAgent_SendRendererContentSettingRules_Name:
      var params = reader.decodeStruct(ContentSettingsAgent_SendRendererContentSettingRules_Params);
      this.sendRendererContentSettingRules(params.rendererSettings);
      return true;
    default:
      return false;
    }
  };

  ContentSettingsAgentStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateContentSettingsAgentRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kContentSettingsAgent_SetAllowRunningInsecureContent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = ContentSettingsAgent_SetAllowRunningInsecureContent_Params;
      break;
      case kContentSettingsAgent_SetDisabledMixedContentUpgrades_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = ContentSettingsAgent_SetDisabledMixedContentUpgrades_Params;
      break;
      case kContentSettingsAgent_SendRendererContentSettingRules_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = ContentSettingsAgent_SendRendererContentSettingRules_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateContentSettingsAgentResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var ContentSettingsAgent = {
    name: 'content_settings.mojom.ContentSettingsAgent',
    kVersion: 0,
    ptrClass: ContentSettingsAgentPtr,
    proxyClass: ContentSettingsAgentProxy,
    stubClass: ContentSettingsAgentStub,
    validateRequest: validateContentSettingsAgentRequest,
    validateResponse: null,
  };
  ContentSettingsAgentStub.prototype.validator = validateContentSettingsAgentRequest;
  ContentSettingsAgentProxy.prototype.validator = null;
  exports.ContentSettingsAgent = ContentSettingsAgent;
  exports.ContentSettingsAgentPtr = ContentSettingsAgentPtr;
  exports.ContentSettingsAgentAssociatedPtr = ContentSettingsAgentAssociatedPtr;
})();