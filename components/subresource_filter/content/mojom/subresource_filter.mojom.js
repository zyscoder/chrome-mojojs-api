// components/subresource_filter/content/mojom/subresource_filter.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'components/subresource_filter/content/mojom/subresource_filter.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('subresourceFilter.mojom');
  var subresource_filter$ =
      mojo.internal.exposeNamespace('subresourceFilter.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'components/subresource_filter/core/mojom/subresource_filter.mojom', '../../core/mojom/subresource_filter.mojom.js');
  }
  var ad_evidence$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/ad_tagging/ad_evidence.mojom', '../../../../third_party/blink/public/mojom/ad_tagging/ad_evidence.mojom.js');
  }
  var tokens$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/tokens/tokens.mojom', '../../../../third_party/blink/public/mojom/tokens/tokens.mojom.js');
  }



  function SubresourceFilterAgent_ActivateForNextCommittedLoad_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.prototype.initDefaults_ = function() {
    this.activationState = null;
    this.adEvidence = null;
  };
  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.activationState
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, subresource_filter$.ActivationState, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.adEvidence
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, ad_evidence$.FrameAdEvidence, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.encodedSize = codec.kStructHeaderSize + 16;

  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterAgent_ActivateForNextCommittedLoad_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.activationState =
        decoder.decodeStructPointer(subresource_filter$.ActivationState);
    val.adEvidence =
        decoder.decodeStructPointer(ad_evidence$.FrameAdEvidence);
    return val;
  };

  SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(subresource_filter$.ActivationState, val.activationState);
    encoder.encodeStructPointer(ad_evidence$.FrameAdEvidence, val.adEvidence);
  };
  function SubresourceFilterHost_DidDisallowFirstSubresource_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_DidDisallowFirstSubresource_Params.prototype.initDefaults_ = function() {
  };
  SubresourceFilterHost_DidDisallowFirstSubresource_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_DidDisallowFirstSubresource_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_DidDisallowFirstSubresource_Params.encodedSize = codec.kStructHeaderSize + 0;

  SubresourceFilterHost_DidDisallowFirstSubresource_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_DidDisallowFirstSubresource_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SubresourceFilterHost_DidDisallowFirstSubresource_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_DidDisallowFirstSubresource_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SubresourceFilterHost_FrameIsAd_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_FrameIsAd_Params.prototype.initDefaults_ = function() {
  };
  SubresourceFilterHost_FrameIsAd_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_FrameIsAd_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_FrameIsAd_Params.encodedSize = codec.kStructHeaderSize + 0;

  SubresourceFilterHost_FrameIsAd_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_FrameIsAd_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SubresourceFilterHost_FrameIsAd_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_FrameIsAd_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SubresourceFilterHost_FrameWasCreatedByAdScript_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.prototype.initDefaults_ = function() {
  };
  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.encodedSize = codec.kStructHeaderSize + 0;

  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_FrameWasCreatedByAdScript_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SubresourceFilterHost_FrameWasCreatedByAdScript_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_FrameWasCreatedByAdScript_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.prototype.initDefaults_ = function() {
    this.fencedFrameRootPlaceholderToken = null;
  };
  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.fencedFrameRootPlaceholderToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, tokens$.RemoteFrameToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.encodedSize = codec.kStructHeaderSize + 8;

  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.fencedFrameRootPlaceholderToken =
        decoder.decodeStructPointer(tokens$.RemoteFrameToken);
    return val;
  };

  SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(tokens$.RemoteFrameToken, val.fencedFrameRootPlaceholderToken);
  };
  function SubresourceFilterHost_SetDocumentLoadStatistics_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_SetDocumentLoadStatistics_Params.prototype.initDefaults_ = function() {
    this.statistics = null;
  };
  SubresourceFilterHost_SetDocumentLoadStatistics_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_SetDocumentLoadStatistics_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SubresourceFilterHost_SetDocumentLoadStatistics_Params.statistics
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, subresource_filter$.DocumentLoadStatistics, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_SetDocumentLoadStatistics_Params.encodedSize = codec.kStructHeaderSize + 8;

  SubresourceFilterHost_SetDocumentLoadStatistics_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_SetDocumentLoadStatistics_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.statistics =
        decoder.decodeStructPointer(subresource_filter$.DocumentLoadStatistics);
    return val;
  };

  SubresourceFilterHost_SetDocumentLoadStatistics_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_SetDocumentLoadStatistics_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(subresource_filter$.DocumentLoadStatistics, val.statistics);
  };
  function SubresourceFilterHost_OnAdsViolationTriggered_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SubresourceFilterHost_OnAdsViolationTriggered_Params.prototype.initDefaults_ = function() {
    this.violation = 0;
  };
  SubresourceFilterHost_OnAdsViolationTriggered_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SubresourceFilterHost_OnAdsViolationTriggered_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SubresourceFilterHost_OnAdsViolationTriggered_Params.violation
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, subresource_filter$.AdsViolation);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SubresourceFilterHost_OnAdsViolationTriggered_Params.encodedSize = codec.kStructHeaderSize + 8;

  SubresourceFilterHost_OnAdsViolationTriggered_Params.decode = function(decoder) {
    var packed;
    var val = new SubresourceFilterHost_OnAdsViolationTriggered_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.violation =
        decoder.decodeStruct(new codec.Enum(subresource_filter$.AdsViolation));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SubresourceFilterHost_OnAdsViolationTriggered_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SubresourceFilterHost_OnAdsViolationTriggered_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.violation);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  var kSubresourceFilterAgent_ActivateForNextCommittedLoad_Name = 1132545486;

  function SubresourceFilterAgentPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SubresourceFilterAgent,
                                                   handleOrPtrInfo);
  }

  function SubresourceFilterAgentAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SubresourceFilterAgent, associatedInterfacePtrInfo);
  }

  SubresourceFilterAgentAssociatedPtr.prototype =
      Object.create(SubresourceFilterAgentPtr.prototype);
  SubresourceFilterAgentAssociatedPtr.prototype.constructor =
      SubresourceFilterAgentAssociatedPtr;

  function SubresourceFilterAgentProxy(receiver) {
    this.receiver_ = receiver;
  }
  SubresourceFilterAgentPtr.prototype.activateForNextCommittedLoad = function() {
    return SubresourceFilterAgentProxy.prototype.activateForNextCommittedLoad
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterAgentProxy.prototype.activateForNextCommittedLoad = function(activationState, adEvidence) {
    var params_ = new SubresourceFilterAgent_ActivateForNextCommittedLoad_Params();
    params_.activationState = activationState;
    params_.adEvidence = adEvidence;
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterAgent_ActivateForNextCommittedLoad_Name,
        codec.align(SubresourceFilterAgent_ActivateForNextCommittedLoad_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterAgent_ActivateForNextCommittedLoad_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SubresourceFilterAgentStub(delegate) {
    this.delegate_ = delegate;
  }
  SubresourceFilterAgentStub.prototype.activateForNextCommittedLoad = function(activationState, adEvidence) {
    return this.delegate_ && this.delegate_.activateForNextCommittedLoad && this.delegate_.activateForNextCommittedLoad(activationState, adEvidence);
  }

  SubresourceFilterAgentStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSubresourceFilterAgent_ActivateForNextCommittedLoad_Name:
      var params = reader.decodeStruct(SubresourceFilterAgent_ActivateForNextCommittedLoad_Params);
      this.activateForNextCommittedLoad(params.activationState, params.adEvidence);
      return true;
    default:
      return false;
    }
  };

  SubresourceFilterAgentStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateSubresourceFilterAgentRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSubresourceFilterAgent_ActivateForNextCommittedLoad_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterAgent_ActivateForNextCommittedLoad_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSubresourceFilterAgentResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var SubresourceFilterAgent = {
    name: 'subresource_filter.mojom.SubresourceFilterAgent',
    kVersion: 0,
    ptrClass: SubresourceFilterAgentPtr,
    proxyClass: SubresourceFilterAgentProxy,
    stubClass: SubresourceFilterAgentStub,
    validateRequest: validateSubresourceFilterAgentRequest,
    validateResponse: null,
  };
  SubresourceFilterAgentStub.prototype.validator = validateSubresourceFilterAgentRequest;
  SubresourceFilterAgentProxy.prototype.validator = null;
  var kSubresourceFilterHost_DidDisallowFirstSubresource_Name = 780796000;
  var kSubresourceFilterHost_FrameIsAd_Name = 1079774197;
  var kSubresourceFilterHost_FrameWasCreatedByAdScript_Name = 1345718301;
  var kSubresourceFilterHost_AdScriptDidCreateFencedFrame_Name = 1933224858;
  var kSubresourceFilterHost_SetDocumentLoadStatistics_Name = 540165187;
  var kSubresourceFilterHost_OnAdsViolationTriggered_Name = 1163041367;

  function SubresourceFilterHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SubresourceFilterHost,
                                                   handleOrPtrInfo);
  }

  function SubresourceFilterHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SubresourceFilterHost, associatedInterfacePtrInfo);
  }

  SubresourceFilterHostAssociatedPtr.prototype =
      Object.create(SubresourceFilterHostPtr.prototype);
  SubresourceFilterHostAssociatedPtr.prototype.constructor =
      SubresourceFilterHostAssociatedPtr;

  function SubresourceFilterHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  SubresourceFilterHostPtr.prototype.didDisallowFirstSubresource = function() {
    return SubresourceFilterHostProxy.prototype.didDisallowFirstSubresource
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.didDisallowFirstSubresource = function() {
    var params_ = new SubresourceFilterHost_DidDisallowFirstSubresource_Params();
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_DidDisallowFirstSubresource_Name,
        codec.align(SubresourceFilterHost_DidDisallowFirstSubresource_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_DidDisallowFirstSubresource_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SubresourceFilterHostPtr.prototype.frameIsAd = function() {
    return SubresourceFilterHostProxy.prototype.frameIsAd
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.frameIsAd = function() {
    var params_ = new SubresourceFilterHost_FrameIsAd_Params();
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_FrameIsAd_Name,
        codec.align(SubresourceFilterHost_FrameIsAd_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_FrameIsAd_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SubresourceFilterHostPtr.prototype.frameWasCreatedByAdScript = function() {
    return SubresourceFilterHostProxy.prototype.frameWasCreatedByAdScript
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.frameWasCreatedByAdScript = function() {
    var params_ = new SubresourceFilterHost_FrameWasCreatedByAdScript_Params();
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_FrameWasCreatedByAdScript_Name,
        codec.align(SubresourceFilterHost_FrameWasCreatedByAdScript_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_FrameWasCreatedByAdScript_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SubresourceFilterHostPtr.prototype.adScriptDidCreateFencedFrame = function() {
    return SubresourceFilterHostProxy.prototype.adScriptDidCreateFencedFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.adScriptDidCreateFencedFrame = function(fencedFrameRootPlaceholderToken) {
    var params_ = new SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params();
    params_.fencedFrameRootPlaceholderToken = fencedFrameRootPlaceholderToken;
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_AdScriptDidCreateFencedFrame_Name,
        codec.align(SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SubresourceFilterHostPtr.prototype.setDocumentLoadStatistics = function() {
    return SubresourceFilterHostProxy.prototype.setDocumentLoadStatistics
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.setDocumentLoadStatistics = function(statistics) {
    var params_ = new SubresourceFilterHost_SetDocumentLoadStatistics_Params();
    params_.statistics = statistics;
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_SetDocumentLoadStatistics_Name,
        codec.align(SubresourceFilterHost_SetDocumentLoadStatistics_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_SetDocumentLoadStatistics_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SubresourceFilterHostPtr.prototype.onAdsViolationTriggered = function() {
    return SubresourceFilterHostProxy.prototype.onAdsViolationTriggered
        .apply(this.ptr.getProxy(), arguments);
  };

  SubresourceFilterHostProxy.prototype.onAdsViolationTriggered = function(violation) {
    var params_ = new SubresourceFilterHost_OnAdsViolationTriggered_Params();
    params_.violation = violation;
    var builder = new codec.MessageV0Builder(
        kSubresourceFilterHost_OnAdsViolationTriggered_Name,
        codec.align(SubresourceFilterHost_OnAdsViolationTriggered_Params.encodedSize));
    builder.encodeStruct(SubresourceFilterHost_OnAdsViolationTriggered_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SubresourceFilterHostStub(delegate) {
    this.delegate_ = delegate;
  }
  SubresourceFilterHostStub.prototype.didDisallowFirstSubresource = function() {
    return this.delegate_ && this.delegate_.didDisallowFirstSubresource && this.delegate_.didDisallowFirstSubresource();
  }
  SubresourceFilterHostStub.prototype.frameIsAd = function() {
    return this.delegate_ && this.delegate_.frameIsAd && this.delegate_.frameIsAd();
  }
  SubresourceFilterHostStub.prototype.frameWasCreatedByAdScript = function() {
    return this.delegate_ && this.delegate_.frameWasCreatedByAdScript && this.delegate_.frameWasCreatedByAdScript();
  }
  SubresourceFilterHostStub.prototype.adScriptDidCreateFencedFrame = function(fencedFrameRootPlaceholderToken) {
    return this.delegate_ && this.delegate_.adScriptDidCreateFencedFrame && this.delegate_.adScriptDidCreateFencedFrame(fencedFrameRootPlaceholderToken);
  }
  SubresourceFilterHostStub.prototype.setDocumentLoadStatistics = function(statistics) {
    return this.delegate_ && this.delegate_.setDocumentLoadStatistics && this.delegate_.setDocumentLoadStatistics(statistics);
  }
  SubresourceFilterHostStub.prototype.onAdsViolationTriggered = function(violation) {
    return this.delegate_ && this.delegate_.onAdsViolationTriggered && this.delegate_.onAdsViolationTriggered(violation);
  }

  SubresourceFilterHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSubresourceFilterHost_DidDisallowFirstSubresource_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_DidDisallowFirstSubresource_Params);
      this.didDisallowFirstSubresource();
      return true;
    case kSubresourceFilterHost_FrameIsAd_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_FrameIsAd_Params);
      this.frameIsAd();
      return true;
    case kSubresourceFilterHost_FrameWasCreatedByAdScript_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_FrameWasCreatedByAdScript_Params);
      this.frameWasCreatedByAdScript();
      return true;
    case kSubresourceFilterHost_AdScriptDidCreateFencedFrame_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params);
      this.adScriptDidCreateFencedFrame(params.fencedFrameRootPlaceholderToken);
      return true;
    case kSubresourceFilterHost_SetDocumentLoadStatistics_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_SetDocumentLoadStatistics_Params);
      this.setDocumentLoadStatistics(params.statistics);
      return true;
    case kSubresourceFilterHost_OnAdsViolationTriggered_Name:
      var params = reader.decodeStruct(SubresourceFilterHost_OnAdsViolationTriggered_Params);
      this.onAdsViolationTriggered(params.violation);
      return true;
    default:
      return false;
    }
  };

  SubresourceFilterHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateSubresourceFilterHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSubresourceFilterHost_DidDisallowFirstSubresource_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_DidDisallowFirstSubresource_Params;
      break;
      case kSubresourceFilterHost_FrameIsAd_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_FrameIsAd_Params;
      break;
      case kSubresourceFilterHost_FrameWasCreatedByAdScript_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_FrameWasCreatedByAdScript_Params;
      break;
      case kSubresourceFilterHost_AdScriptDidCreateFencedFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_AdScriptDidCreateFencedFrame_Params;
      break;
      case kSubresourceFilterHost_SetDocumentLoadStatistics_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_SetDocumentLoadStatistics_Params;
      break;
      case kSubresourceFilterHost_OnAdsViolationTriggered_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SubresourceFilterHost_OnAdsViolationTriggered_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSubresourceFilterHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var SubresourceFilterHost = {
    name: 'subresource_filter.mojom.SubresourceFilterHost',
    kVersion: 0,
    ptrClass: SubresourceFilterHostPtr,
    proxyClass: SubresourceFilterHostProxy,
    stubClass: SubresourceFilterHostStub,
    validateRequest: validateSubresourceFilterHostRequest,
    validateResponse: null,
  };
  SubresourceFilterHostStub.prototype.validator = validateSubresourceFilterHostRequest;
  SubresourceFilterHostProxy.prototype.validator = null;
  exports.SubresourceFilterAgent = SubresourceFilterAgent;
  exports.SubresourceFilterAgentPtr = SubresourceFilterAgentPtr;
  exports.SubresourceFilterAgentAssociatedPtr = SubresourceFilterAgentAssociatedPtr;
  exports.SubresourceFilterHost = SubresourceFilterHost;
  exports.SubresourceFilterHostPtr = SubresourceFilterHostPtr;
  exports.SubresourceFilterHostAssociatedPtr = SubresourceFilterHostAssociatedPtr;
})();