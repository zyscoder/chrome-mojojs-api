// components/ml/mojom/ml_service.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'components/ml/mojom/ml_service.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('ml.modelLoader.mojom');
  var web_platform_model$ =
      mojo.internal.exposeNamespace('ml.modelLoader.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'components/ml/mojom/web_platform_model.mojom', 'web_platform_model.mojom.js');
  }



  function MLService_CreateModelLoader_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MLService_CreateModelLoader_Params.prototype.initDefaults_ = function() {
    this.options = null;
  };
  MLService_CreateModelLoader_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MLService_CreateModelLoader_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MLService_CreateModelLoader_Params.options
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, web_platform_model$.CreateModelLoaderOptions, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MLService_CreateModelLoader_Params.encodedSize = codec.kStructHeaderSize + 8;

  MLService_CreateModelLoader_Params.decode = function(decoder) {
    var packed;
    var val = new MLService_CreateModelLoader_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.options =
        decoder.decodeStructPointer(web_platform_model$.CreateModelLoaderOptions);
    return val;
  };

  MLService_CreateModelLoader_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MLService_CreateModelLoader_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(web_platform_model$.CreateModelLoaderOptions, val.options);
  };
  function MLService_CreateModelLoader_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MLService_CreateModelLoader_ResponseParams.prototype.initDefaults_ = function() {
    this.result = 0;
    this.remote = new web_platform_model$.ModelLoaderPtr();
  };
  MLService_CreateModelLoader_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MLService_CreateModelLoader_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MLService_CreateModelLoader_ResponseParams.result
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, web_platform_model$.CreateModelLoaderResult);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MLService_CreateModelLoader_ResponseParams.remote
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 4, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MLService_CreateModelLoader_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  MLService_CreateModelLoader_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new MLService_CreateModelLoader_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStruct(new codec.Enum(web_platform_model$.CreateModelLoaderResult));
    val.remote =
        decoder.decodeStruct(new codec.NullableInterface(web_platform_model$.ModelLoaderPtr));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  MLService_CreateModelLoader_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MLService_CreateModelLoader_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.result);
    encoder.encodeStruct(new codec.NullableInterface(web_platform_model$.ModelLoaderPtr), val.remote);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  var kMLService_CreateModelLoader_Name = 1251679735;

  function MLServicePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(MLService,
                                                   handleOrPtrInfo);
  }

  function MLServiceAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        MLService, associatedInterfacePtrInfo);
  }

  MLServiceAssociatedPtr.prototype =
      Object.create(MLServicePtr.prototype);
  MLServiceAssociatedPtr.prototype.constructor =
      MLServiceAssociatedPtr;

  function MLServiceProxy(receiver) {
    this.receiver_ = receiver;
  }
  MLServicePtr.prototype.createModelLoader = function() {
    return MLServiceProxy.prototype.createModelLoader
        .apply(this.ptr.getProxy(), arguments);
  };

  MLServiceProxy.prototype.createModelLoader = function(options) {
    var params_ = new MLService_CreateModelLoader_Params();
    params_.options = options;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kMLService_CreateModelLoader_Name,
          codec.align(MLService_CreateModelLoader_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(MLService_CreateModelLoader_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(MLService_CreateModelLoader_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function MLServiceStub(delegate) {
    this.delegate_ = delegate;
  }
  MLServiceStub.prototype.createModelLoader = function(options) {
    return this.delegate_ && this.delegate_.createModelLoader && this.delegate_.createModelLoader(options);
  }

  MLServiceStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  MLServiceStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kMLService_CreateModelLoader_Name:
      var params = reader.decodeStruct(MLService_CreateModelLoader_Params);
      this.createModelLoader(params.options).then(function(response) {
        var responseParams =
            new MLService_CreateModelLoader_ResponseParams();
        responseParams.result = response.result;
        responseParams.remote = response.remote;
        var builder = new codec.MessageV1Builder(
            kMLService_CreateModelLoader_Name,
            codec.align(MLService_CreateModelLoader_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(MLService_CreateModelLoader_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateMLServiceRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kMLService_CreateModelLoader_Name:
        if (message.expectsResponse())
          paramsClass = MLService_CreateModelLoader_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateMLServiceResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kMLService_CreateModelLoader_Name:
        if (message.isResponse())
          paramsClass = MLService_CreateModelLoader_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var MLService = {
    name: 'ml.model_loader.mojom.MLService',
    kVersion: 0,
    ptrClass: MLServicePtr,
    proxyClass: MLServiceProxy,
    stubClass: MLServiceStub,
    validateRequest: validateMLServiceRequest,
    validateResponse: validateMLServiceResponse,
  };
  MLServiceStub.prototype.validator = validateMLServiceRequest;
  MLServiceProxy.prototype.validator = validateMLServiceResponse;
  exports.MLService = MLService;
  exports.MLServicePtr = MLServicePtr;
  exports.MLServiceAssociatedPtr = MLServiceAssociatedPtr;
})();