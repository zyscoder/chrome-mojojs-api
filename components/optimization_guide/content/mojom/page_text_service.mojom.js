// components/optimization_guide/content/mojom/page_text_service.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'components/optimization_guide/content/mojom/page_text_service.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('optimizationGuide.mojom');
  var string16$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/string16.mojom', '../../../../mojo/public/mojom/base/string16.mojom.js');
  }


  var TextDumpEvent = {};
  TextDumpEvent.kFirstLayout = 0;
  TextDumpEvent.kFinishedLoad = 1;
  TextDumpEvent.MIN_VALUE = 0;
  TextDumpEvent.MAX_VALUE = 1;

  TextDumpEvent.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  TextDumpEvent.toKnownEnumValue = function(value) {
    return value;
  };

  TextDumpEvent.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function PageTextDumpRequest(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageTextDumpRequest.prototype.initDefaults_ = function() {
    this.maxSize = 0;
    this.event = 0;
  };
  PageTextDumpRequest.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageTextDumpRequest.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate PageTextDumpRequest.event
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, TextDumpEvent);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageTextDumpRequest.encodedSize = codec.kStructHeaderSize + 8;

  PageTextDumpRequest.decode = function(decoder) {
    var packed;
    var val = new PageTextDumpRequest();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.maxSize =
        decoder.decodeStruct(codec.Uint32);
    val.event =
        decoder.decodeStruct(new codec.Enum(TextDumpEvent));
    return val;
  };

  PageTextDumpRequest.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageTextDumpRequest.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.maxSize);
    encoder.encodeStruct(codec.Int32, val.event);
  };
  function PageTextConsumer_OnTextDumpChunk_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageTextConsumer_OnTextDumpChunk_Params.prototype.initDefaults_ = function() {
    this.chunk = null;
  };
  PageTextConsumer_OnTextDumpChunk_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageTextConsumer_OnTextDumpChunk_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageTextConsumer_OnTextDumpChunk_Params.chunk
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageTextConsumer_OnTextDumpChunk_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageTextConsumer_OnTextDumpChunk_Params.decode = function(decoder) {
    var packed;
    var val = new PageTextConsumer_OnTextDumpChunk_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.chunk =
        decoder.decodeStructPointer(string16$.String16);
    return val;
  };

  PageTextConsumer_OnTextDumpChunk_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageTextConsumer_OnTextDumpChunk_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.chunk);
  };
  function PageTextConsumer_OnChunksEnd_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageTextConsumer_OnChunksEnd_Params.prototype.initDefaults_ = function() {
  };
  PageTextConsumer_OnChunksEnd_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageTextConsumer_OnChunksEnd_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageTextConsumer_OnChunksEnd_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageTextConsumer_OnChunksEnd_Params.decode = function(decoder) {
    var packed;
    var val = new PageTextConsumer_OnChunksEnd_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageTextConsumer_OnChunksEnd_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageTextConsumer_OnChunksEnd_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageTextService_RequestPageTextDump_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageTextService_RequestPageTextDump_Params.prototype.initDefaults_ = function() {
    this.request = null;
    this.consumer = new PageTextConsumerPtr();
  };
  PageTextService_RequestPageTextDump_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageTextService_RequestPageTextDump_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageTextService_RequestPageTextDump_Params.request
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, PageTextDumpRequest, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageTextService_RequestPageTextDump_Params.consumer
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 8, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageTextService_RequestPageTextDump_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageTextService_RequestPageTextDump_Params.decode = function(decoder) {
    var packed;
    var val = new PageTextService_RequestPageTextDump_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.request =
        decoder.decodeStructPointer(PageTextDumpRequest);
    val.consumer =
        decoder.decodeStruct(new codec.Interface(PageTextConsumerPtr));
    return val;
  };

  PageTextService_RequestPageTextDump_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageTextService_RequestPageTextDump_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(PageTextDumpRequest, val.request);
    encoder.encodeStruct(new codec.Interface(PageTextConsumerPtr), val.consumer);
  };
  var kPageTextConsumer_OnTextDumpChunk_Name = 486878988;
  var kPageTextConsumer_OnChunksEnd_Name = 1212453825;

  function PageTextConsumerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageTextConsumer,
                                                   handleOrPtrInfo);
  }

  function PageTextConsumerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageTextConsumer, associatedInterfacePtrInfo);
  }

  PageTextConsumerAssociatedPtr.prototype =
      Object.create(PageTextConsumerPtr.prototype);
  PageTextConsumerAssociatedPtr.prototype.constructor =
      PageTextConsumerAssociatedPtr;

  function PageTextConsumerProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageTextConsumerPtr.prototype.onTextDumpChunk = function() {
    return PageTextConsumerProxy.prototype.onTextDumpChunk
        .apply(this.ptr.getProxy(), arguments);
  };

  PageTextConsumerProxy.prototype.onTextDumpChunk = function(chunk) {
    var params_ = new PageTextConsumer_OnTextDumpChunk_Params();
    params_.chunk = chunk;
    var builder = new codec.MessageV0Builder(
        kPageTextConsumer_OnTextDumpChunk_Name,
        codec.align(PageTextConsumer_OnTextDumpChunk_Params.encodedSize));
    builder.encodeStruct(PageTextConsumer_OnTextDumpChunk_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageTextConsumerPtr.prototype.onChunksEnd = function() {
    return PageTextConsumerProxy.prototype.onChunksEnd
        .apply(this.ptr.getProxy(), arguments);
  };

  PageTextConsumerProxy.prototype.onChunksEnd = function() {
    var params_ = new PageTextConsumer_OnChunksEnd_Params();
    var builder = new codec.MessageV0Builder(
        kPageTextConsumer_OnChunksEnd_Name,
        codec.align(PageTextConsumer_OnChunksEnd_Params.encodedSize));
    builder.encodeStruct(PageTextConsumer_OnChunksEnd_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageTextConsumerStub(delegate) {
    this.delegate_ = delegate;
  }
  PageTextConsumerStub.prototype.onTextDumpChunk = function(chunk) {
    return this.delegate_ && this.delegate_.onTextDumpChunk && this.delegate_.onTextDumpChunk(chunk);
  }
  PageTextConsumerStub.prototype.onChunksEnd = function() {
    return this.delegate_ && this.delegate_.onChunksEnd && this.delegate_.onChunksEnd();
  }

  PageTextConsumerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageTextConsumer_OnTextDumpChunk_Name:
      var params = reader.decodeStruct(PageTextConsumer_OnTextDumpChunk_Params);
      this.onTextDumpChunk(params.chunk);
      return true;
    case kPageTextConsumer_OnChunksEnd_Name:
      var params = reader.decodeStruct(PageTextConsumer_OnChunksEnd_Params);
      this.onChunksEnd();
      return true;
    default:
      return false;
    }
  };

  PageTextConsumerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageTextConsumerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageTextConsumer_OnTextDumpChunk_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageTextConsumer_OnTextDumpChunk_Params;
      break;
      case kPageTextConsumer_OnChunksEnd_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageTextConsumer_OnChunksEnd_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageTextConsumerResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PageTextConsumer = {
    name: 'optimization_guide.mojom.PageTextConsumer',
    kVersion: 0,
    ptrClass: PageTextConsumerPtr,
    proxyClass: PageTextConsumerProxy,
    stubClass: PageTextConsumerStub,
    validateRequest: validatePageTextConsumerRequest,
    validateResponse: null,
  };
  PageTextConsumerStub.prototype.validator = validatePageTextConsumerRequest;
  PageTextConsumerProxy.prototype.validator = null;
  var kPageTextService_RequestPageTextDump_Name = 1832489913;

  function PageTextServicePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageTextService,
                                                   handleOrPtrInfo);
  }

  function PageTextServiceAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageTextService, associatedInterfacePtrInfo);
  }

  PageTextServiceAssociatedPtr.prototype =
      Object.create(PageTextServicePtr.prototype);
  PageTextServiceAssociatedPtr.prototype.constructor =
      PageTextServiceAssociatedPtr;

  function PageTextServiceProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageTextServicePtr.prototype.requestPageTextDump = function() {
    return PageTextServiceProxy.prototype.requestPageTextDump
        .apply(this.ptr.getProxy(), arguments);
  };

  PageTextServiceProxy.prototype.requestPageTextDump = function(request, consumer) {
    var params_ = new PageTextService_RequestPageTextDump_Params();
    params_.request = request;
    params_.consumer = consumer;
    var builder = new codec.MessageV0Builder(
        kPageTextService_RequestPageTextDump_Name,
        codec.align(PageTextService_RequestPageTextDump_Params.encodedSize));
    builder.encodeStruct(PageTextService_RequestPageTextDump_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageTextServiceStub(delegate) {
    this.delegate_ = delegate;
  }
  PageTextServiceStub.prototype.requestPageTextDump = function(request, consumer) {
    return this.delegate_ && this.delegate_.requestPageTextDump && this.delegate_.requestPageTextDump(request, consumer);
  }

  PageTextServiceStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageTextService_RequestPageTextDump_Name:
      var params = reader.decodeStruct(PageTextService_RequestPageTextDump_Params);
      this.requestPageTextDump(params.request, params.consumer);
      return true;
    default:
      return false;
    }
  };

  PageTextServiceStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageTextServiceRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageTextService_RequestPageTextDump_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageTextService_RequestPageTextDump_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageTextServiceResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PageTextService = {
    name: 'optimization_guide.mojom.PageTextService',
    kVersion: 0,
    ptrClass: PageTextServicePtr,
    proxyClass: PageTextServiceProxy,
    stubClass: PageTextServiceStub,
    validateRequest: validatePageTextServiceRequest,
    validateResponse: null,
  };
  PageTextServiceStub.prototype.validator = validatePageTextServiceRequest;
  PageTextServiceProxy.prototype.validator = null;
  exports.TextDumpEvent = TextDumpEvent;
  exports.PageTextDumpRequest = PageTextDumpRequest;
  exports.PageTextConsumer = PageTextConsumer;
  exports.PageTextConsumerPtr = PageTextConsumerPtr;
  exports.PageTextConsumerAssociatedPtr = PageTextConsumerAssociatedPtr;
  exports.PageTextService = PageTextService;
  exports.PageTextServicePtr = PageTextServicePtr;
  exports.PageTextServiceAssociatedPtr = PageTextServiceAssociatedPtr;
})();